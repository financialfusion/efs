package com.ffusion.alert.db;

import com.ffusion.alert.interfaces.AEDBParams;
import com.ffusion.alert.shared.AlertVersion;

public class AERepository
  extends DBBaseRepository
{
  public static final String fb = "com.ffusion.alert.version";
  public static final String fe = "AE_Seq";
  public static final String ff = "{|||id,|}";
  public static final String fd = "{|||AE_Seq.nextval,|}";
  private static final String fa = "AE_Repository";
  private static final DBBaseRepository.a[] fc = { new DBBaseRepository.a("{|||create sequence AE_Seq|}", "{|||drop sequence AE_Seq|}"), new DBBaseRepository.a("create table AE_Repository(version {int|numeric(8,0)|int|int|int} not null primary key,properties {long varchar|text|clob(1G)|clob|text} not null){| lock datarows |||}", "drop table AE_Repository"), new DBBaseRepository.a("insert into AE_Repository(version, properties) values(2,'com.ffusion.alert.version " + AlertVersion.a() + "')", null), new DBBaseRepository.a("create table AE_Cluster(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,userName  varchar{|||2|}(255)  {null|null||null|null} ,password  varchar{|||2|}(255)  {null|null||null|null} ,serverURL  varchar{|||2|}(255) not null,contextFactory  varchar{|||2|}(255) not null,adminjndi  varchar{|||2|}(255) not null,clientjndi  varchar{|||2|}(255) not null,serverRole int not null,pingTime {timestamp|datetime|timestamp|date|datetime} not null,active {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null){| lock datarows |||}", "drop table AE_Cluster"), new DBBaseRepository.a("create table AE_Application(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,name  varchar{|||2|}(255) not null unique,password  varchar{|||2|}(255)  {null|null||null|null} ){| lock datarows |||}", "drop table AE_Application"), new DBBaseRepository.a("create table AE_Channel(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,className varchar{|||2|}(255) not null,initInfo {long varchar|text|clob(1G)|clob|text}  {null|null||null|null} ,numInstances int not null,numWorkers int not null,name varchar{|||2|}(255)  {null|null||null|null} {unique|unique||unique|unique},appId {int|numeric(8,0)|int|int|int}  {null|null||null|null} references AE_Application,properties int not null){| lock datarows |||}", "drop table AE_Channel"), new DBBaseRepository.a("create table AE_Alert(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,type int not null,priority int not null,appId {int|numeric(8,0)|int|int|int} not null references AE_Application,userId varchar{|||2|}(255)  {null|null||null|null} ,messageInfo {long binary|image|blob(1G)|blob|image} not null,properties int not null,startDate {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,endDate {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,interval {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,intervalType int not null,timeZone {long binary|image|blob(1G)|blob|image} not null,sequence int not null,nextRaised {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,lastScheduled {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null){| lock datarows |||}", "drop table AE_Alert"), new DBBaseRepository.a("create index AE_AlertNext on AE_Alert(nextRaised) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_AlertSeqId on AE_Alert(sequence desc, id desc) {||allow reverse scans||}", null), new DBBaseRepository.a("create unique index AE_AlertIdNextSeq on AE_Alert(id{,|,|) include(|,|,}nextRaised,sequence) {||allow reverse scans||}", null), new DBBaseRepository.a("create unique index AE_AlertIdLast on AE_Alert(id{,|,|) include(|,|,}lastScheduled) {||allow reverse scans||}", null), new DBBaseRepository.a("create unique index AE_AlrtIdSqNxtLast on AE_Alert(id{,|,|) include(|,|,}sequence,nextRaised,lastScheduled) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_AlertAppIdNext on AE_Alert(appId,id,nextRaised) {||allow reverse scans||}", null), new DBBaseRepository.a("create table AE_DeliveryInfo(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,alertId {int|numeric(8,0)|int|int|int} not null {references||references|references|references} {AE_Alert||AE_Alert|AE_Alert|AE_Alert} {on delete cascade||on delete cascade|on delete cascade|on delete cascade} ,deliveryOrder int not null,channelId {int|numeric(8,0)|int|int|int} not null references AE_Channel,deliveryString {long varchar|text|clob(1G)|clob|text} not null,maxDelay {bigint|numeric(19,0)|bigint|number(19,0)|bigint}  {null|null||null|null} ,properties int not null){| lock datarows |||}", "drop table AE_DeliveryInfo"), new DBBaseRepository.a("{|create trigger AE_DInfoAIdInsUpd on AE_DeliveryInfo for insert, update as if @@rowcount = 0 return\r\ndeclare @count integer\r\nselect @count = count(*) from inserted\r\nif (select count(*) from inserted, AE_Alert where inserted.alertId = AE_Alert.id) != @count begin\r\nrollback trigger with\r\nraiserror 90500 'Integrity constraint violation on AE_DeliveryInfo.alertId.'\r\nend\r\n|||}", null), new DBBaseRepository.a("{|create trigger AE_AlertDInfoCascade on AE_Alert for delete as if @@rowcount = 0 return\r\ndelete from AE_DeliveryInfo where AE_DeliveryInfo.alertId in (select id from deleted)\r\n|||}", null), new DBBaseRepository.a("create index AE_DInfoAlertOrder on AE_DeliveryInfo(alertId,deliveryOrder) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_DInfoAIdCId on AE_DeliveryInfo(alertId desc,channelId desc) {||allow reverse scans||}", null), new DBBaseRepository.a("create table AE_AuditLog(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,alertId {int|numeric(8,0)|int|int|int}  {null|null||null|null} ,alertSequence int {null|null||null|null} ,channelId {int|numeric(8,0)|int|int|int}  {null|null||null|null} ,deliveryInfoId {int|numeric(8,0)|int|int|int}  {null|null||null|null} ,auditTime {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,auditType int not null,status int not null,timeInfo {bigint|numeric(19,0)|bigint|number(19,0)|bigint}  {null|null||null|null} ,deliveryOrder int {null|null||null|null} ,channelName varchar{|||2|}(255)  {null|null||null|null} ,deliveryString {long varchar|text|clob(1G)|clob|text}  {null|null||null|null} ,maxDelay {bigint|numeric(19,0)|bigint|number(19,0)|bigint}  {null|null||null|null} ,properties int {null|null||null|null} ,appId int {null|null||null|null} ,appName varchar{|||2|}(255)  {null|null||null|null} ,userId varchar{|||2|}(255)  {null|null||null|null} ){| lock datarows |||}", "drop table AE_AuditLog"), new DBBaseRepository.a("create index AE_ALogTypeAidAsq on AE_AuditLog(auditType,alertId,alertSequence) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_ALogTime on AE_AuditLog(auditTime) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_ALTyTiSeqAidId on AE_AuditLog(auditType,auditTime,alertSequence,alertId,id) {||allow reverse scans||}", null), new DBBaseRepository.a("create table AE_CrashRecovery(id {int|numeric(8,0)|int|int|int}  {identity not null primary key|identity not null primary key|not null primary key generated always as identity|not null primary key|identity not null primary key}  ,alertId {int|numeric(8,0)|int|int|int}  {null|null||null|null}  {references||references|references|references} {AE_Alert||AE_Alert|AE_Alert|AE_Alert} {on delete cascade||on delete cascade|on delete cascade|on delete cascade}  ,alertSequence int {null|null||null|null} ,channelId {int|numeric(8,0)|int|int|int}  {null|null||null|null} references AE_Channel,deliveryInfoId {int|numeric(8,0)|int|int|int}  {null|null||null|null}  {references||references|references|references} {AE_DeliveryInfo||AE_DeliveryInfo|AE_DeliveryInfo|AE_DeliveryInfo} {on delete cascade||on delete cascade|on delete cascade|} ,auditTime {bigint|numeric(19,0)|bigint|number(19,0)|bigint} not null,auditType int not null,status int not null,timeInfo {bigint|numeric(19,0)|bigint|number(19,0)|bigint}  {null|null||null|null} ){| lock datarows |||}", "drop table AE_CrashRecovery"), new DBBaseRepository.a("{|create trigger AE_CRAlertDInfoCascade on AE_Alert for delete as if @@rowcount = 0 return\r\ndelete from AE_CrashRecovery where AE_CrashRecovery.alertId in (select id from deleted)\r\n|||}", null), new DBBaseRepository.a("{|create trigger AE_CRDeliveryInfoDInfoCascade on AE_DeliveryInfo for delete as if @@rowcount = 0 return\r\ndelete from AE_CrashRecovery where AE_CrashRecovery.deliveryInfoId in (select id from deleted)\r\n|||}", null), new DBBaseRepository.a("create index AE_CRTypeAidAsq on AE_CrashRecovery(auditType,alertId,alertSequence) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRLogTime on AE_CrashRecovery(auditTime) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRTySeqAidId on AE_CrashRecovery(auditType,alertSequence,alertId,id) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRTyTiSeqAidId on AE_CrashRecovery(auditType,auditTime,alertSequence,alertId,id) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRTyAidIdSeq on AE_CrashRecovery(auditType,alertId,id,alertSequence) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRTyAIdSeq on AE_CrashRecovery(auditType,alertId,alertSequence desc) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRAIdSeq on AE_CrashRecovery(alertId desc,alertSequence desc) {||allow reverse scans||}", null), new DBBaseRepository.a("create index AE_CRDIIdAIdSeq on AE_CrashRecovery(deliveryInfoId,alertId,alertSequence) {||allow reverse scans||}", null), new DBBaseRepository.a("{ create view AE_ALogMaxSeqDisp as select cr.alertId, cr.alertSequence,cr.timeInfo from AE_CrashRecovery cr where cr.auditType=1 and cr.id=( select max(cr2.id) from AE_CrashRecovery cr2 where cr2.alertId=cr.alertId and cr2.auditType=1 and cr2.alertSequence=( select max(cr3.alertSequence) from AE_CrashRecovery cr3 where cr3.alertId=cr2.alertId and cr3.auditType=1) ) | create view AE_ALogMaxSeqDisp as select cr.alertId, cr.alertSequence,cr.timeInfo from AE_CrashRecovery cr where cr.auditType=1 and cr.id=( select max(cr2.id) from AE_CrashRecovery cr2 where cr2.alertId=cr.alertId and cr2.auditType=1 and cr2.alertSequence=( select max(cr3.alertSequence) from AE_CrashRecovery cr3 where cr3.alertId=cr2.alertId and cr3.auditType=1) ) | create view AE_ALogMaxSeqDisp as select cr.alertId, cr.alertSequence,cr.timeInfo from AE_CrashRecovery cr, (select cr2.alertId, max(cr2.id) Mid from AE_CrashRecovery cr2, (select alertId, max(alertSequence) as MalertSequence from AE_CrashRecovery where auditType=1 group by alertId ) cr3 where cr2.auditType=1 and cr2.alertSequence=cr3.MalertSequence and cr2.alertId=cr3.alertId group by cr2.alertId ) cr21 where cr.auditType=1 and cr.id=cr21.Mid and cr21.alertId=cr.alertId| create view AE_ALogMaxSeqDisp as select cr.alertId, cr.alertSequence,cr.timeInfo from AE_CrashRecovery cr, (select cr2.alertId, max(cr2.id) Mid from AE_CrashRecovery cr2, (select alertId, max(alertSequence) as MalertSequence from AE_CrashRecovery where auditType=1 group by alertId ) cr3 where cr2.auditType=1 and cr2.alertSequence=cr3.MalertSequence and cr2.alertId=cr3.alertId group by cr2.alertId ) cr21 where cr.auditType=1 and cr.id=cr21.Mid and cr21.alertId=cr.alertId| create view AE_ALogMaxSeqDisp as select cr.alertId, cr.alertSequence,cr.timeInfo from AE_CrashRecovery cr where cr.auditType=1 and cr.id=( select max(cr2.id) from AE_CrashRecovery cr2 where cr2.alertId=cr.alertId and cr2.auditType=1 and cr2.alertSequence=( select max(cr3.alertSequence) from AE_CrashRecovery cr3 where cr3.alertId=cr2.alertId and cr3.auditType=1) ) }", "drop view AE_ALogMaxSeqDisp"), new DBBaseRepository.a("create view AE_DInfoALogIdeal as select cr.alertId, cr.alertSequence, cr.timeInfo, di.id as deliveryInfoId, di.deliveryOrder from AE_CrashRecovery cr, AE_DeliveryInfo di where cr.alertId=di.alertId and cr.id=( select max(id) from AE_CrashRecovery cr2 where cr2.alertId=cr.alertId and cr2.alertSequence=cr.alertSequence and cr2.auditType=1 and not exists(select * from AE_CrashRecovery cr3 where cr3.alertId=cr2.alertId and cr3.alertSequence=cr2.alertSequence and cr3.auditType=3) ) ", "drop view AE_DInfoALogIdeal") };
  
  public AERepository(AEDBParams paramAEDBParams, int paramInt)
  {
    super(paramAEDBParams, paramInt, "AE_Seq");
  }
  
  protected String aR()
  {
    return "AE_Repository";
  }
  
  protected DBBaseRepository.a[] aQ()
  {
    return fc;
  }
}


/* Location:           D:\drops\jd\jars\UAE20.jar
 * Qualified Name:     com.ffusion.alert.db.AERepository
 * JD-Core Version:    0.7.0.1
 */