package com.ffusion.ffs.bpw.db;

public abstract interface SQLConsts
{
  public static final int MAX_NUMBER_OF_PARAMETERS = 500;
  public static final String ADD_BANK = "INSERT INTO BPW_Bank (BankID,SiteName,SponsorID,DebitAcctRTN,DebitAcctNumber,DebitGLAcct,DollarLimit, Submitdate ) VALUES (?,?,?,?,?,?,?,?)";
  public static final String DELETE_BANK = "DELETE FROM BPW_Bank WHERE BankID=?";
  public static final String GET_BANK_BY_ID = "SELECT SiteName,SponsorID,DebitAcctRTN,DebitAcctNumber,DebitGLAcct,DollarLimit, Submitdate FROM BPW_Bank WHERE BankID=?";
  public static final String GET_ALL_BANKS = "SELECT BankID, SiteName,SponsorID,DebitAcctRTN,DebitAcctNumber,DebitGLAcct,DollarLimit, Submitdate FROM BPW_Bank";
  public static final String GET_GLOBAL_PAYEE_GROUPS = "SELECT DISTINCT PayeeLevelType FROM BPW_Payee";
  public static final String SEARCH_GLOBAL_PAYEE = "SELECT DISTINCT p.PayeeID, ExtdPayeeID, PayeeType, Addr1, Addr2,Addr3,City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status,DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay,Submitdate, TranID, FIId,Language,CASE WHEN s.PayeeName='_NULL_' THEN p.PayeeName ELSE s.PayeeName END AS Name FROM BPW_Payee p, BPW_SmartSearch s WHERE p.PayeeID = s.PayeeID AND PayeeType =0";
  public static final String GET_GLOBAL_PAYEE_BY_PAYEE_ID = "SELECT p.PayeeID, p.ExtdPayeeID, p.PayeeType, Addr1, Addr2, Addr3,  City, State, Zipcode, Country, Phone, LinkPayeeID,  Status, DisbursementType, PayeeLevelType, Nickname, ContactName,  DaysToPay, Submitdate, TranID, FIId, Language, CASE  WHEN s.PayeeName = '_NULL_' THEN p.PayeeName  ELSE s.PayeeName  END AS Name  FROM BPW_Payee p, BPW_SmartSearch s WHERE p.PayeeID = s.PayeeID AND  p.PayeeID = ? AND p.PayeeType =0";
  public static final String GET_PAYEE_ROUTE_BY_PAYEE_ID = "SELECT RouteID, BankID,  AcctID, AcctType, CurrencyCode, CustAcctRequired ,PayeeID  FROM BPW_PayeeRoute  WHERE PayeeID = ?";
  public static final String GET_GLOBAL_PAYEE_STATUS_BY_PAYEE_ID = "SELECT Status FROM BPW_Payee WHERE PayeeID = ?";
  public static final String CUSTOMER_EXIST = "SELECT CustomerID FROM BPW_Customer WHERE CustomerID=?";
  public static final String ADD_NEW_CUSTOMER = "INSERT INTO BPW_Customer( CustomerID,      FirstName,      MiddleInitial,      LastName,   Suffix, JointFirstName,  JointMiddleInitial,     JointLastName,  JointSuffix,        AddressLine1,AddressLine2,    City,           State,      ZipCode,        Country,ConsumerStatus,  CtryCode,       Phone,      InetAddr,       SecondCtryCode,SecondPhone,     JointCountryCode,   JointPhone, JointSecondCtryCode, JointSecondPhone,PersonalSecCode, DollarLimit, SponsorID, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, BillingPlan, RemoteUserKey,Submitdate,      SSN, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, VirtualCustomer, UserType ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ? ,? ,? ,?, ?, ?, ?, ?, ?, ?)";
  public static final String ADD_NEW_CUSTOMER_WITHOUT_USERTYPE = "INSERT INTO BPW_Customer( CustomerID,      FirstName,      MiddleInitial,      LastName,   Suffix, JointFirstName,  JointMiddleInitial,     JointLastName,  JointSuffix,        AddressLine1,AddressLine2,    City,           State,      ZipCode,        Country,ConsumerStatus,  CtryCode,       Phone,      InetAddr,       SecondCtryCode,SecondPhone,     JointCountryCode,   JointPhone, JointSecondCtryCode, JointSecondPhone,PersonalSecCode, DollarLimit, SponsorID, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, BillingPlan, RemoteUserKey,Submitdate,      SSN, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, VirtualCustomer ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ? ,? ,? ,?, ?, ?, ?, ?, ?)";
  public static final String UPDATE_CUSTOMER = "UPDATE BPW_Customer SET FirstName = ?, MiddleInitial = ?, LastName = ?, Suffix = ?, JointFirstName = ?, JointMiddleInitial = ?, JointLastName = ?, JointSuffix = ?, AddressLine1 = ?, AddressLine2 = ?, City = ?, State = ?, ZipCode = ?, Country = ?, ConsumerStatus = ?, CtryCode = ?, Phone = ?, SecondCtryCode = ?, SecondPhone = ?, JointCountryCode = ?, JointPhone = ?, JointSecondCtryCode = ?, JointSecondPhone = ?, PersonalSecCode = ?, DollarLimit = ?, SponsorID = ?, CustType= ?, CustGroup = ?, CustCategory = ?,  BirthDate = ?, ExtInfo = ?, BillingPlan = ?, RemoteUserKey = ?,  AcctVerification = ?, AllowZeroDayProcess = ?, ACHCreditLeadDays = ?, ACHDebitLeadDays = ?,  VirtualCustomer = ?, UserType = ? WHERE CustomerID = ?";
  public static final String UPDATE_CUSTOMER_WITHOUT_USERTYPE = "UPDATE BPW_Customer SET FirstName = ?, MiddleInitial = ?, LastName = ?, Suffix = ?, JointFirstName = ?, JointMiddleInitial = ?, JointLastName = ?, JointSuffix = ?, AddressLine1 = ?, AddressLine2 = ?, City = ?, State = ?, ZipCode = ?, Country = ?, ConsumerStatus = ?, CtryCode = ?, Phone = ?, SecondCtryCode = ?, SecondPhone = ?, JointCountryCode = ?, JointPhone = ?, JointSecondCtryCode = ?, JointSecondPhone = ?, PersonalSecCode = ?, DollarLimit = ?, SponsorID = ?, CustType= ?, CustGroup = ?, CustCategory = ?,  BirthDate = ?, ExtInfo = ?, BillingPlan = ?, RemoteUserKey = ?,  AcctVerification = ?, AllowZeroDayProcess = ?, ACHCreditLeadDays = ?, ACHDebitLeadDays = ?,  VirtualCustomer = ? WHERE CustomerID = ?";
  public static final String UPDATE_CUSTOMER_2 = "UPDATE BPW_Customer SET CustomerID = ?, FirstName = ?, MiddleInitial = ?, LastName = ?, Suffix = ?, JointFirstName = ?, JointMiddleInitial = ?, JointLastName = ?, JointSuffix = ?, AddressLine1 = ?, AddressLine2 = ?, City = ?, State = ?, ZipCode = ?, Country = ?, ConsumerStatus = ?, CtryCode = ?, Phone = ?, SecondCtryCode = ?, SecondPhone = ?, JointCountryCode = ?, JointPhone = ?, JointSecondCtryCode = ?, JointSecondPhone = ?, PersonalSecCode = ?, DollarLimit = ?, SponsorID = ?, CustType= ?, CustGroup = ?, CustCategory = ?,  BirthDate = ?, ExtInfo = ?, BillingPlan = ?, RemoteUserKey = ?,  AcctVerification = ? , AllowZeroDayProcess = ?, ACHCreditLeadDays = ?, ACHDebitLeadDays = ?, VirtualCustomer = ?, UserType = ? WHERE CustomerID = ?";
  public static final String UPDATE_CUSTOMER_2_WITHOUT_USERTYPE = "UPDATE BPW_Customer SET CustomerID = ?, FirstName = ?, MiddleInitial = ?, LastName = ?, Suffix = ?, JointFirstName = ?, JointMiddleInitial = ?, JointLastName = ?, JointSuffix = ?, AddressLine1 = ?, AddressLine2 = ?, City = ?, State = ?, ZipCode = ?, Country = ?, ConsumerStatus = ?, CtryCode = ?, Phone = ?, SecondCtryCode = ?, SecondPhone = ?, JointCountryCode = ?, JointPhone = ?, JointSecondCtryCode = ?, JointSecondPhone = ?, PersonalSecCode = ?, DollarLimit = ?, SponsorID = ?, CustType= ?, CustGroup = ?, CustCategory = ?,  BirthDate = ?, ExtInfo = ?, BillingPlan = ?, RemoteUserKey = ?,  AcctVerification = ? , AllowZeroDayProcess = ?, ACHCreditLeadDays = ?, ACHDebitLeadDays = ?, VirtualCustomer = ? WHERE CustomerID = ?";
  public static final String DELETE_CUSTOMER = "DELETE FROM BPW_Customer WHERE CustomerID = ?";
  public static final String DELETE_CUSTOMER_WITH_STATUS = "DELETE FROM BPW_Customer WHERE CustomerID = ? and ConsumerStatus=?";
  public static final String GET_ALL_DEL_CUSTOMERS = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus = 'CLOSED'";
  public static final String GET_ALL_MOD_CUSTOMERS = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus = 'MOD'";
  public static final String GET_ALL_NEW_CUSTOMERS = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays  FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus = 'NEW'";
  public static final String GET_ALL_PENDING_CUSTOMERS = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus = 'PENDING'";
  public static final String GET_ALL_NEW_CUSTOMERS_WITH_PAYMENT = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID and cr.Status = 'NEW' and cr.RouteID = ?";
  public static final String GET_ALL_MOD_CUSTOMERS_WITH_PAYMENT = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID and cr.Status = 'MOD' and cr.RouteID = ?";
  public static final String GET_ALL_DEL_CUSTOMERS_WITH_PAYMENT = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID and cr.Status = 'CLOSED' and cr.RouteID = ?";
  public static final String GET_ALL_PENDING_CUSTOMERS_WITH_PAYMENT = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID and cr.Status = 'PENDING' and cr.RouteID = ?";
  public static final String GET_CUSTOMER_BY_ID = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification , AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, VirtualCustomer, UserType FROM BPW_Customer WHERE CustomerID=?";
  public static final String GET_CUSTOMER_BY_STATUS = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification , AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays,  UserType FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus=?";
  public static final String GET_CUSTOMER_BY_STATUS_MOD = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, UserType FROM BPW_Customer WHERE BPW_Customer.ConsumerStatus LIKE 'MOD%'";
  public static final String GET_CUSTOMERS_WITH_PAYMENT_BY_STATUS = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, UserType FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID AND cr.Status = ? AND cr.RouteID = ? AND c.ConsumerStatus='ACTIVE'";
  public static final String GET_CUSTOMERS_WITH_PAYMENT_BY_STATUS_MOD = "SELECT c.CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, c.Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, UserType FROM BPW_Customer c, BPW_CustomerRoute cr WHERE c.CustomerID = cr.CustomerID AND cr.Status LIKE 'MOD%' AND cr.RouteID = ? AND c.ConsumerStatus='ACTIVE'";
  public static final String GET_CUSTOMER = "SELECT CustomerID, FirstName, MiddleInitial, LastName, Suffix, JointFirstName, JointMiddleInitial, JointLastName, JointSuffix, AddressLine1, AddressLine2, City, State, ZipCode, Country, ConsumerStatus, CtryCode, Phone, SecondCtryCode, SecondPhone, JointCountryCode, JointPhone, JointSecondCtryCode, JointSecondPhone, PersonalSecCode, DollarLimit, SponsorID, BillingPlan, RemoteUserKey, Submitdate, SSN, InetAddr, CustType, CustGroup, CustCategory, FIID, BirthDate, ExtInfo, AcctVerification, AllowZeroDayProcess, ACHCreditLeadDays, ACHDebitLeadDays, VirtualCustomer, UserType FROM BPW_Customer ";
  public static final String UPDATE_CUST_STATUS_BY_ID = "UPDATE BPW_Customer SET ConsumerStatus = ? WHERE CustomerID = ?";
  public static final String ADD_CUSTOMER_ROUTE = "INSERT INTO BPW_CustomerRoute(CustomerID, RouteID, Status, Submitdate) VALUES(?,?,?,?)";
  public static final String GET_CUSTOMER_ROUTE = "select Status, Submitdate from BPW_CustomerRoute  where CustomerID=? and RouteID=?";
  public static final String GET_ALLCUSTOMER_ROUTE = "select RouteID, Status, Submitdate from BPW_CustomerRoute  where CustomerID=? ";
  public static final String DELETE_CUSTOMER_ROUTE = "DELETE FROM BPW_CustomerRoute  WHERE CustomerID = ? and RouteID = ?";
  public static final String UPDATE_CUSTOMER_ROUTE = "UPDATE BPW_CustomerRoute SET Status = ?  WHERE CustomerID = ? and RouteID = ?";
  public static final String ADD_CUSTPAYEE = "INSERT INTO BPW_CustomerPayee(CustomerID, PayAcct, NameOnAcct, PayeeID, PayeeListID, Status, LinkID, LinkGoDate, Submitdate )  VALUES(?,?,?,?,?,?,?,?,?)";
  public static final String CLOSE_CUSTOMER_PAYEES_BY_CUSTOMERID = "UPDATE BPW_CustomerPayee SET Status = 'CLOSED' WHERE CustomerID = ?";
  public static final String DELETE_CUSTOMER_PAYEES_BY_CUSTOMERID = "DELETE FROM BPW_CustomerPayee WHERE CustomerID = ?";
  public static final String DISABLE_CUSTOMER_PAYEES_BY_CUSTOMERID = "UPDATE BPW_CustomerPayee SET Status = 'INACTIVE' WHERE CustomerID = ? AND Status != 'CLOSED'";
  public static final String ENABLE_CUSTOMER_PAYEES_BY_CUSTOMERID = "UPDATE BPW_CustomerPayee SET Status = 'ACTIVE' WHERE CustomerID = ? AND Status = 'INACTIVE'";
  public static final String CLOSE_CUSTOMER_PAYEES_BY_PAYEEID = "UPDATE BPW_CustomerPayee SET Status = 'CLOSED' WHERE PayeeID = ?";
  public static final String CLOSE_CUSTOMER_PAYEES_BY_PAYEELISTID = "UPDATE BPW_CustomerPayee SET Status = 'CLOSED' WHERE CustomerID=? AND PayeeListID = ?";
  public static final String GET_CUSTPAYEE_BY_ID = "SELECT PayeeID, PayeeListID, PayAcct, NameOnAcct, CustomerID, Status, ExtdInfo, LinkID, LinkGoDate, Submitdate  FROM BPW_CustomerPayee WHERE PayeeListID=? AND CustomerID=?";
  public static final String GET_CUSTPAYEE = "SELECT PayeeListID, Status FROM BPW_CustomerPayee WHERE PayeeID=? AND CustomerID=? AND PayAcct=?";
  public static final String GET_CUSTPAYEE_BY_PAYEEID = "SELECT CustomerID,Status,PayeeListID FROM BPW_CustomerPayee WHERE PayeeID=?";
  public static final String GET_CUSTPAYEE_BY_STATUS = "SELECT BPW_CustomerPayee.PayeeID,BPW_CustomerPayee.PayeeListID, BPW_CustomerPayee.PayAcct,BPW_CustomerPayee.NameOnAcct, BPW_CustomerPayee.CustomerID, BPW_CustomerPayee.Status, BPW_CustomerPayee.ExtdInfo, BPW_CustomerPayee.LinkID, BPW_CustomerPayee.LinkGoDate, BPW_CustomerPayee.Submitdate  FROM BPW_CustomerPayee, BPW_Payee WHERE BPW_CustomerPayee.PayeeID = BPW_Payee.PayeeID AND BPW_Payee.RouteID = ? AND BPW_CustomerPayee.Status = ?";
  public static final String GET_CUSTPAYEE_BY_STATUS_MOD = "SELECT BPW_CustomerPayee.PayeeID,BPW_CustomerPayee.PayeeListID, BPW_CustomerPayee.PayAcct,BPW_CustomerPayee.NameOnAcct, BPW_CustomerPayee.CustomerID, BPW_CustomerPayee.Status, BPW_CustomerPayee.ExtdInfo, BPW_CustomerPayee.LinkID, BPW_CustomerPayee.LinkGoDate, BPW_CustomerPayee.Submitdate  FROM BPW_CustomerPayee, BPW_Payee WHERE BPW_CustomerPayee.PayeeID = BPW_Payee.PayeeID AND BPW_Payee.RouteID = ? AND BPW_CustomerPayee.Status LIKE 'MOD%'";
  public static final String GET_CUSTPAYEE_WITH_PAYMENT_BY_STATUS = "SELECT BPW_CustomerPayee.PayeeID,BPW_CustomerPayee.PayeeListID, BPW_CustomerPayee.PayAcct,BPW_CustomerPayee.NameOnAcct, BPW_CustomerPayee.CustomerID, BPW_CustPayeeRoute.Status, BPW_CustomerPayee.ExtdInfo, BPW_CustomerPayee.LinkID, BPW_CustomerPayee.LinkGoDate, BPW_CustomerPayee.Submitdate  FROM BPW_CustomerPayee, BPW_CustPayeeRoute, BPW_CustomerRoute WHERE BPW_CustomerPayee.CustomerID = BPW_CustPayeeRoute.CustomerID AND BPW_CustomerPayee.PayeeListID = BPW_CustPayeeRoute.PayeeListID AND BPW_CustomerPayee.CustomerID = BPW_CustomerRoute.CustomerID AND BPW_CustPayeeRoute.RouteID = BPW_CustomerRoute.RouteID AND BPW_CustomerRoute.RouteID = ? AND BPW_CustPayeeRoute.Status = ? AND BPW_CustomerPayee.Status='ACTIVE'";
  public static final String GET_CUSTPAYEE_WITH_PAYMENT_BY_STATUS_MOD = "SELECT BPW_CustomerPayee.PayeeID,BPW_CustomerPayee.PayeeListID, BPW_CustomerPayee.PayAcct,BPW_CustomerPayee.NameOnAcct, BPW_CustomerPayee.CustomerID, BPW_CustPayeeRoute.Status, BPW_CustomerPayee.ExtdInfo, BPW_CustomerPayee.LinkID, BPW_CustomerPayee.LinkGoDate, BPW_CustomerPayee.Submitdate  FROM BPW_CustomerPayee, BPW_CustPayeeRoute, BPW_CustomerRoute WHERE BPW_CustomerPayee.CustomerID = BPW_CustPayeeRoute.CustomerID AND BPW_CustomerPayee.PayeeListID = BPW_CustPayeeRoute.PayeeListID AND BPW_CustomerPayee.CustomerID = BPW_CustomerRoute.CustomerID AND BPW_CustPayeeRoute.RouteID = BPW_CustomerRoute.RouteID AND BPW_CustomerRoute.RouteID = ? AND BPW_CustPayeeRoute.Status LIKE 'MOD%' AND BPW_CustomerPayee.Status='ACTIVE'";
  public static final String GET_CUSTPAYEE_BY_UID = "SELECT PayeeID, PayeeListID, PayAcct, NameOnAcct, Status, ErrCode, ErrMsg, LinkID, LinkGoDate, Submitdate  FROM BPW_CustomerPayee WHERE CustomerID = ? ";
  public static final String GET_CUSTPAYEE_BY_UID_ROUTEID = "SELECT cp.PayeeID, cp.PayeeListID, cp.PayAcct, cp.NameOnAcct, cp.Status, cp.ErrCode, cp.ErrMsg, cp.LinkID, cp.LinkGoDate, cp.Submitdate  FROM BPW_CustomerPayee cp, BPW_Payee p WHERE cp.CustomerID = ? AND p.RouteID =? AND cp.Status != ? and cp.PayeeID = p.PayeeID ";
  public static final String GET_MAX_CUSTPAYEE_ID = "SELECT MAX(PayeeListID) FROM BPW_CustomerPayee WHERE CustomerID = ?";
  public static final String UPDATE_CUSTPAYEE = "UPDATE BPW_CustomerPayee SET PayeeID=?, PayAcct=?, NameOnAcct=?, Status = ?, ExtdInfo = ? WHERE PayeeListID = ? AND CustomerID = ?";
  public static final String UPDATE_CUSTPAYEE_LINKID = "UPDATE BPW_CustomerPayee SET LinkID = ? WHERE PayeeListID = ? AND CustomerID = ?";
  public static final String UPDATE_CUSTPAYEE_LINKGODATE = "UPDATE BPW_CustomerPayee SET LinkGoDate = ? WHERE PayeeListID = ? AND CustomerID = ?";
  public static final String UPDATE_CUSTPAYEE_STATUS = "UPDATE BPW_CustomerPayee SET Status = ? WHERE PayeeListID = ? AND CustomerID = ?";
  public static final String UPDATE_CUSTPAYEE_STATUS_ERR = "UPDATE BPW_CustomerPayee SET Status = ? , ErrCode=?, ErrMsg =? WHERE PayeeListID = ? AND CustomerID = ?";
  public static final String ADD_CUSTPAYEEROUTE = "INSERT INTO BPW_CustPayeeRoute(CustPayeeRouteID,CustomerID, PayeeListID, RouteID, Status, Submitdate) VALUES(?,?,?,?,?,?)";
  public static final String GET_CUSTPAYEEROUTE = "SELECT CustPayeeRouteID, RouteID, Status, Submitdate from BPW_CustPayeeRoute  WHERE CustomerID = ? AND PayeeListID = ?";
  public static final String GET_CUSTPAYEEROUTE2 = "SELECT CustPayeeRouteID, Status, Submitdate from BPW_CustPayeeRoute  WHERE CustomerID = ? AND PayeeListID = ? AND RouteID = ?";
  public static final String GET_ALL_CUSTPAYEEROUTE = "SELECT CustPayeeRouteID, PayeeListID, RouteID, Status, Submitdate FROM BPW_CustPayeeRoute  WHERE CustomerID=? ";
  public static final String GET_CUSTPAYEEROUTE_STATUS_NOT_IN = "SELECT Status from BPW_CustPayeeRoute  WHERE CustomerID = ? AND PayeeListID = ? AND Status NOT IN (?)";
  public static final String DELETE_CUSTPAYEEROUTE = "DELETE FROM BPW_CustPayeeRoute  WHERE CustomerID = ? AND PayeeListID = ? AND RouteID = ?";
  public static final String DELETE_CUSTPAYEEROUTE_BY_PAYEELISTID = "DELETE FROM BPW_CustPayeeRoute  WHERE CustomerID = ? AND PayeeListID = ?";
  public static final String UPDATE_CUSTPAYEEROUTE_STATUS = "UPDATE BPW_CustPayeeRoute SET Status = ?  WHERE CustomerID = ? AND PayeeListID = ? AND RouteID = ?";
  public static final String UPDATE_CUSTPAYEEROUTE_STATUS_BY_PAYEELISTID = "UPDATE BPW_CustPayeeRoute SET Status = ?  WHERE CustomerID = ? AND PayeeListID = ?";
  public static final String UPDATE_CUSTPAYEEROUTE_STATUS_BY_CUSTOMERID = "UPDATE BPW_CustPayeeRoute SET Status = ?  WHERE CustomerID = ?";
  public static final String ADD_FULFILLMENT = "INSERT INTO BPW_Fulfillment( FulfillmentSystemName, RouteID, PaymentCost, HandlerName, ImmediateFundAllocation, ImmediateProcessing, ImmediateHandlerName ) VALUES(?,?,?,?,?,?,?)";
  public static final String DELETE_FULFILL = "DELETE FROM BPW_Fulfillment WHERE RouteID =?";
  public static final String GET_ALL_FULFILL = "SELECT FulfillmentSystemName,RouteID, PaymentCost, HandlerName, ImmediateFundAllocation, ImmediateProcessing, ImmediateHandlerName FROM BPW_Fulfillment ";
  public static final String GET_FULFILL_BY_ROUTEID = "SELECT FulfillmentSystemName,PaymentCost, HandlerName, ImmediateFundAllocation, ImmediateProcessing, ImmediateHandlerName FROM BPW_Fulfillment WHERE RouteID = ?";
  public static final String GET_MAX_ROUTEID = "SELECT MAX(RouteID) FROM BPW_Fulfillment";
  public static final String UPDATE_FULFILL = "UPDATE BPW_Fulfillment SET FulfillmentSystemName=?, PaymentCost=?, HandlerName=?, ImmediateFundAllocation=?, ImmediateProcessing=?, ImmediateHandlerName=? WHERE RouteID=?";
  public static final String ADD_INSTRACTLOG = "INSERT INTO BPW_InstructionActivityLog (LogType, LogDate, LogID, InstructionType, InstructionID, Content, LogLevel) VALUES (?,?,?,?,?,?,?)";
  public static final String DELETE_INSTRACTLOG = "DELETE FROM BPW_InstructionActivityLog WHERE LogDate <= ?";
  public static final String GET_INSTRACTLOG_BY_LOGID = "SELECT LogType, LogDate, LogID, InstructionType, InstructionID, Content, LogLevel FROM BPW_InstructionActivityLog WHERE LogID=?";
  public static final String GET_INSTRACTLOG_BY_LOGID_ORDERED = "SELECT LogType, LogDate, LogID, InstructionType, InstructionID, Content, LogLevel FROM BPW_InstructionActivityLog WHERE LogID=? ORDER BY LogDate ASC";
  public static final String GET_INSTRACTLOG_BY_INSTR = "SELECT LogType, LogDate, LogID, InstructionType, InstructionID, Content, LogLevel FROM BPW_InstructionActivityLog WHERE LogID IN (SELECT DISTINCT LogID FROM BPW_InstructionActivityLog WHERE InstructionID=? AND InstructionType=? AND LogType>6 AND LogType<=14) ORDER BY LogID ASC, LogDate ASC";
  public static final String ADD_PAYEE = "INSERT INTO BPW_Payee(  PayeeID, ExtdPayeeID, PayeeType, PayeeName, Encoding,  Addr1, Addr2, Addr3, City, State,  Zipcode, Country, Phone, RouteID, LinkPayeeID,  Status, DisbursementType, PayeeLevelType, Nickname, ContactName,  DaysToPay, Submitdate, TranID, FIId ) VALUES(?,?,?,?,SOUNDEX(CAST(? AS CHAR(50))),?,?,?,?,?, ?,?,?,?,?,                          ?,?,?,?,?, ?,?,?,?)";
  public static final String ADD_SMART_PAYEE = "INSERT INTO BPW_SmartSearch(  PayeeID, NoSpaceName, NoPuctName, NoPunctSpaceName, Language, PayeeName) VALUES(?,?,?,?,?,?)";
  public static final String GET_SMART_PAYEE_NO_SPACE = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoSpaceName = ? ";
  public static final String GET_SMART_PAYEE_NO_SPACE_START_WITH = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoSpaceName like ? ";
  public static final String GET_SMART_PAYEE_NO_PUNCT = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoPuctName = ? ";
  public static final String GET_SMART_PAYEE_NO_PUNCT_START_WITH = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoPuctName like ? ";
  public static final String GET_SMART_PAYEE_NO_PUNCT_SPACE = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoPunctSpaceName = ? ";
  public static final String GET_SMART_PAYEE_NO_PUNCT_SPACE_START_WITH = "SELECT PayeeID FROM BPW_SmartSearch WHERE NoPunctSpaceName like ? ";
  public static final String UPDATE_SMART_PAYEE = "UPDATE BPW_SmartSearch SET  NoSpaceName = ?, NoPuctName = ?, NoPunctSpaceName = ?  WHERE PayeeID = ?";
  public static final String GET_SMART_PAYEE_NAME = "SELECT  NoPunctSpaceName FROM BPW_SmartSearch WHERE PayeeID = ?";
  public static final String ADD_PAYEE_390 = "INSERT INTO BPW_Payee(  PayeeID, ExtdPayeeID, PayeeType, PayeeName, Encoding,  Addr1, Addr2, Addr3, City, State,  Zipcode, Country, Phone, RouteID, LinkPayeeID,  Status, DisbursementType, PayeeLevelType, Nickname, ContactName,  DaysToPay, Submitdate, TranID ) VALUES(?,?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?, ?,?,?)";
  public static final String ADD_PAYEE_ASE = "INSERT INTO BPW_Payee( PayeeID, ExtdPayeeID, PayeeType, PayeeName, Encoding, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID, FIId )VALUES(?,?,?,?,SOUNDEX(CONVERT(CHAR(50),?)),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_PAYEE_BY_PAYEEID = "DELETE FROM BPW_Payee WHERE PayeeID=?";
  public static final String DELETE_SMART_PAYEE = "DELETE FROM BPW_SmartSearch WHERE PayeeID=?";
  public static final String GET_LINKED_PAYEE = "SELECT DISTINCT BPW_Payee.PayeeID, BPW_Payee.ExtdPayeeID, BPW_Payee.PayeeType, BPW_Payee.PayeeName, BPW_Payee.Addr1, BPW_Payee.Addr2, BPW_Payee.Addr3, BPW_Payee.City, BPW_Payee.State, BPW_Payee.Zipcode, BPW_Payee.Country, BPW_Payee.Phone, BPW_Payee.RouteID, BPW_Payee.LinkPayeeID, BPW_Payee.Status, BPW_Payee.DisbursementType, BPW_Payee.PayeeLevelType, BPW_Payee.Nickname, BPW_Payee.ContactName, BPW_Payee.DaysToPay, BPW_Payee.Submitdate, BPW_Payee.TranID FROM BPW_Payee, BPW_CustomerPayee WHERE BPW_Payee.PayeeID=BPW_CustomerPayee.PayeeID ORDER BY PayeeName";
  public static final String GET_MOSTFREQ_PAYEE = "SELECT DISTINCT BPW_Payee.PayeeID, BPW_Payee.ExtdPayeeID, BPW_Payee.PayeeType, BPW_Payee.PayeeName, BPW_Payee.Addr1, BPW_Payee.Addr2, BPW_Payee.Addr3, BPW_Payee.City, BPW_Payee.State, BPW_Payee.Zipcode, BPW_Payee.Country, BPW_Payee.Phone, BPW_Payee.RouteID, BPW_Payee.LinkPayeeID, BPW_Payee.Status, BPW_Payee.DisbursementType, BPW_Payee.PayeeLevelType, BPW_Payee.Nickname, BPW_Payee.ContactName, BPW_Payee.DaysToPay, BPW_Payee.Submitdate, BPW_Payee.TranID, (SELECT COUNT(*) FROM BPW_CustomerPayee WHERE BPW_Payee.PayeeID=BPW_CustomerPayee.PayeeID GROUP BY BPW_CustomerPayee.PayeeID) AS freq FROM BPW_Payee, BPW_CustomerPayee ORDER BY freq DESC";
  public static final String GET_MOSTFREQ_PAYEE_DB2 = "SELECT DISTINCT BPW_Payee.PayeeID, BPW_Payee.ExtdPayeeID, BPW_Payee.PayeeType, BPW_Payee.PayeeName, BPW_Payee.Addr1, BPW_Payee.Addr2, BPW_Payee.Addr3, BPW_Payee.City, BPW_Payee.State, BPW_Payee.Zipcode, BPW_Payee.Country, BPW_Payee.Phone, BPW_Payee.RouteID, BPW_Payee.LinkPayeeID, BPW_Payee.Status, BPW_Payee.DisbursementType, BPW_Payee.PayeeLevelType, BPW_Payee.Nickname, BPW_Payee.ContactName, BPW_Payee.DaysToPay, BPW_Payee.Submitdate, BPW_Payee.TranID, (SELECT COUNT(*) AS freq FROM BPW_CustomerPayee WHERE BPW_Payee.PayeeID=BPW_CustomerPayee.PayeeID GROUP BY BPW_CustomerPayee.PayeeID) FROM BPW_Payee, BPW_CustomerPayee ORDER BY freq DESC";
  public static final String GET_PAYEE_BY_EXTDID = "SELECT PayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE ExtdPayeeID = ?";
  public static final String GET_PAYEE_BY_ROUTEID_EXTDID_NAME = "SELECT PayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, ExtdPayeeID, TranID FROM BPW_Payee WHERE RouteID =? and ExtdPayeeID = ? and PayeeName = ?";
  public static final String GET_PAYEE_BY_ROUTEID_EXTDID = "SELECT PayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, ExtdPayeeID, TranID FROM BPW_Payee WHERE RouteID =? and ExtdPayeeID = ? ";
  public static final String GET_PAYEE_BY_ID = "SELECT ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeID = ?";
  public static final String GET_GLOBAL_PAYEE_BY_ID = "SELECT ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeID = ?";
  public static final String GET_PAYEE_BY_LINKID = "SELECT PayeeID, Status FROM BPW_Payee WHERE LinkPayeeID=?";
  public static final String GET_PAYEE_BY_NAME = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName=? ORDER BY PayeeType ASC ";
  public static final String GET_PAYEE_BY_NAME_AND_ADDR = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName=? AND UPPER(Addr1) = ? AND UPPER(City) = ? AND UPPER(State) = ? ORDER BY PayeeType ASC";
  public static final String GET_GLOBAL_PAYEE_BY_NAME = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName=? AND PayeeType!=? ";
  public static final String GET_PAYEE_BY_PAYEETYPE_ORDERED = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeType=? AND Encoding>=SOUNDEX(CAST(? AS CHAR(50))) AND Encoding<=SOUNDEX(CAST(? AS CHAR(50))) ORDER BY PayeeName";
  public static final String GET_PAYEE_BY_PAYEETYPE_ORDERED_390 = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeType=? AND Encoding>=? AND Encoding<=? ORDER BY PayeeName";
  public static final String GET_PAYEE_BY_PAYEETYPE_ORDERED_ASE = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeType=? AND Encoding>=SOUNDEX(CONVERT(CHAR(50),?)) AND Encoding<=SOUNDEX(CONVERT(CHAR(50),?)) ORDER BY PayeeName";
  public static final String GET_PAYEE_BY_STATUS = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE Status=?";
  public static final String GET_PREF_PAYEE = "SELECT DISTINCT BPW_Payee.PayeeID, BPW_Payee.ExtdPayeeID, BPW_Payee.PayeeType, BPW_Payee.PayeeName, BPW_Payee.Addr1, BPW_Payee.Addr2, BPW_Payee.Addr3, BPW_Payee.City, BPW_Payee.State, BPW_Payee.Zipcode, BPW_Payee.Country, BPW_Payee.Phone, BPW_Payee.RouteID, BPW_Payee.LinkPayeeID, BPW_Payee.Status, BPW_Payee.DisbursementType, BPW_Payee.PayeeLevelType, BPW_Payee.Nickname, BPW_Payee.ContactName, BPW_Payee.DaysToPay, BPW_Payee.Submitdate, BPW_Payee.TranID FROM BPW_Payee WHERE PayeeLevelType = ? ORDER BY BPW_Payee.PayeeName DESC";
  public static final String SEARCH_PAYEENAME = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeType=? AND PayeeName like ? ORDER BY PayeeName";
  public static final String SEARCH_GLOBAL_PAYEE_BY_NAME_AND_LANGUAGE = "SELECT p.PayeeID, p.ExtdPayeeID, p.PayeeType, p.PayeeName,p.Addr1, p.Addr2, p.Addr3, p.City, p.State, p.Zipcode, p.Country, p.Phone, p.RouteID, p.LinkPayeeID, p.Status, p.DisbursementType, p.PayeeLevelType, p.Nickname, p.ContactName, p.DaysToPay, p.Submitdate, p.TranID FROM BPW_Payee p,BPW_SmartSearch s WHERE p.PayeeID=s.PayeeID  AND s.NoPunctSpaceName like ? AND s.Language = ? AND p.PayeeType =0";
  public static final String SEARCH_PAYEE_BY_NAME = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName like ? ORDER BY PayeeName";
  public static final String SEARCH_PAYEE_BY_NAME_AND_ADDR = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName like ? AND UPPER(Addr1) = ? AND UPPER(City) = ? AND UPPER(State) = ? ORDER BY PayeeName";
  public static final String SEARCH_GLOBAL_PAYEE_BY_NAME = "SELECT PayeeID, ExtdPayeeID, PayeeType, PayeeName, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, RouteID, LinkPayeeID, Status, DisbursementType, PayeeLevelType, Nickname, ContactName, DaysToPay, Submitdate, TranID FROM BPW_Payee WHERE PayeeName like ? AND PayeeType!=? ";
  public static final String SEARCH_PAYEEID_BY_NAME = "SELECT PayeeID FROM BPW_Payee WHERE PayeeName like ? ORDER BY PayeeID";
  public static final String SEARCH_PAYEENAME_BY_NAME = "SELECT PayeeName FROM BPW_Payee WHERE PayeeName like ? ORDER BY PayeeName";
  public static final String SEARCH_SMART_PAYEENAME = "SELECT PayeeName FROM BPW_Payee WHERE PayeeID = ? ORDER BY PayeeName";
  public static final String UPDATE_PAYEE = "UPDATE BPW_Payee SET PayeeID=?, ExtdPayeeID=?, PayeeType=?, PayeeName=?, Encoding=SOUNDEX(CAST(? AS CHAR(50))), Addr1=?, Addr2=?, Addr3=?, City=?, State=?, Zipcode=?, Country=?, Phone=?, RouteID=?, LinkPayeeID=?, Status=?, DisbursementType=?, PayeeLevelType=?, Nickname=?, ContactName=?, DaysToPay =?, FIId=? WHERE PayeeID=?";
  public static final String UPDATE_PAYEE_390 = "UPDATE BPW_Payee SET PayeeID=?, ExtdPayeeID=?, PayeeType=?, PayeeName=?, Encoding=?, Addr1=?, Addr2=?, Addr3=?, City=?, State=?, Zipcode=?, Country=?, Phone=?, RouteID=?, LinkPayeeID=?, Status=?, DisbursementType=?, PayeeLevelType=?, Nickname=?, ContactName=?, DaysToPay =? WHERE PayeeID=?";
  public static final String UPDATE_PAYEE_ASE = "UPDATE BPW_Payee SET PayeeID=?, ExtdPayeeID=?, PayeeType=?, PayeeName=?, Encoding=SOUNDEX(CONVERT(CHAR(50),?)), Addr1=?, Addr2=?, Addr3=?, City=?, State=?, Zipcode=?, Country=?, Phone=?, RouteID=?, LinkPayeeID=?, Status=?, DisbursementType=?, PayeeLevelType=?, Nickname=?, ContactName=?, DaysToPay =?, FIId=? WHERE PayeeID=?";
  public static final String UPDATE_PAYEE_ROUTEID = "UPDATE BPW_Payee SET RouteID = ? WHERE PayeeID = ?";
  public static final String UPDATE_PAYEE_STATUS = "UPDATE BPW_Payee SET Status = ? WHERE PayeeID = ?";
  public static final String GET_PAYEE_BY_CUSTID_PAYEELISTID = "SELECT BPW_Payee.PayeeID, BPW_Payee.ExtdPayeeID, BPW_Payee.PayeeType, BPW_Payee.PayeeName, BPW_Payee.Addr1, BPW_Payee.Addr2, BPW_Payee.Addr3, BPW_Payee.City, BPW_Payee.State, BPW_Payee.Zipcode, BPW_Payee.Country, BPW_Payee.Phone, BPW_Payee.RouteID, BPW_Payee.LinkPayeeID, BPW_Payee.Status, BPW_Payee.DisbursementType, BPW_Payee.PayeeLevelType, BPW_Payee.Nickname, BPW_Payee.ContactName, BPW_Payee.DaysToPay, BPW_Payee.Submitdate, BPW_Payee.TranID FROM BPW_Payee, BPW_CustomerPayee WHERE BPW_Payee.PayeeID=BPW_CustomerPayee.PayeeID AND BPW_CustomerPayee.CustomerID=? AND BPW_CustomerPayee.PayeeListID=?";
  public static final String ADD_PAYEE_EDIT_MASK = "INSERT INTO BPW_PayeeEditMask( PayeeID, ObsoleteEditMask, ValidEditMask ) VALUES(?,?,?)";
  public static final String GET_EDIT_MASK = "SELECT ValidEditMask FROM BPW_PayeeEditMask WHERE PayeeID=?";
  public static final String GET_EDIT_MASK_PAYEEID_MASK = "SELECT ValidEditMask FROM BPW_PayeeEditMask WHERE PayeeID=? and ValidEditMask=?";
  public static final String DELETE_PAYEE_EDIT_MASKS = "DELETE FROM BPW_PayeeEditMask WHERE PayeeID = ? ";
  public static final String ADD_PAYEEROUTE = "INSERT INTO BPW_PayeeRoute(PayeeID, PayeeType,ExtdPayeeID, RouteID, BankID, AcctID, AcctType, PaymentCost, ExtdInfo, CurrencyCode ,CustAcctRequired ) VALUES(?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_PAYEEROUTE = "DELETE FROM BPW_PayeeRoute WHERE PayeeID=? AND RouteID=?";
  public static final String DELETE_PAYEEROUTE_BY_PAYEEID = "DELETE FROM BPW_PayeeRoute WHERE PayeeID=?";
  public static final String GET_PAYEEROUTE = "SELECT PayeeType, ExtdPayeeID, BankID, AcctID, AcctType, PaymentCost, ExtdInfo, CurrencyCode, CustAcctRequired FROM BPW_PayeeRoute WHERE PayeeID=? AND RouteID=?";
  public static final String GET_PAYEEROUTE_PAYEEID = "SELECT PayeeType, ExtdPayeeID, BankID, AcctID,  AcctType, PaymentCost,ExtdInfo,RouteID, CurrencyCode  FROM BPW_PayeeRoute WHERE PayeeID=?";
  public static final String GET_PAYEEROUTE_ROUTEID = "SELECT RouteID FROM BPW_PayeeRoute WHERE PayeeID=?";
  public static final String UPDATE_PAYEEROUTE = "UPDATE BPW_PayeeRoute SET PayeeType=?, BankID=?, AcctID=?, AcctType=?,ExtdPayeeID=?,PaymentCost=?,ExtdInfo=? ,RouteID=?, CurrencyCode=?, CustAcctRequired=? WHERE PayeeID=?";
  public static final String ADD_PMT = "INSERT INTO BPW_PmtInstruction(SrvrTID, CustomerID, PayeeID, PayeeListID, BankID,AcctDebitID,AcctDebitType, PayAcct,DateCreate, CurDef, Amount,RouteID, StartDate, Status,LogID, Memo, PaymentType, RecSrvrTID, FIID, SubmittedBy, ImmediateFundAllocation, ImmediateProcessing) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_PAYMENTS = "DELETE FROM BPW_PmtInstruction WHERE CustomerID = ?";
  public static final String DELETE_PMT = "DELETE FROM BPW_PmtInstruction WHERE SrvrTID=?";
  public static final String GET_PENDING_PMTS = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE CustomerID=? AND PayeeListID=? AND (Status in (?,?,?,?,?) OR (PaymentType = ? AND Status = ?))";
  public static final String GET_PENDING_PMTS2 = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE CustomerID=? AND PayeeListID=? AND Status=? ";
  public static final String GET_PENDING_PMTS_BY_PAYEEID = "SELECT CustomerID FROM BPW_PmtInstruction WHERE PayeeListID=? AND Status in (?,?,?,?,?)";
  public static final String GET_PMT = "SELECT CustomerID,PayeeID,PayeeListID, BankID, AcctDebitID,AcctDebitType, PayAcct,DateCreate, CurDef, Amount, RouteID, StartDate, Status, LogID, Memo, PaymentType, RecSrvrTID, FIID, LastModified, SubmittedBy, BatchID, PaymentName, TemplateID, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE SrvrTID=?";
  public static final String GET_PMT_BY_STATUS = "SELECT CustomerID,PayeeID,PayeeListID, BankID, AcctDebitID,AcctDebitType, PayAcct,DateCreate, CurDef, Amount, StartDate, Memo, PaymentType, SrvrTID, FIID, LastModified, SubmittedBy, LogID, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE FIID=? AND Status=?";
  public static final String GET_PMT_BY_STATUS_UID = "SELECT CustomerID,PayeeID,PayeeListID, BankID, AcctDebitID,AcctDebitType, PayAcct,DateCreate, CurDef, Amount, StartDate, Memo, PaymentType, SrvrTID, FIID, LastModified, SubmittedBy, LogID, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE Status=? AND CustomerID=? ";
  public static final String GET_PMTS_BEFORE_DATE = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE StartDate <= ? AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND PaymentType NOT IN (?)";
  public static final String GET_PMTS_BEFORE_DATE_BY_CUSTOMER = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE StartDate <= ? AND CustomerID = ? AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND PaymentType NOT IN (?)";
  public static final String GET_PMT_TEMPLATES_BEFORE_LAST_MODIFIED = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE LastModified <= ? AND Status IN (?) AND PaymentType = ?";
  public static final String GET_PMT_TEMPLATES_BEFORE_LAST_MODIFIED_BY_CUSTOMER = "SELECT SrvrTID FROM BPW_PmtInstruction WHERE LastModified <= ? AND CustomerID = ? AND Status IN (?) AND PaymentType = ?";
  public static final String UPDATE_PMT = "UPDATE BPW_PmtInstruction SET CustomerID=?,PayeeID=?, PayeeListID=?,BankID=?,AcctDebitID=?, AcctDebitType=?, PayAcct=?,DateCreate=?, CurDef=?, Amount=?,RouteID=?, StartDate=?, Status=?, Memo=?, SubmittedBy=?, LastModified=?, ImmediateFundAllocation=?, ImmediateProcessing=? WHERE SrvrTID=?";
  public static final String UPDATE_PMT_STARTDATE = "UPDATE BPW_PmtInstruction SET StartDate=? WHERE SrvrTID=?";
  public static final String UPDATE_PMT_STATUS = "UPDATE BPW_PmtInstruction SET Status=? WHERE SrvrTID=?";
  public static final String UPDATE_BATCH_PMT_STATUS_LAST_MODIFIED = "UPDATE BPW_PmtInstruction SET Status=?, LastModified=? WHERE BatchID=?";
  public static final String UPDATE_PMT_STATUS_EXTDINFO = "UPDATE BPW_PmtInstruction SET Status=?, ExtdPmtInfo=? WHERE SrvrTID=?";
  public static final String GET_PAYMENT_IDS_BY_CUSTOMERID = "SELECT SrvrTID, RouteID, FIID, LogID FROM BPW_PmtInstruction WHERE CustomerID=? ";
  public static final String GET_PAYMENT_IDS_BY_PAYEELISTID = "SELECT SrvrTID, RouteID, FIID FROM BPW_PmtInstruction WHERE CustomerID=? AND PayeeListID=? ";
  public static final String GET_REC_PAYMENT_IDS_BY_CUSTOMERID = "SELECT RecSrvrTID, LogID FROM BPW_RecPmtInstruction WHERE CustomerID=? ";
  public static final String GET_REC_PAYMENT_IDS_BY_PAYEELISTID = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE CustomerID=? AND PayeeListID=? ";
  public static final String GET_PAYMENT_IDS_BY_PAYEEID = "SELECT SrvrTID, RouteID, FIID FROM BPW_PmtInstruction WHERE PayeeID=? ";
  public static final String GET_REC_PAYMENT_IDS_BY_PAYEEID = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE PayeeID=? ";
  public static final String GET_LAST_PAYMENT_BY_PAYEELISTID = "SELECT CustomerID, PayeeID, PayeeListID, BankID, AcctDebitID, AcctDebitType, PayAcct, DateCreate, CurDef, Amount, StartDate, Status, LogID, Memo, PaymentType, SrvrTID, FIID, LastModified, SubmittedBy, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE FIID = ? AND CustomerID = ? AND PayeeListID = ? AND Status IN (?, ?) ORDER BY StartDate DESC";
  public static final String GET_PMT_HIST_BY_CUSTID = "SELECT A.SrvrTID, A.CustomerID, A.PayeeID, A.PayeeListID, A.PayAcct, A.RouteID, A.Amount, A.BankID, A.AcctDebitID, A.AcctDebitType, A.Memo, A.ExtdPmtInfo, A.DateCreate, A.CurDef, A.StartDate, A.Status, A.LogID, A.PaymentType,B.Submitdate,B.DtProcessed,A.FIID, A.ImmediateFundAllocation, A.ImmediateProcessing FROM BPW_PmtInstruction A,BPW_SrvrTrans B WHERE (A.SrvrTID = B.SrvrTID) and A.CustomerID = ? ";
  public static final String GET_PMT_HIST_BY_SRVRTID_NEXT = "SELECT A.SrvrTID, A.CustomerID, A.PayeeID, A.PayeeListID, A.PayAcct, A.RouteID, A.Amount, A.BankID, A.AcctDebitID, A.AcctDebitType, A.Memo, A.ExtdPmtInfo, A.DateCreate, A.CurDef, A.StartDate, A.Status, A.LogID, A.PaymentType,B.Submitdate,B.DtProcessed,A.FIID, A.ImmediateFundAllocation, A.ImmediateProcessing FROM BPW_PmtInstruction A,BPW_SrvrTrans B WHERE (A.SrvrTID = B.SrvrTID) AND CAST(A.SrvrTID AS INTEGER) > ? AND A.CustomerID = ?";
  public static final String GET_PMT_HIST_BY_SRVRTID_PREVIOUS = "SELECT A.SrvrTID, A.CustomerID, A.PayeeID, A.PayeeListID, A.PayAcct, A.RouteID, A.Amount, A.BankID, A.AcctDebitID, A.AcctDebitType, A.Memo, A.ExtdPmtInfo, A.DateCreate, A.CurDef, A.StartDate, A.Status, A.LogID, A.PaymentType,B.Submitdate,B.DtProcessed,A.FIID, A.ImmediateFundAllocation, A.ImmediateProcessing FROM BPW_PmtInstruction A,BPW_SrvrTrans B WHERE (A.SrvrTID = B.SrvrTID) AND CAST(A.SrvrTID AS INTEGER) < ? AND A.CustomerID = ?";
  public static final String GET_PMT_HIST_BETWEEN_SRVRTID = "SELECT A.SrvrTID, A.CustomerID, A.PayeeID, A.PayeeListID, A.PayAcct, A.RouteID, A.Amount, A.BankID, A.AcctDebitID, A.AcctDebitType, A.Memo, A.ExtdPmtInfo, A.DateCreate, A.CurDef, A.StartDate, A.Status, A.LogID, A.PaymentType,B.Submitdate,B.DtProcessed,A.FIID, A.ImmediateFundAllocation, A.ImmediateProcessing FROM BPW_PmtInstruction A,BPW_SrvrTrans B WHERE (A.SrvrTID = B.SrvrTID) AND CAST(A.SrvrTID AS INTEGER) >= ? AND CAST (A.SrvrTID AS INTEGER) <= ? AND A.CustomerID = ? ";
  public static final String GET_PMTHIST_BY_DATE_RANGE = "SELECT SrvrTID, StartDate, Status, Amount, FIID FROM BPW_PmtInstruction  WHERE CustomerID = ? AND StartDate >= ? AND StartDate <= ? ";
  public static final String GET_ALL_PMT_TEMPLATE = "SELECT SrvrTID FROM BPW_PmtInstruction where PaymentName = ?  AND SubmittedBy = ? AND Status != 'CANCELEDON'";
  public static final String ADD_PAYMENT = "INSERT INTO BPW_PmtInstruction(SrvrTID, CustomerID, PayeeID, PayeeListID, PayAcct, RouteID, AcctDebitID, AcctDebitType, Amount, BankID, DateCreate, CurDef, StartDate, Status,Memo, PaymentName, PaymentType, SubmittedBy, LogID, FIID, BatchID, ImmediateFundAllocation, ImmediateProcessing ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_PAYMENT = "UPDATE BPW_PmtInstruction SET CustomerID=?,PayeeID=?, PayeeListID=?, AcctDebitID=?, AcctDebitType=?, Amount=?,BankID=?,Memo=?,PaymentName=?, SubmittedBy=?, LastModified=?, ImmediateFundAllocation=?, ImmediateProcessing=?, StartDate=?, Status=? WHERE SrvrTID=?";
  public static final String GET_PAYMENT = "SELECT CustomerID, PayeeID, PayeeListID, AcctDebitID, AcctDebitType, Amount, BankID, DateCreate, StartDate, Memo, PaymentName, SubmittedBy, LogID, FIID, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE SrvrTID=?";
  public static final String GET_BATCH_PAYMENTS = "SELECT CustomerID,PayeeID,PayeeListID, BankID, AcctDebitID,AcctDebitType, PayAcct,DateCreate, CurDef, Amount, RouteID, StartDate, Status, LogID, Memo, PaymentType, RecSrvrTID, FIID, LastModified, SubmittedBy, SrvrTID, ImmediateFundAllocation, ImmediateProcessing FROM BPW_PmtInstruction WHERE BatchID=?";
  public static final String UPDATE_PMT_STATUS_LAST_MODIFIED = "UPDATE BPW_PmtInstruction SET Status=?, LastModified=? WHERE SrvrTID=?";
  public static final String GET_REC_MODEL_MOST_RECENT_INSTANCE = "SELECT SrvrTID, StartDate FROM BPW_PmtInstruction WHERE RecSrvrTID = ? AND Status IN (?, ?, ?, ?, ?) ORDER BY StartDate DESC";
  public static final String ADD_REC_PMT = "INSERT INTO BPW_RecPmtInstruction(RecSrvrTID, CustomerID, FIID, PayeeID,PayeeListID,BankID, AcctDebitID, AcctDebitType,PayAcct,DateCreate, CurDef, Amount,InitialAmt, FinalAmt,StartDate,EndDate, InstanceCount, Frequency, LogID,Status, Memo, LastModified, SubmittedBy, PaymentType ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_REC_PMT = "DELETE FROM BPW_RecPmtInstruction WHERE RecSrvrTID=?";
  public static final String GET_PENDING_REC_PMTS = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE CustomerID=? AND PayeeListID=? AND (Status = ? OR (PaymentType = ? AND Status = ?))";
  public static final String GET_PENDING_REC_PMTS_BY_PAYEEID = "SELECT CustomerID FROM BPW_RecPmtInstruction WHERE PayeeListID=? AND Status = ?";
  public static final String GET_REC_PMT = "SELECT CustomerID,PayeeID, PayeeListID,BankID, AcctDebitID, AcctDebitType,PayAcct,DateCreate, CurDef, Amount,InitialAmt, FinalAmt, InstanceCount, Frequency,StartDate,EndDate,LogID, Status, Memo, FIID, SubmittedBy,PaymentName, TemplateID, PaymentType, BatchID FROM BPW_RecPmtInstruction WHERE RecSrvrTID=?";
  public static final String GET_REC_PMT_BEFORE_ENDDATE = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE EndDate <= ? AND Status IN (?,?) AND PaymentName IS NULL";
  public static final String GET_REC_PMT_BEFORE_ENDDATE_BY_CUSTOMER = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE EndDate <= ? AND CustomerID = ? AND Status IN (?,?) AND PaymentName IS NULL";
  public static final String GET_REC_PMT_TEMPLATES_BEFORE_LAST_MODIFIED = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE LastModified <= ? AND Status IN (?) AND PaymentType = ?";
  public static final String GET_REC_PMT_TEMPLATES_BEFORE_LAST_MODIFIED_BY_CUSTOMER = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction WHERE LastModified <= ? AND CustomerID = ? AND Status IN (?) AND PaymentType = ?";
  public static final String UPDATE_REC_PMT = "UPDATE BPW_RecPmtInstruction SET CustomerID=?,PayeeID=?,PayeeListID=?,BankID=?, AcctDebitID=?,AcctDebitType=?,PayAcct=?,DateCreate=?, CurDef=?, Amount=?,InitialAmt=?,FinalAmt=?, InstanceCount=?,Frequency=?, StartDate=?, EndDate=?, LogID=?, Status=?, Memo=?, SubmittedBy=?, LastModified=?, PaymentName=? WHERE RecSrvrTID=?";
  public static final String UPDATE_REC_PMT_STATUS = "UPDATE BPW_RecPmtInstruction SET Status=? WHERE RecSrvrTID=?";
  public static final String GET_RECPMTHIST_BY_DATE_RANGE = "SELECT RecSrvrTID, Frequency, StartDate, EndDate, InstanceCount, Status, Amount, FinalAmt, FIID FROM BPW_RecPmtInstruction WHERE CustomerID = ? AND StartDate <= ? AND (EndDate >= ? OR EndDate = -1) ";
  public static final String ADD_RECPAYMENT = "INSERT INTO BPW_RecPmtInstruction(RecSrvrTID, CustomerID, PayeeID, PayeeListID, AcctDebitID, AcctDebitType, Amount, CurDef, BankID, DateCreate, StartDate, Frequency, InstanceCount, EndDate, Memo, PaymentName, SubmittedBy, LogID, FIID, Status, PaymentType, BatchID ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_RECPAYMENT = "UPDATE BPW_RecPmtInstruction SET CustomerID=?,PayeeID=?, PayeeListID=?, AcctDebitID=?, AcctDebitType=?, Amount=?, CurDef=?, BankID=?, PaymentName=?, Memo=?, SubmittedBy=?, LastModified=?, Frequency=?, InstanceCount=? WHERE RecSrvrTID=?";
  public static final String GET_RECPAYMENT = "SELECT CustomerID,PayeeID, PayeeListID, AcctDebitID, AcctDebitType, Amount, CurDef, BankID, DateCreate, StartDate, Memo, PaymentName, SubmittedBy, LogID, FIID, Frequency, InstanceCount, EndDate FROM BPW_RecPmtInstruction WHERE RecSrvrTID=?";
  public static final String GET_ALL_RECPMT_TEMPLATE = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction where PaymentName = ?  AND SubmittedBy = ? AND Status != 'CANCELEDON'";
  public static final String UPDATE_REC_PMT_STATUS_LAST_MODIFIED = "UPDATE BPW_RecPmtInstruction SET Status=?, LastModified=? WHERE RecSrvrTID=?";
  public static final String UPDATE_BATCH_REC_PMT_STATUS_LAST_MODIFIED = "UPDATE BPW_RecPmtInstruction SET Status=?, LastModified=? WHERE BatchID=?";
  public static final String GET_PMTXTRAINFO_VAL = "SELECT Value FROM BPW_PmtExtraInfo WHERE SrvrTID = ? AND Name = ? ";
  public static final String GET_ALLPMTXTRAINFO_SRVRTID = "SELECT Name,Value FROM BPW_PmtExtraInfo WHERE SrvrTID = ?";
  public static final String ADD_PMTXTRAINFO = "INSERT INTO  BPW_PmtExtraInfo (SrvrTID,Name,Value) VALUES (?,?,?)";
  public static final String MOD_PMTXTRAINFO = "UPDATE BPW_PmtExtraInfo set Value = ? WHERE SrvrTID = ? AND Name = ? ";
  public static final String DEL_PMTXTRAINFO_BY_SRVRTID = "DELETE FROM BPW_PmtExtraInfo WHERE SrvrTID = ? And Name = ?";
  public static final String DEL_ALLPMTXTRAINFO_BY_SRVRTID = "DELETE FROM BPW_PmtExtraInfo WHERE SrvrTID = ?";
  public static final String ADD_RECSRVRTID_TO_SRVRTID = "INSERT INTO BPW_RecSrvrTIDToSrvrTID (RecSrvrTID,SrvrTID, IndexType) VALUES (?,?,?)";
  public static final String DELETE_RECSRVRTID_TO_SRVRTID = "DELETE FROM BPW_RecSrvrTIDToSrvrTID WHERE RecSrvrTID=? AND SrvrTID=? AND IndexType=?";
  public static final String DELETE_RECSRVRTID_TO_SRVRTID_BY_RECSRVRTID = "DELETE FROM BPW_RecSrvrTIDToSrvrTID WHERE RecSrvrTID=? AND IndexType=?";
  public static final String DELETE_RECSRVRTID_TO_SRVRTID_BY_SRVRTID = "DELETE FROM BPW_RecSrvrTIDToSrvrTID WHERE SrvrTID=? AND IndexType=?";
  public static final String GET_RECSRVRTID_BY_SRVRTID = "SELECT RecSrvrTID FROM BPW_RecSrvrTIDToSrvrTID WHERE SrvrTID=? AND IndexType=?";
  public static final String GET_SRVRTID_BY_RECSRVRTID = "SELECT SrvrTID FROM BPW_RecSrvrTIDToSrvrTID WHERE RecSrvrTID=? AND IndexType=?";
  public static final String ADD_RECSRVRTRANS = "INSERT INTO BPW_RecSrvrTrans( RecSrvrTID,BankID, AcctID,AcctType, CustomerID, Response, Token, Submitdate, SyncType, Status) VALUES(?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_RECSRVRTRANS = "DELETE FROM BPW_RecSrvrTrans WHERE RecSrvrTID=?";
  public static final String GET_RECSRVRTRANS = "SELECT Response, Status FROM BPW_RecSrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=?";
  public static final String GET_RECSRVRTRANS_WITH_BANK = "SELECT Response, Status FROM BPW_RecSrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=? AND BankID=?";
  public static final String GET_RECSRVRTRANS_BY_RECSRVRTID = "SELECT SyncType, Response FROM BPW_RecSrvrTrans WHERE RecSrvrTID=?";
  public static final String GET_RECSRVRTRANS_BY_UID_ACCT_STATUS = "SELECT Response FROM BPW_RecSrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=? AND Status=?";
  public static final String UPDATE_RECSRVRTRANS = "UPDATE BPW_RecSrvrTrans SET Response=?, Submitdate=?, Status=?  WHERE RecSrvrTID=?";
  public static final String UPDATE_RECSRVRTRANS2 = "UPDATE BPW_RecSrvrTrans SET BankID=?, AcctID=?, AcctType=?, Response=?, Submitdate=?, Status=? WHERE RecSrvrTID=?";
  public static final String GET_ALL_RECSRVRTRANS = "SELECT BankID, AcctID, AcctType, CustomerID, Response, SyncType, Token, Submitdate, Status FROM BPW_RecSrvrTrans WHERE RecSrvrTID=?";
  public static final String GET_REC_TRANS = "SELECT Response, Status FROM BPW_RecTrans WHERE AcctID=? AND SyncType=?";
  public static final String UPDATE_REC_TRANS = "UPDATE BPW_RecTrans SET Response=?, Status=? WHERE AcctID=? AND SyncType=?";
  public static final String ADD_RECXFER = "INSERT INTO BPW_RecXferInstruction (RecSrvrTID,CustomerID,FIID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,Frequency,StartDate,EndDate,InstanceCount,DateCreate,Status,LastModified,LogID,SubmittedBy,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_RECXFER = "DELETE FROM BPW_RecXferInstruction WHERE CustomerID=?";
  public static final String DELETE_RECXFER_BY_RECSRVRTID = "DELETE FROM BPW_RecXferInstruction WHERE RecSrvrTID=?";
  public static final String GET_RECXFER = "SELECT Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,Frequency,StartDate,EndDate,InstanceCount,DateCreate,CustomerID,Status,LogID,FIID,SubmittedBy,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_RecXferInstruction WHERE RecSrvrTID=?";
  public static final String GET_RECXFER_FIXED = "SELECT RecSrvrTID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,Frequency,StartDate,EndDate,InstanceCount,DateCreate,CustomerID,Status,LogID,FIID,SubmittedBy,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_RecXferInstruction";
  public static final String GET_RECXFER_COUNT = "SELECT count(*) as TRANSFERCOUNT FROM BPW_RecXferInstruction";
  public static final String GET_RECXFER_BEFORE_ENDDATE = "SELECT RecSrvrTID FROM BPW_RecXferInstruction WHERE EndDate <= ? AND Status IN (?,?) ";
  public static final String GET_RECXFER_BEFORE_ENDDATE_BY_CUSTOMER = "SELECT RecSrvrTID FROM BPW_RecXferInstruction WHERE EndDate <= ? AND CustomerID = ? AND Status IN (?,?)";
  public static final String GET_RECXFER_IDS_BY_CUSTOMERID = "SELECT RecSrvrTID, LogID FROM BPW_RecXferInstruction WHERE CustomerID=? ";
  public static final String UPDATE_RECXFER = "UPDATE BPW_RecXferInstruction SET Amount=?,BankID=?,BranchID=?,AcctDebitID=?,AcctDebitType=?,AcctCreditID=?,AcctCreditType=?,Frequency=?,StartDate=?,EndDate=?,InstanceCount=?,CustomerID=?,Status=?,LastModified=?, SubmittedBy=?,FromBankID=?,FromBranchID=?,CurDef=?,ToAmount=?, ToAmountCurrency=?, UserAssignedAmount=? WHERE RecSrvrTID=?";
  public static final String UPDATE_RECXFER_STATUS = "UPDATE BPW_RecXferInstruction SET Status=? WHERE RecSrvrTID=?";
  public static final String GET_RECXFERHIST_BY_DATE_RANGE = "SELECT RecSrvrTID, Frequency, StartDate, EndDate, InstanceCount, Status,FIID FROM BPW_RecXferInstruction WHERE CustomerID = ? AND StartDate <= ? AND (EndDate >= ? OR EndDate = -1) ";
  public static final String GET_RECXFERHIST_DATE_RANGE = "SELECT RecSrvrTID, Status, FIID  FROM BPW_RecXferInstruction WHERE CustomerID = ? AND StartDate <= ? AND (EndDate >= ? OR EndDate = -1) ";
  public static final String GET_RECXFERHIST_BY_DATE_RANGE_PAGED = "SELECT RecSrvrTID, CustomerID, Amount, FIID, AcctDebitID, AcctDebitType,  AcctCreditID, AcctCreditType, Frequency, StartDate, EndDate, Status, CurDef,  ToAmount, ToAmountCurrency, UserAssignedAmount, SubmittedBy  FROM BPW_RecXferInstruction WHERE StartDate <= cast (? as Integer) AND (EndDate >= cast (? as Integer) OR EndDate = -1) ";
  public static final String ADD_REQACTLOG = "INSERT INTO BPW_ReqActivityLog (LogID, CustomerID, ReqType, LogDate,Content) VALUES (?,?,?,?,?)";
  public static final String DELETE_REQACTLOG = "DELETE FROM BPW_ReqActivityLog WHERE LogDate <= ?";
  public static final String GET_ALL_REQACTLOG = "SELECT LogID, CustomerID, ReqType, LogDate, Content FROM BPW_ReqActivityLog ";
  public static final String GET_REQACTLOG = "SELECT LogID,CustomerID, ReqType, LogDate, Content FROM BPW_ReqActivityLog WHERE LogID=? ORDER BY LogDate";
  public static final String ADD_SRVRTRANS = "INSERT INTO BPW_SrvrTrans( SrvrTID, BankID, AcctID, AcctType, CustomerID, Response, Token,Submitdate, SyncType, Status, DtProcessed, Memo, TransFor, CheckNum) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_SRVRTRANS = "DELETE FROM BPW_SrvrTrans WHERE SrvrTID=?";
  public static final String GET_SRVRTRANS = "SELECT SyncType,Response FROM BPW_SrvrTrans WHERE SrvrTID=?";
  public static final String GET_TRANS_DT = "SELECT DtProcessed,Submitdate FROM BPW_SrvrTrans WHERE SrvrTID=?";
  public static final String GET_SRVRTRANS_BY_UID_ACCT = "SELECT Response FROM BPW_SrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=?";
  public static final String GET_SRVRTRANS_BY_UID_ACCT_BANK = "SELECT Response FROM BPW_SrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=? AND BankID=? ";
  public static final String GET_SRVRTRANS_BY_UID_ACCT_STATUS = "SELECT Response FROM BPW_SrvrTrans WHERE CustomerID=? AND AcctID=? AND AcctType=? AND SyncType=? AND Status=?";
  public static final String UPDATE_SRVRTRANS = "UPDATE BPW_SrvrTrans SET BankID=?, AcctID=?, AcctType=?, Response=?, Submitdate=?, Status=?, DtProcessed=?, Memo=?, TransFor=?, CheckNum =? WHERE SrvrTID=?";
  public static final String UPDATE_SRVRTRANS_INCL_SUBMITDATE = "UPDATE BPW_SrvrTrans SET Response=?, Submitdate=?, Status=?, DtProcessed=?, Memo=?, TransFor=?, CheckNum =? WHERE SrvrTID=?";
  public static final String UPDATE_SRVRTRANS_HIST = "UPDATE BPW_SrvrTrans SET Response=?, Status=?, Submitdate=? WHERE SrvrTID=?";
  public static final String SRVRTRANS_GET_ACCT_BY_UID = "SELECT DISTINCT AcctID, AcctType FROM BPW_SrvrTrans WHERE CustomerID=? AND SyncType=? ";
  public static final String GET_TRANS = "SELECT Response, Status FROM BPW_Trans WHERE AcctID=? AND SyncType=?";
  public static final String UPDATE_TRANS = "UPDATE BPW_Trans SET Response=?, Status=? WHERE AcctID=? AND SyncType=?";
  public static final String ADD_TRANSID = "INSERT INTO BPW_TransID(TID, Submitdate) VALUES( ?,?)";
  public static final String GET_TRANS_TID_BY_TID = "SELECT TID FROM BPW_TransID WHERE TID = ?";
  public static final String DELETE_TRANSID = "DELETE FROM BPW_TransID WHERE Submitdate <= ?";
  public static final String LOCK_UID = "INSERT INTO BPW_UidLock (CustomerID) VALUES( ? )";
  public static final String ADD_XFER = "INSERT INTO BPW_XferInstruction (SrvrTID,CustomerID,FIID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateCreate,DateToPost,Status,LogID,RecSrvrTID,SubmittedBy,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_XFER = "DELETE FROM BPW_XferInstruction WHERE CustomerID=?";
  public static final String DELETE_XFER_BY_SRVRTID = "DELETE FROM BPW_XferInstruction WHERE SrvrTID=?";
  public static final String GET_XFER = "SELECT Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateCreate,DateToPost,CustomerID,Status,LogID,RecSrvrTID,FIID,SubmittedBy,LastModified,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction WHERE SrvrTID=?";
  public static final String GET_XFER_FIXED = "SELECT SrvrTID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateCreate,DateToPost,CustomerID,Status,LogID,RecSrvrTID,FIID,SubmittedBy,LastModified,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction";
  public static final String GET_XFER_COUNT = "SELECT count(*) AS TRANSFERCOUNT FROM BPW_XferInstruction";
  public static final String GET_XFER_RECSRVRTID = "SELECT Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateCreate,DateToPost,CustomerID,Status,LogID,RecSrvrTID,FIID,SubmittedBy,LastModified,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction WHERE RecSrvrTID=?";
  public static final String BPW_XFERINSTRUCTION_COLUMNS = "Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateCreate,DateToPost,CustomerID,Status,LogID,RecSrvrTID,FIID,SubmittedBy,LastModified,FromBankID,FromBranchID,SrvrTID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount ";
  public static final String GET_XFER_BY_STATUS = "SELECT SrvrTID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateToPost,CustomerID,SubmittedBy,LogID,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction WHERE FIID=? AND Status=?";
  public static final String GET_XFER_BY_BATCHID = "SELECT SrvrTID,Amount,BankID,BranchID,AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateToPost,CustomerID,SubmittedBy,logID,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction WHERE BatchID=?";
  public static final String GET_XFER_BY_STATUS_UID = "SELECT SrvrTID,Amount,BankID,BranchID, AcctDebitID,AcctDebitType,AcctCreditID,AcctCreditType,DateToPost,FIID,FromBankID,FromBranchID,CurDef,ToAmount,ToAmountCurrency,UserAssignedAmount FROM BPW_XferInstruction WHERE Status=? AND CustomerID=? ";
  public static final String GET_XFER_IDS_BY_CUSTOMERID = "SELECT SrvrTID, LogID FROM BPW_XferInstruction WHERE CustomerID=? ";
  public static final String GET_XFERS_BEFORE_DATETOPOST = "SELECT SrvrTID FROM BPW_XferInstruction WHERE DateToPost<= ? AND Status IN (?, ?, ?, ?, ?) ";
  public static final String GET_XFERS_BEFORE_DATETOPOST_BY_CUSTOMER = "SELECT SrvrTID FROM BPW_XferInstruction WHERE DateToPost <= ?  AND CustomerID = ? AND Status IN (?, ?, ?, ?, ?) ";
  public static final String UPDATE_XFER = "UPDATE BPW_XferInstruction SET Amount=?,BankID=?,BranchID=?,AcctDebitID=?,AcctDebitType=?,AcctCreditID=?,AcctCreditType=?, DateToPost=?, CustomerID=?, Status=?, FromBankID=?, FromBranchID=?, SubmittedBy=?, LastModified=?, CurDef=?,ToAmount=?, ToAmountCurrency=?, UserAssignedAmount=? WHERE SrvrTID=?";
  public static final String UPDATE_XFER_STATUS = "UPDATE BPW_XferInstruction SET Status=? WHERE SrvrTID=?";
  public static final String UPDATE_XFER_STATUS_CONFIRMNUM = "UPDATE BPW_XferInstruction SET Status=?, ConfirmNum=? WHERE SrvrTID=?";
  public static final String UPDATE_XFER_STATUS_CONFIRMNUM_AMT = "UPDATE BPW_XferInstruction SET Status=?, ConfirmNum=?, Amount=?, ToAmount=? WHERE SrvrTID=?";
  public static final String GET_XFERHIST_BY_DATE_RANGE = "SELECT SrvrTID, DateToPost, Status, FIID FROM BPW_XferInstruction WHERE CustomerID = ? AND DateToPost >= ? AND DateToPost <= ? ";
  public static final String GET_XFERHIST_BY_DATE_RANGE_PAGED = "SELECT SrvrTID, BankID, BranchID, CustomerID, FIID, Amount, AcctDebitID, AcctDebitType, AcctCreditID, AcctCreditType, DateCreate, DateToPost, Status, LogID, ConfirmNum, RecSrvrTID, SubmittedBy, FromBankID, FromBranchID, CurDef, ToAmount, ToAmountCurrency, UserAssignedAmount FROM BPW_XferInstruction WHERE DateToPost <= ? AND DateToPost >= ? ";
  public static final String GET_SCHINFO_BY_STATUS_INSTRTYPE_FIID_DATE = "SELECT ScheduleID, Status, StatusOption, Frequency, StartDate, RecordCreateDate, InstanceCount, NextInstanceDate, WorkInstanceDate, CurInstanceNum, InstructionType, InstructionID, LogID, Perpetual FROM SCH_ScheduleInfo WHERE FIId=? AND InstructionType=? AND Status=? AND WorkInstanceDate<=? ORDER BY ScheduleID ASC";
  public static final String GET_SCHINFO_BY_STATUS_INSTRTYPE_FIID = "SELECT ScheduleID, Status, StatusOption, Frequency, StartDate, RecordCreateDate, InstanceCount, NextInstanceDate, WorkInstanceDate, CurInstanceNum, InstructionType, InstructionID, LogID, Perpetual FROM SCH_ScheduleInfo WHERE FIId=? AND InstructionType=? AND Status=? ORDER BY ScheduleID ASC";
  public static final String UPDATE_SCHINFO_STATUS = "UPDATE SCH_ScheduleInfo SET Status=? WHERE ScheduleID=?";
  public static final String CREATE_SCH_HIST = "INSERT INTO SCH_ScheduleHistory ( SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_SCH_HIST_BASE = "SELECT SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension FROM SCH_ScheduleHistory WHERE ";
  public static final String GET_LAST_SCH_HIST = "SELECT SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension FROM SCH_ScheduleHistory WHERE FIId=? and InstructionType=? and EventType=? ORDER BY LogDate DESC";
  public static final String GET_PROCESSID_BY_INSTTYPE_FROMTOLOGDATE_EVENTTYPE = "SELECT DISTINCT ProcessId FROM SCH_ScheduleHistory WHERE InstructionType = ? AND LogDate >= ? AND LogDate <= ? AND EventType = ?";
  public static final String GET_PROCESSID_BY_CUTOOFID_FROMTOLOGDATE_EVENTTYPE = "SELECT DISTINCT ProcessId FROM SCH_ScheduleHistory WHERE CutOffId = ? AND LogDate >= ? AND LogDate <= ? AND EventType = ?";
  public static final String GET_SCH_HIST_BY_CUTOFFID = "SELECT SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension FROM SCH_ScheduleHistory WHERE  CutOffId = ?";
  public static final String GET_SCH_HIST_BY_INSTTYPE = "SELECT SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension FROM SCH_ScheduleHistory WHERE  InstructionType = ?";
  public static final String SQL_GET_SCH_HIST_BY_STARTDATE = " AND LogDate >= ?";
  public static final String SQL_GET_SCH_HIST_BY_ENDDATE = " AND LogDate <= ?";
  public static final String GET_SCH_HISTORY_BY_FIID_INST_PROCESSID_FILENAME = "SELECT SchHistID, LogDate, ScheduleName, FIId, InstructionType, ServerName, EventType, EventTrigger, EventDescription, ProcessId, FileName, CutOffId, CutOffDay, CutOffProcessTime, CutOffExtension FROM SCH_ScheduleHistory WHERE  FIId = ? AND InstructionType = ? AND ProcessId = ? AND FileName is not null ";
  public static final String SQL_SCH_HIST_ORDERBY_BY_PROCESSID_LOGDATE_SCHHISTID = " Order By ProcessId, LogDate, SchHistID ";
  public static final String SQL_SCH_HIST_ORDERBY_LOGDATE_DESC = " Order By LogDate Desc";
  public static final String DELETE_XREF_BY_PAYEEID = "DELETE FROM BPW_ORCCLinkCrossReference WHERE PayeeID = ?";
  public static final String GET_PAYMENT_IDS_WITH_ROUTEID = "SELECT SrvrTID, FIID FROM BPW_PmtInstruction WHERE CustomerID=? and RouteID=? ";
  public static final String GET_REC_PAYMENT_IDS_WITH_ROUTEID = "SELECT RecSrvrTID FROM BPW_RecPmtInstruction rpi, BPW_Payee pe WHERE rpi.CustomerID=? and rpi.PayeeID=pe.PayeeID AND pe.RouteID = ? ";
  public static final String SELECT_FROM_INTERNAL_INDICES = "SELECT IndexName, IndexValue, IndexString FROM BPW_InternalIndices";
  public static final String GET_BPWFI_BY_NAME_RTN = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode FROM BPW_FIInfo WHERE FIName = ? AND FIRTN = ?";
  public static final String GET_BPWFI_BY_RTN = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIRTN = ? AND FIStatus != 'CLOSED'";
  public static final String ADD_BPWFI = "INSERT INTO BPW_FIInfo (FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3,  City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_BPWFI = "UPDATE BPW_FIInfo SET FIRTN = ?, FIType = ?, FIName = ?, NickName = ?, FIDesc = ?, FIGroup = ?, FIRank = ?, AddrLine1 = ?, AddrLine2 = ?, AddrLine3 = ?,  City = ?, State = ?, PostalCode = ?, Country = ?, DayPhone = ?, Extension = ?, ContactName = ?, AmtLimit = ?, SWIFTRTN = ?, CHIPSRTN = ?, OtherRTN = ?, CurrencyCode = ?, ACHTransWarehouse = ?, ACHMaxNoFutureDays = ?, ACHSameDayEffDate = ?, ETFDepositAcct = ?, ETFDepositAcctType = ?, ETFMinDepositAmount = ?, ETFMaxDepositAmount = ? WHERE FIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_BPWFI_IDS = "SELECT FIId FROM BPW_FIInfo WHERE FIStatus != 'CLOSED'";
  public static final String GET_BPWFI = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIId = ?  AND FIStatus != 'CLOSED'";
  public static final String GET_BPWFI_ALL_STATUS = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIId = ? ";
  public static final String GET_BPWFI_STATUS = "SELECT FIStatus FROM BPW_FIInfo WHERE FIId = ?";
  public static final String UPDATE_STATUS_BPW_FI = "UPDATE BPW_FIInfo SET FIStatus = ?  WHERE FIId = ?";
  public static final String GET_BPWFI_BY_TYPE = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIType = ? AND FIStatus != 'CLOSED'";
  public static final String GET_BPWFI_BY_STATUS = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIStatus = ? AND FIStatus != 'CLOSED'";
  public static final String GET_BPWFI_BY_GROUP = "SELECT FIId, FIRTN, FIType, FIName, NickName, FIStatus, FIDesc, FIGroup, FIRank, AddrLine1, AddrLine2, AddrLine3, City, State, PostalCode, Country, DayPhone, Extension, SubmitDate, ContactName , ActivationDate, AmtLimit, SWIFTRTN, CHIPSRTN, OtherRTN, LogId, CurrencyCode, ACHTransWarehouse, ACHMaxNoFutureDays, ACHSameDayEffDate, ETFDepositAcct, ETFDepositAcctType, ETFMinDepositAmount, ETFMaxDepositAmount FROM BPW_FIInfo WHERE FIGroup = ? AND FIStatus != 'CLOSED'";
  public static final String CLOSE_ACH_PAYEE = "UPDATE ACH_Payee SET Status = 'CLOSED' WHERE BankRTN = ?";
  public static final String CLOSE_ACH_BATCH = "UPDATE ACH_Batch SET BatchStatus = 'CLOSED' WHERE ODFIACHId = ?";
  public static final String CLOSE_ACH_BATCH_TEMPLATE = "UPDATE ACH_BatchTemplate SET BatchStatus = 'CLOSED' WHERE ODFIACHId = ?";
  public static final String DELETE_TEMPLATE_BY_ODFIACHID = "DELETE from ACH_BatchTemplate WHERE ODFIACHId = ?";
  public static final String DELETE_TEMPLATE_BY_COMPID = "DELETE from ACH_BatchTemplate WHERE CompId = ?";
  public static final String CLOSE_ACH_REC_BATCH = "UPDATE ACH_RecBatch SET BatchStatus = 'CLOSED' WHERE ODFIACHId = ?";
  public static final String CLOSE_ACH_ADDENDA = "UPDATE ACH_Addenda SET AddendaStatus = 'CLOSED' WHERE RecordId IN (SELECT RecordId FROM ACH_Record WHERE RDFIACHId = ?)";
  public static final String CLOSE_ACH_RECORD = "UPDATE ACH_Record SET RecordStatus = 'CLOSED' WHERE RDFIACHId = ?";
  public static final String CLOSE_ACH_REC_RECORD = "UPDATE ACH_RecRecord SET RecordStatus = 'CLOSED' WHERE RDFIACHId = ?";
  public static final String DELETE_FI = "UPDATE BPW_FIInfo SET FIStatus = 'CLOSED' WHERE FIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_FIID_BY_COMPID = "Select b.FIId  From ACH_Company a, ACH_FIInfo b  Where a.CompStatus !=' CLOSED'AND a.ACHFIId = b.ACHFIId AND a.CompId = ? ";
  public static final String ADD_ACH_COMPANY = "Insert into ACH_Company (CustomerId,CompId,ACHFIId,CompName,NickName,CompACHId,BankAcctId,BankId,BankAcctType,CompStatus,CompDesc,CompType,CompGroup,CompRank,AddrLine1,AddrLine2,AddrLine3,City,State,PostalCode,Country,DayPhone,Extension,ContactName,SubmitDate,ActivationDate,LogId,Memo,SubmittedBy,BatchType) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String UPDATE_ACH_COMPANY = "Update ACH_Company set CompName = ?, NickName = ?, BankAcctId = ?,BankId = ?, BankAcctType = ?, CompDesc = ?,CompType = ?, CompGroup = ?, CompRank = ?, AddrLine1 = ?,AddrLine2 = ?, AddrLine3 = ?, City = ?, State = ?,PostalCode = ?, Country = ?, DayPhone = ?, Extension = ?, ContactName = ?, Memo = ?, BatchType = ?  Where CompId = ? AND CompStatus != 'CLOSED'";
  public static final String CHECK_COMPANY_EXIST = "Select count(*) COUNT  From ACH_Company Where CompId = ? AND CompStatus != 'CLOSED'";
  public static final String GET_COMPANY_STATUS = "Select CompStatus From ACH_Company Where CompId = ?";
  public static final String DELETE_ACH_COMPANY = "Delete from ACH_Company Where CompId = ?";
  public static final String GET_ACH_COMPANY_COLUMNS = "Select a.CompId, a.ACHFIId, a.CompName, a.NickName, a.CompACHId,a.BankAcctId,a.BankId,a.CustomerId,a.BankAcctType,a.CompStatus,a.CompDesc,a.CompType,a.CompGroup,a.CompRank,a.AddrLine1,a.AddrLine2,a.AddrLine3,a.City,a.State,a.PostalCode,a.Country,a.DayPhone,a.Extension,a.ContactName,a.SubmitDate,a.ActivationDate,a.LogId, a.Memo, a.SubmittedBy, a.BatchType ";
  public static final String GET_ACH_COMPANY = "Select a.CompId, a.ACHFIId, a.CompName, a.NickName, a.CompACHId,a.BankAcctId,a.BankId,a.CustomerId,a.BankAcctType,a.CompStatus,a.CompDesc,a.CompType,a.CompGroup,a.CompRank,a.AddrLine1,a.AddrLine2,a.AddrLine3,a.City,a.State,a.PostalCode,a.Country,a.DayPhone,a.Extension,a.ContactName,a.SubmitDate,a.ActivationDate,a.LogId, a.Memo, a.SubmittedBy, a.BatchType , b.ODFIACHId From ACH_Company a,  ACH_FIInfo b Where b.ACHFIId = a.ACHFIId AND a.CompId = ? ";
  public static final String GET_ACH_COMPANY_LIST = "Select a.CompId, a.ACHFIId, a.CompName, a.NickName, a.CompACHId,a.BankAcctId,a.BankId,a.CustomerId,a.BankAcctType,a.CompStatus,a.CompDesc,a.CompType,a.CompGroup,a.CompRank,a.AddrLine1,a.AddrLine2,a.AddrLine3,a.City,a.State,a.PostalCode,a.Country,a.DayPhone,a.Extension,a.ContactName,a.SubmitDate,a.ActivationDate,a.LogId, a.Memo, a.SubmittedBy, a.BatchType , b.ODFIACHId From ACH_Company a,  ACH_FIInfo b WHERE b.ACHFIId = a.ACHFIId AND a.CompStatus != 'CLOSED'";
  public static final String GET_COMPANY_WITH_ACHIID = "Select a.CompId, a.ACHFIId, a.CompName, a.NickName, a.CompACHId,a.BankAcctId,a.BankId,a.CustomerId,a.BankAcctType,a.CompStatus,a.CompDesc,a.CompType,a.CompGroup,a.CompRank,a.AddrLine1,a.AddrLine2,a.AddrLine3,a.City,a.State,a.PostalCode,a.Country,a.DayPhone,a.Extension,a.ContactName,a.SubmitDate,a.ActivationDate,a.LogId, a.Memo, a.SubmittedBy, a.BatchType , b.ODFIACHId From ACH_Company a,  ACH_FIInfo b Where b.ACHFIId = a.ACHFIId AND a.CompACHId = ? AND a.CompStatus != 'CLOSED'";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_FI = " AND a.ACHFIId in ( SELECT ACHFIId from ACH_FIInfo where FIId=? AND FIStatus != 'CLOSED')";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_ODFIACHID = " AND a.ACHFIId in  ( Select ACHFIId from ACH_FIInfo where ODFIACHId = ?  AND FIStatus != 'CLOSED')";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_CUSTOMERID = " AND CustomerId =? ";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_COMPACHID = " AND CompACHId =? ";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_COMPGROUP = " AND CompGroup =? ";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_COMPTYPE = " AND CompType =? ";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_COMPIDS = " AND CompId IN (";
  public static final String CLAUSE_GET_ACH_COMPANY_LIST_BY_COMPSTATUS = " AND CompStatus IN (";
  public static final String CLAUSE_GET_ACH_COMPANY_ORDER_BY_COMPID = " ORDER BY CompId";
  public static final String GET_ACH_COMPANY_SUMMARY_LIST = "SELECT AC.CompId, AC.CompName, AC.CustomerId, AB.BatchCategory, AB.RecordCount, AB.TotalCredit, AB.TotalDebit From ACH_Company AC, ACH_Batch AB where  AC.CompStatus != 'CLOSED' AND AB.BatchStatus != 'CANCELEDON' AND AB.BatchStatus != 'ACHTEMPORARY' AND AB.BatchType = 'Current' AND AC.CompId = AB.CompId";
  public static final String GET_ACH_REC_COMPANY_SUMMARY_LIST = "SELECT AC.CompId, AC.CompName, AC.CustomerId, AB.BatchCategory, AB.RecordCount, AB.TotalCredit, AB.TotalDebit From ACH_Company AC, ACH_RecBatch AB where  AC.CompStatus != 'CLOSED' AND AB.BatchStatus != 'CANCELEDON' AND AB.BatchStatus != 'ACHTEMPORARY' AND AC.CompId = AB.CompId";
  public static final String CLAUSE_GET_ACH_COMPANY_SUMMARY_BY_CUSTOMERID = " AND AC.CustomerId = ?";
  public static final String CLAUSE_GET_ACH_COMPANY_SUMMARY_BY_COMPID_ARRAY = " AND AC.CompId IN (";
  public static final String CLAUSE_GET_ACH_COMPANY_SUMMARY_BY_BATCH_CATEGORY_ARRAY = " AND AB.BatchCategory IN (";
  public static final String CLAUSE_GET_ACH_COMPANY_SUMMARY_ORDER_BY = " ORDER BY AC.CompId, AB.BatchCategory";
  public static final String UPDATE_STATUS_ACH_BATCH = "Update ACH_Batch set BatchStatus = ?  Where CompId = ?";
  public static final String UPDATE_COMP_STATUS_ACTV_DATE = "Update ACH_Company set CompStatus = ?, ActivationDate = ?  Where CompId = ?";
  public static final String UPDATE_BPWFI_STATUS_ACTV_DATE = "Update BPW_FIInfo set FIStatus = ?, ActivationDate = ?  Where FIId = ?";
  public static final String UPDATE_ACHFI_STATUS_ACTV_DATE = "Update ACH_FIInfo set FIStatus = ?, ActivationDate = ?  Where ODFIACHId = ?";
  public static final String UPDATE_PAYEE_STATUS_ACTV_DATE = "Update ACH_Payee set Status = ?, ActivationDate = ?  Where PayeeId = ?";
  public static final String UPDATE_STATUS_ACH_REC_BATCH = "Update ACH_RecBatch set BatchStatus = ?  Where CompId = ?";
  public static final String UPDATE_STATUS_ACH_RECORD_BY_COMPID = "Update ACH_Record set  RecordStatus = ?  Where PayeeId in  (select PayeeId from ACH_Payee where CompId = ? )";
  public static final String UPDATE_STATUS_ACH_RECORD_BY_CUSTID = "Update ACH_Record set  RecordStatus = ?  Where PayeeId in  (select PayeeId from ACH_Payee where CustomerId = ? )";
  public static final String UPDATE_STATUS_ACH_REC_RECORD_BY_COMPID = "Update ACH_RecRecord set  RecordStatus = ?  Where PayeeId in  (select PayeeId from ACH_Payee where CompId = ? )";
  public static final String UPDATE_STATUS_ACH_REC_RECORD_BY_CUSTID = "Update ACH_RecRecord set  RecordStatus = ?  Where PayeeId in  (select PayeeId from ACH_Payee where CustomerId = ? )";
  public static final String UPDATE_STATUS_ACH_ADDENDA = "Update ACH_Addenda set  AddendaStatus = ?  Where RecordId in  (select RecordId from ACH_Record where PayeeId in  (select PayeeId from ACH_Payee where CustomerId = ? )) ";
  public static final String UPDATE_STATUS_ACH_PAYEE = "Update ACH_Payee set  Status = ?  Where CustomerId = ?";
  public static final String UPDATE_STATUS_BATCH_TEMPATE_BY_COMPID = "Update ACH_BatchTemplate set  BatchStatus = ?  Where CompId = ?";
  public static final String UPDATE_PAYEE_STATUS_BY_PAYEEID = "Update ACH_Payee set  Status = ?  Where PayeeId = ?";
  public static final String UPDATE_STATUS_ACH_COMPANY = "Update ACH_Company set CompStatus = ?  Where CompId = ?";
  public static final String GET_ACH_PAYEE_BY_ACCT_INFO = "SELECT  PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate, PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee FROM ACH_Payee WHERE CompId = ? AND PayAcct = ? AND BankAcctId = ? AND BankRTN = ? AND Status != 'CLOSED' AND ManagedPayee = 'Y' ";
  public static final String GET_ACH_PAYEE_BY_NICKNAME = "SELECT  PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate, PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee FROM ACH_Payee WHERE CompId = ? AND NickName = ? AND Status != 'CLOSED' AND ManagedPayee = 'Y' ";
  public static final String ADD_ACH_PAYEE = "INSERT INTO ACH_Payee (PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate, PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_ACH_PAYEE_INCLUDE_PAYBANKACTRTN = "UPDATE ACH_Payee SET PayeeType = ?, PayeeGroup = ?, PayeeName = ?, NickName = ?, BankAcctType = ?, CardNum = ?, CardExpireDate = ?, CardTransCode = ?, CardAuthCode = ?, Addr1 = ?, Addr2 = ?, Addr3 = ?, City = ?, State = ?, Zipcode = ?, Country = ?, Phone = ?, Extension = ?, ContactName = ?, Memo = ?, PayAcct = ?, BankAcctId = ?, BankRTN = ?, PrenoteSecCode = ?,PrenoteCredStatus = ?, PrenoteDebStatus = ?, PrenoteDemand = ?, ManagedPayee = ?, SecurePayee = ? WHERE PayeeId = ? AND Status != 'CLOSED'";
  public static final String UPDATE_ACH_PAYEE_PRENOTE_STATUS_BY_PAYEEID = "UPDATE ACH_Payee SET PrenoteCredStatus = ?, PrenoteDebStatus = ? WHERE PayeeId = ?  AND Status != 'CLOSED'";
  public static final String UPDATE_MATURED_ACH_PAYEE_PRENOTE_CRED_STATUS = "UPDATE ACH_Payee SET PrenoteCredStatus = 'Success' WHERE PrenoteCredStatus = 'Pending' AND PrenoteSubmitDate IS NOT NULL  AND PrenoteSubmitDate < ?";
  public static final String UPDATE_MATURED_ACH_PAYEE_PRENOTE_DEB_STATUS = "UPDATE ACH_Payee SET PrenoteDebStatus = 'Success' WHERE PrenoteDebStatus = 'Pending' AND PrenoteSubmitDate IS NOT NULL  AND PrenoteSubmitDate < ?";
  public static final String UPDATE_ACH_PAYEE_PRENOTE_SUBMIT_DATE = "UPDATE ACH_Payee SET PrenoteSubmitDate = ? WHERE PayeeId = ?";
  public static final String GET_PRENOTE_FAILED_PAYEE_COUNT_BY_REC_BATCH = "SELECT COUNT(ar.RecRecordId) FROM ACH_RecRecord ar, ACH_Payee ap WHERE  ar.BatchId = ? AND ar.PayeeId = ap.PayeeId AND ( ( ap.PrenoteCredStatus != 'Success'  AND ap.PrenoteCredStatus != 'Not Required')  OR  ( ap.PrenoteDebStatus != 'Success'  AND ap.PrenoteDebStatus != 'Not Required') )";
  public static final String GET_PRENOTE_FAILED_PAYEE_COUNT_BY_BATCH = "SELECT COUNT(ar.RecordId) FROM ACH_Record ar, ACH_Payee ap WHERE  ar.BatchId = ? AND ar.PayeeId = ap.PayeeId AND ( ( ap.PrenoteCredStatus != 'Success'  AND ap.PrenoteCredStatus != 'Not Required')  OR  ( ap.PrenoteDebStatus != 'Success'  AND ap.PrenoteDebStatus != 'Not Required') )";
  public static final String CLOSE_ACH_ADDENDA_BY_PAYEE = "UPDATE ACH_Addenda SET  AddendaStatus = 'CLOSED' WHERE RecordId IN (SELECT RecordId FROM ACH_Record WHERE PayeeId = ?)";
  public static final String CLOSE_ACH_RECORD_BY_PAYEE = "UPDATE ACH_Record SET RecordStatus = 'CLOSED' WHERE PayeeId = ?";
  public static final String CLOSE_ACH_REC_RECORD_BY_PAYEE = "UPDATE ACH_RecRecord SET RecordStatus = 'CLOSED' WHERE PayeeId = ?";
  public static final String DELETE_ACH_PAYEE = "UPDATE ACH_Payee SET Status = 'CLOSED' WHERE PayeeId = ? AND Status != 'CLOSED'";
  public static final String GET_ACH_PAYEE = "SELECT  PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate,  PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee  FROM ACH_Payee  WHERE PayeeId = ? ";
  public static final String GET_ACH_PAYEE_STATUS = "SELECT Status FROM ACH_Payee WHERE PayeeId = ?";
  public static final String SQL_GET_ACH_PAYEE_LIST = "SELECT a.PayeeId, a.CompId, a.PayAcct, a.PayeeType, a.PayeeGroup, a.PayeeName, a.NickName, a.BankRTN, a.BankAcctId, a.BankAcctType, a.CardNum, a.CardExpireDate, a.CardTransCode, a.CardAuthCode, a.Addr1, a.Addr2, a.Addr3, a.City, a.State, a.Zipcode, a.Country, a.Phone, a.Extension, a.Status, a.ContactName, a.SubmitDate, a.ActivationDate, a.LogId, a.Memo, a.PrenoteCredStatus, a.PrenoteDebStatus, a.PrenoteSubmitDate, a.PrenoteSecCode, a.PrenoteDemand, a.ManagedPayee, a.SubmittedBy, a.SecurePayee  FROM ACH_Payee a, ACH_Company b  WHERE a.CompId = b.CompId  AND a.Status != 'CLOSED'  AND b.CompStatus != 'CLOSED'";
  public static final String SQL_GET_ACH_PAYEE_BY_CUSTOMER = " AND b.CustomerId = ? ";
  public static final String SQL_GET_ACH_PAYEE_IN_TYPE = " AND a.PayeeType IN ( ";
  public static final String SQL_GET_ACH_PAYEE_IN_GROUP = " AND a.PayeeGroup IN ( ";
  public static final String SQL_GET_ACH_PAYEE_IN_COMPID_LIST = " AND a.CompId IN ( ";
  public static final String SQL_GET_ACH_PAYEE_IN_STATUS_LIST = " AND a.Status IN ( ";
  public static final String SQL_GET_ACH_PAYEE_BY_MANAGED_PAYEE = " AND a.ManagedPayee = ? ";
  public static final String SQL_GET_ACH_PAYEE_BY_PRENOTE_CREDIT_STATUS = " AND a.PrenoteCredStatus = ? ";
  public static final String SQL_GET_ACH_PAYEE_BY_FIID = " AND b.ACHFIId IN (SELECT ACHFIId FROM ACH_FIInfo WHERE FIId = ?  AND FIStatus != 'CLOSED') ";
  public static final String SQL_GET_ACH_PAYEE_BY_SUBMITTED_BY = " AND a.SubmittedBy IN ( ";
  public static final String GET_TMPL_BY_NAME_EXTID = "SELECT TemplateId, CompId, CompData, ODFIACHId, BatchType, TemplateExtId, TemplateName, NickName, TemplateGroup, TemplateRank, ExtdInfo, CompEntryDesc, SrvClassCode, CountryCode, OriginCurrCode, DestCurrCode, MsgAuthCode, SubmitDate, BatchStatus, AchVersion, LogId, StdClassCode, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode  FROM ACH_BatchTemplate WHERE TemplateName = ? AND TemplateExtId = ?";
  public static final String ADD_TEMPLATE = "INSERT INTO ACH_BatchTemplate (TemplateId, CompId, CompData, ODFIACHId, BatchType, TemplateExtId, TemplateName, NickName, TemplateGroup, TemplateRank, ExtdInfo, CompEntryDesc, SrvClassCode, CountryCode, OriginCurrCode, DestCurrCode, MsgAuthCode, StdClassCode,FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode, SubmitDate, BatchStatus, AchVersion, LogId) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_ACH_BATCH_TEMPLATE = "UPDATE ACH_BatchTemplate SET CompData = ?, BatchType = ?, NickName = ?, TemplateGroup = ?, TemplateRank = ?, ExtdInfo = ?, CompEntryDesc = ?, SrvClassCode = ?, CountryCode = ?, OriginCurrCode = ?, DestCurrCode = ?, MsgAuthCode = ?, AchVersion = ?, StdClassCode = ?, FrgnExInd = ?, FrgnExRefInd = ?, FrgnExRef = ?, OrigStatusCode = ?  WHERE TemplateId = ?";
  public static final String DELETE_ACH_BATCHTMPL = "DELETE FROM ACH_BatchTemplate WHERE TemplateId = ?";
  public static final String GET_ACH_TMPL_BY_ID = "SELECT TemplateId, CompId, CompData, ODFIACHId, BatchType, TemplateExtId, TemplateName, NickName, TemplateGroup, TemplateRank, ExtdInfo, CompEntryDesc, SrvClassCode, CountryCode, OriginCurrCode, DestCurrCode, MsgAuthCode, SubmitDate, BatchStatus, AchVersion, LogId,StdClassCode, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode  FROM ACH_BatchTemplate WHERE TemplateId = ?";
  public static final String GET_TMPL_BY_COMPID = "SELECT TemplateId, CompId, CompData, ODFIACHId, BatchType, TemplateExtId, TemplateName, NickName, TemplateGroup, TemplateRank, ExtdInfo, CompEntryDesc, SrvClassCode, CountryCode, OriginCurrCode, DestCurrCode, MsgAuthCode, SubmitDate, BatchStatus, AchVersion, LogId,StdClassCode, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode  FROM ACH_BatchTemplate WHERE CompId = ?";
  public static final String GET_TMPL_BY_COMPID_GROUP = "SELECT TemplateId, CompId, CompData, ODFIACHId, BatchType, TemplateExtId, TemplateName, NickName, TemplateGroup, TemplateRank, ExtdInfo, CompEntryDesc, SrvClassCode, CountryCode, OriginCurrCode, DestCurrCode, MsgAuthCode, SubmitDate, BatchStatus, AchVersion, LogId,StdClassCode, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode  FROM ACH_BatchTemplate WHERE CompId = ? AND TemplateGroup = ?";
  public static final String GET_COUNT_ACH_BATCH_INFO = "SELECT Count(BatchId) FROM ACH_Batch WHERE BatchId = ?";
  public static final String ADD_ACH_BATCH_INFO = "INSERT INTO ACH_Batch (BatchId, CompId, CompData, CompACHId, ODFIACHId, BatchType, BatchCategory, BatchBalanceType, EffectiveDate, SettlementDate, CompEntryDesc, DescpDate, BatchNum, SrvClassCode, StdClassCode, CountryCode, OriginCurrCode, DestCurrCode, TotalDebit, TotalCredit, MsgAuthCode, RecordCount, EntryHash, SubmitDate, SubmittedBy, BatchStatus, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode, LogId,ExportFileName, DueDate, DtProcessed, Memo,OffsetAccountID, HeaderCompName, LastModifier, NonOffTotalCredit, NonOffTotalDebit, NonOffRecordCount )VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_ACH_BATCH_HEADER_GEN_INFO = "UPDATE ACH_Batch set CompData =?, BatchBalanceType = ?, EffectiveDate=?, SettlementDate=?, CompEntryDesc=?, DescpDate=?, CountryCode=?, OriginCurrCode=?, DestCurrCode=?, SubmitDate=?, FrgnExInd=?, FrgnExRefInd=?, FrgnExRef=?, OrigStatusCode=?, DueDate=?, DtProcessed=?, Memo=?, SrvClassCode=?, OffsetAccountID=?, HeaderCompName=?, LastModifier =? WHERE BatchId = ? AND BatchStatus IN ('WILLPROCESSON','APPROVAL_REJECTED','APPROVAL_PENDING')";
  public static final String UPDATE_ACH_BATCH_INFO = "UPDATE ACH_Batch set TotalDebit = ?, TotalCredit = ?, MsgAuthCode = ?,  RecordCount = ?, EntryHash = ?, NonOffTotalCredit = ?, NonOffTotalDebit = ?,  NonOffRecordCount = ?  WHERE BatchId = ?";
  public static final String UPDATE_ACH_BATCH_STATUS = "UPDATE ACH_Batch set BatchStatus = ?  WHERE BatchId = ?";
  public static final String UPDATE_ACH_BATCH_STATUS_EXPORT_FILE_NAME_BATCH_NUM_DT_PROCESSED_PROCESSID = "UPDATE ACH_Batch set BatchStatus = ?,  ExportFileName = ?, BatchNum = ? , DtProcessed = ?, ProcessId = ?  WHERE BatchId = ?";
  public static final String UPDATE_ACH_RECORD_STATUS_FOR_BATCH = "UPDATE ACH_Record set RecordStatus = ?  WHERE BatchId = ?";
  public static final String UPDATE_ACH_RECORD_STATUS = "UPDATE ACH_Record set RecordStatus = ?  WHERE RecordId = ?";
  public static final String UPDATE_ACH_RECORD_DIRTY_FLAG = "UPDATE ACH_Record set DirtyFlag = ?  WHERE PayeeId = ? and BatchId in  ( SELECT BatchId from ACH_Batch WHERE BatchStatus = 'WILLPROCESSON')";
  public static final String UPDATE_ACH_ADDENDA_STATUS_FOR_BATCH = "UPDATE ACH_Addenda set AddendaStatus = ?  WHERE RecordId IN (SELECT RecordId FROM ACH_Record   WHERE BatchId = ?)";
  public static final String UPDATE_ACH_ADDENDA_STATUS_FOR_RECORD = "UPDATE ACH_Addenda set AddendaStatus = ?  WHERE RecordId = ?";
  public static final String UPDATE_ACH_ADDENDA_STATUS = "UPDATE ACH_Addenda set AddendaStatus = ?  WHERE AddendaId = ?";
  public static final String DELETE_ACH_ADDENDA = "DELETE FROM ACH_Addenda  WHERE AddendaId = ?";
  public static final String UPDATE_ACH_BATCH_STATUS_WITH_ODFIID = "UPDATE ACH_Batch set BatchStatus = ?  WHERE ODFIACHId = ?";
  public static final String UPDATE_ACH_RECORD_STATUS_FOR_BATCH_WITH_ODFIID = "UPDATE ACH_Record set RecordStatus = ?  WHERE BatchId IN (SELECT BatchId FROM ACH_Batch WHERE ODFIACHId = ?)";
  public static final String UPDATE_ACH_ADDENDA_STATUS_FOR_BATCH_WITH_ODFIID = "UPDATE ACH_Addenda set AddendaStatus = ?  WHERE RecordId IN (SELECT RecordId FROM ACH_Record   WHERE BatchId IN (SELECT BatchId FROM ACH_Batch WHERE ODFIACHId = ?) )";
  public static final String DELETE_ACH_BATCH_INFO = "DELETE FROM ACH_Batch WHERE BatchId = ?";
  public static final String DELETE_ACH_RECORD_INFO_BY_BATCH_ID = "DELETE FROM ACH_Record WHERE BatchId = ?";
  public static final String DELETE_ACH_RECORD_INFO_BY_REC_ID = "DELETE FROM ACH_Record WHERE RecordId = ?";
  public static final String ADD_ACH_RECORD = "INSERT INTO ACH_Record (RecordId, BatchId, RDFIACHId, PayeeId, AddendaCount, Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum, ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum, TerminalCity, TerminalState, TraceNum, OrigTraceNum, EffectiveDate, SettlementDate, SubmittedBy, SubmitDate, RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum, CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl, RecordContent, PayAcct, PayeeName, BankAcctType, LogId, RecordCategory, PairedId, DirtyFlag, OffsetAccountID,TaxFormId,Memo)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_ACH_RECORD_WITHOUT_FREE_FORMED_PAYEE_INFO = "INSERT INTO ACH_Record (RecordId, BatchId, RDFIACHId, PayeeId, AddendaCount, Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum, ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum, TerminalCity, TerminalState, TraceNum, OrigTraceNum, EffectiveDate, SettlementDate, SubmittedBy, SubmitDate, RecordStatus, SrvClassCode, RecvCompId, CardTransCode, ItemTypeInd, ProcessControl, RecordContent, LogId, RecordCategory, PairedId, DirtyFlag, OffsetAccountID,TaxFormId,Memo)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_ACH_RECORD = "UPDATE ACH_Record set PayeeId =?, RDFIACHId =?, AddendaCount =?, Amount =?, CheckDigit =?, CheckSerialNum =?, RecordDiscData =?, DocRefNum =?, ItemResearchNum =?, PmtType =?, RecordType =?, TransCode =?, RecordSeqNum =?, TerminalCity =?, TerminalState =?, TraceNum =?, OrigTraceNum =?, EffectiveDate =?, SettlementDate =?, SubmittedBy =?, SubmitDate =?, SrvClassCode =?, RecvCompId =?, BankAcctId =?, CardNum =?, CardExpireDate=?, CardTransCode=?, ItemTypeInd=?, ProcessControl=?, RecordContent=?, PayAcct=?, PayeeName=?, DirtyFlag=?, OffsetAccountID=?, BankAcctType = ? WHERE RecordId = ?";
  public static final String UPDATE_ACH_RECORD_FOR_PAYEEINFO_CHANGE = "UPDATE ACH_Record set RDFIACHId =?, BankAcctId =?, PayAcct=? WHERE RecordId = ?";
  public static final String ADD_ACH_ADDENDA_INFO = "INSERT INTO ACH_Addenda (AddendaId, RecordId, AddendaSeqNum, AddendaType,RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum,NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId,CardAuthCode) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_ACH_ADDENDA_INFO = "UPDATE ACH_Addenda set AddendaSeqNum=?, AddendaType = ?,RecordType =?, FrgnPmtAmt =?, FrgnRcvrAcctNum =?, FrgnRcvingDFIId =?, FrgnTraceNum =?,NetworkIdCode =?, PmtInfo =?, RefInfo_1 =?, RefInfo_2 =?, TerminalCity =?, TerminalIdCode =?, TerminalLoc =?, TerminalState =?, TraceNum =?, TransDate =?, TransDesc =?, TransSerialNum =?, TransCode =?, SubmittedBy =?, SubmitDate =?, AddendaContent=? WHERE AddendaId = ? ";
  public static final String DEL_ACH_ADDENDA_INFO = "DELETE FROM ACH_Addenda WHERE AddendaId = ?";
  public static final String DEL_ACH_ADDENDA_INFO_BY_RECORD_ID = "DELETE FROM ACH_Addenda WHERE RecordId = ?";
  public static final String GET_ACH_BATCH_STATUS_BY_ID = "SELECT BatchStatus  FROM ACH_Batch  WHERE BatchId = ?";
  public static final String GET_ACH_BATCH_TYPE_BY_ID = "SELECT BatchType  FROM ACH_Batch  WHERE BatchId = ?";
  public static final String GET_UNPROCESSED_ACH_BATCH_ID_BY_RECURRING_ID = "SELECT BatchId  FROM ACH_Batch  WHERE ( BatchStatus = 'WILLPROCESSON' OR BatchStatus = 'APPROVAL_PENDING' OR BatchStatus = 'APPROVAL_REJECTED' ) AND BatchId in ( SELECT SrvrTID FROM BPW_RecSrvrTIDToSrvrTID WHERE RecSrvrTID=? AND IndexType=?)";
  public static final String SELECT_ALL_ACH_BATCH_INFO = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate,a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode,a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash,a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName,d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef,a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d ";
  public static final String GET_ACH_BATCH_INFO_BY_ID = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate,a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode,a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash,a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName,d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef,a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId AND BatchId = ? AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY'";
  public static final String GET_ACH_BATCH_INFO_BY_ID_WITH_ALL_STATUS = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate,a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode,a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash,a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName,d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef,a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId AND BatchId = ? ";
  public static final String GET_ACH_BATCH_HIST_BY_IDS_ASC = "SELECT a.BatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId, a.OffsetAccountID,  a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND DtProcessed > ? and BatchId > ? ";
  public static final String GET_ACH_BATCH_HIST_BY_IDS_DESC = "SELECT a.BatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId, a.OffsetAccountID,  a.HeaderCompName, a.LastModifier  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND DtProcessed < ? and BatchId < ? ";
  public static final String ORDER_BY_DTPROCESSED_ASC_BATCHID_ASC = " ORDER BY DtProcessed ASC, BatchId ASC";
  public static final String ORDER_BY_DTPROCESSED_DESC_BATCHID_DESC = " ORDER BY DtProcessed DESC, BatchId DESC";
  public static final String ORDER_BY_STARTDATE_ASC_RECBATCHID_ASC = " ORDER BY StartDate ASC, RecBatchId ASC";
  public static final String ORDER_BY_STARTDATE_DESC_RECBATCHID_DESC = " ORDER BY StartDate DESC, RecBatchId DESC";
  public static final String GET_DANGLING_ACH_BATCH_IDS = "SELECT BatchId  FROM ACH_Batch  WHERE BatchStatus = 'ACHTEMPORARY' AND SubmitDate < ?";
  public static final String GET_ACH_BATCH_SIZE_BY_ID = "SELECT RecordCount FROM ACH_Batch WHERE BatchId = ?";
  public static final String GET_DIRTY_ACH_BATCH_BY_ID = "SELECT batch.BatchId FROM ACH_Batch batch, ACH_Record record  WHERE batch.BatchId = ? AND batch.BatchId = record.BatchId AND record.DirtyFlag = 1";
  public static final String GET_ACTIVE_ACH_BATCH_BY_PAYEEID = "SELECT a.BatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId, a.OffsetAccountID,  a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d, ACH_Record e WHERE a.CompId = b.CompId AND a.BatchId = e.BatchId AND e.PayeeId = ?  AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND a.BatchStatus != 'CANCELEDON' AND e.RecordStatus != 'CANCELEDON' AND a.BatchStatus != 'ACHTEMPORARY' AND a.BatchStatus != 'POSTEDON' AND a.BatchStatus != 'LIMIT_CHECK_FAILED' AND a.BatchStatus != 'LIMIT_REVERT_FAILED'";
  public static final String GET_ACH_RECORD_WITH_BATCHID = "SELECT RecordId, BatchId, RDFIACHId,AddendaCount,  Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum,  ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum,  TerminalCity, TerminalState, TraceNum, OrigTraceNum, TransDate,  EffectiveDate, SettlementDate, SubmittedBy, SubmitDate,  RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum,  CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl,  RecordContent,LogId, BankAcctType, PayAcct, PayeeName, PayeeId,  RecordCategory, PairedId, OffsetAccountID  FROM ACH_Record  WHERE BatchId = ? ORDER BY RecordId";
  public static final String GET_ACH_RECORD_WITH_BATCHID_START_END = "SELECT RecordId, BatchId, RDFIACHId,AddendaCount,  Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum,  ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum,  TerminalCity, TerminalState, TraceNum, OrigTraceNum, TransDate,  EffectiveDate, SettlementDate, SubmittedBy, SubmitDate,  RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum,  CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl,  RecordContent,LogId, BankAcctType, PayAcct, PayeeName, PayeeId,  RecordCategory, PairedId, OffsetAccountID,TaxFormId,Memo  FROM ACH_Record  WHERE BatchId = ? AND  RecordId >= ? AND RecordId <=?  ORDER BY RecordId";
  public static final String GET_ACH_RECORD_WITH_BATCHID_START = "SELECT RecordId, BatchId, RDFIACHId,AddendaCount,  Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum,  ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum,  TerminalCity, TerminalState, TraceNum, OrigTraceNum, TransDate,  EffectiveDate, SettlementDate, SubmittedBy, SubmitDate,  RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum,  CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl,  RecordContent,LogId, BankAcctType, PayAcct, PayeeName, PayeeId,  RecordCategory, PairedId, DirtyFlag, OffsetAccountID,TaxFormId,Memo   FROM ACH_Record  WHERE BatchId = ? AND  RecordId > ? AND RecordStatus != 'CANCELEDON'";
  public static final String CLAUSE_GET_ACH_RECORD_BY_DIRTY_FLAG = " AND DirtyFlag = ?";
  public static final String CLAUSE_GET_ACH_RECORD_ORDER_BY_RECORDID = " ORDER BY RecordId";
  public static final String GET_ACH_RECORD_FOR_PAYEE = "SELECT a.RecordId, a.BatchId, a.RDFIACHId,a.AddendaCount,  a.Amount, a.CheckDigit, a.CheckSerialNum, a.RecordDiscData, a.DocRefNum,  a.ItemResearchNum, a.PmtType, a.RecordType, a.TransCode, a.RecordSeqNum,  a.TerminalCity, a.TerminalState, a.TraceNum, a.OrigTraceNum, a.TransDate,  a.EffectiveDate, a.SettlementDate, a.SubmittedBy, a.SubmitDate,  a.RecordStatus, a.SrvClassCode, a.RecvCompId, a.BankAcctId, a.CardNum,  a.CardExpireDate, a.CardTransCode, a.ItemTypeInd, a.ProcessControl,  a.RecordContent,a.LogId, a.BankAcctType, a.PayAcct, a.PayeeName, a.PayeeId,  a.RecordCategory, a.PairedId, a.OffsetAccountID,  a.TaxFormId, a.Memo  FROM ACH_Record a, ACH_Batch b WHERE a.PayeeId = ? AND a.BatchId = b.BatchId AND b.BatchStatus = ? AND a.RecordStatus != 'CANCELEDON' ORDER BY a.BatchId, a.RecordId";
  public static final String GET_ACH_ADDENDA_WITH_RECORDID = "SELECT AddendaId, RecordId, AddendaSeqNum, AddendaType, RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum, NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId, CardAuthCode  FROM ACH_Addenda  WHERE RecordId = ? AND AddendaStatus != 'CANCELEDON' ORDER BY AddendaId";
  public static final String ADD_REC_ACH_BATCH_INFO = "INSERT INTO ACH_RecBatch (RecBatchId, CompId, CompData, CompACHId, ODFIACHId, BatchType, BatchCategory, BatchBalanceType, EffectiveDate, SettlementDate, CompEntryDesc, DescpDate, BatchNum, SrvClassCode, StdClassCode, CountryCode, OriginCurrCode, DestCurrCode, TotalDebit, TotalCredit, MsgAuthCode, RecordCount, EntryHash, SubmitDate, SubmittedBy, BatchStatus, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode, LogId,Frequency, StartDate, EndDate, PmtsCount, Memo, OffsetAccountID, HeaderCompName, LastModifier, NonOffTotalCredit, NonOffTotalDebit, NonOffRecordCount )VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?)";
  public static final String UPDATE_REC_ACH_BATCH_HEADER_GEN_INFO = "UPDATE ACH_RecBatch set CompData =?, BatchBalanceType = ?, EffectiveDate=?, SettlementDate=?, CompEntryDesc=?, DescpDate=?, CountryCode=?, OriginCurrCode=?, DestCurrCode=?, SubmitDate=?, FrgnExInd=?, FrgnExRefInd=?, FrgnExRef=?, OrigStatusCode=?, Frequency=?, StartDate=?, EndDate=?, PmtsCount=?, Memo=?, SrvClassCode=?, OffsetAccountID=?, HeaderCompName=?, LastModifier =? WHERE RecBatchId = ? AND BatchStatus IN ('WILLPROCESSON','APPROVAL_REJECTED','APPROVAL_PENDING')";
  public static final String UPDATE_REC_ACH_BATCH_INFO = "UPDATE ACH_RecBatch set TotalDebit = ?, TotalCredit = ?, MsgAuthCode = ?,  RecordCount = ?, EntryHash = ? , NonOffTotalCredit = ?, NonOffTotalDebit = ?, NonOffRecordCount = ?  WHERE RecBatchId = ?";
  public static final String UPDATE_REC_ACH_BATCH_STATUS = "UPDATE ACH_RecBatch set BatchStatus = ?  WHERE RecBatchId = ?";
  public static final String UPDATE_REC_ACH_BATCH_STATUS_WITH_ODFIID = "UPDATE ACH_RecBatch set BatchStatus = ?  WHERE ODFIACHId = ?";
  public static final String SELECT_ALL_REC_ACH_BATCH_INFO = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d ";
  public static final String GET_REC_ACH_BATCH_INFO_BY_ID = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId AND RecBatchId = ? AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY'";
  public static final String GET_REC_ACH_BATCH_INFO_BY_ID_WITH_ALL_STATUS = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId AND RecBatchId = ? ";
  public static final String GET_REC_ACH_BATCH_HIST_BY_IDS_ASC = "SELECT a.RecBatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND StartDate > ? and RecBatchId > ? ";
  public static final String GET_REC_ACH_BATCH_HIST_BY_IDS_DESC = "SELECT a.RecBatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND StartDate < ? and RecBatchId < ? ";
  public static final String GET_ACTIVE_ACH_REC_BATCH_BY_PAYEEID = "SELECT a.RecBatchId, a.CompId, a.CompData, a.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d, ACH_RecRecord e  WHERE a.CompId = b.CompId AND a.RecBatchId = e.BatchId  AND e.PayeeId = ?  AND a.ODFIACHId = c.ODFIACHId AND c.FIId = d.FIId AND BatchStatus != 'CANCELEDON' AND e.RecordStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND a.BatchStatus != 'POSTEDON' AND a.BatchStatus != 'LIMIT_CHECK_FAILED' AND a.BatchStatus != 'LIMIT_REVERT_FAILED'";
  public static final String GET_DANGLING_REC_ACH_BATCH_IDS = "SELECT RecBatchId  FROM ACH_RecBatch  WHERE BatchStatus = 'ACHTEMPORARY' AND SubmitDate < ?";
  public static final String DELETE_REC_ACH_BATCH_INFO = "DELETE FROM ACH_RecBatch WHERE RecBatchId = ?";
  public static final String GET_REC_ACH_BATCH_STATUS_BY_ID = "SELECT BatchStatus  FROM ACH_RecBatch  WHERE RecBatchId = ?";
  public static final String GET_REC_ACH_BATCH_SIZE_BY_ID = "SELECT RecordCount FROM ACH_RecBatch WHERE RecBatchId = ?";
  public static final String GET_DIRTY_REC_ACH_BATCH_BY_ID = "SELECT batch.RecBatchId  FROM ACH_RecBatch batch, ACH_RecRecord record  WHERE batch.RecBatchId = ? AND batch.RecBatchId = record.BatchId AND record.DirtyFlag = 1";
  public static final String ADD_ACH_REC_RECORD = "INSERT INTO ACH_RecRecord (RecRecordId, BatchId, RDFIACHId, PayeeId,AddendaCount, Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum, ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum, TerminalCity, TerminalState, TraceNum, OrigTraceNum, SettlementDate, SubmittedBy, SubmitDate, RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum, CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl, RecordContent, PayAcct, PayeeName, BankAcctType, Frequency, StartDate, EndDate, PmtsCount, LogId, RecordCategory, PairedId, DirtyFlag,OffsetAccountID,TaxFormId,Memo)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_REC_ACH_RECORD = "UPDATE ACH_RecRecord set PayeeId =?, RDFIACHId =?, AddendaCount =?, Amount =?, CheckDigit =?, CheckSerialNum =?, RecordDiscData =?, DocRefNum =?, ItemResearchNum =?, PmtType =?, RecordType =?, TransCode =?, RecordSeqNum =?, TerminalCity =?, TerminalState =?, TraceNum =?, OrigTraceNum =?, EffectiveDate =?, SettlementDate =?, SubmittedBy =?, SubmitDate =?, SrvClassCode =?, RecvCompId =?, BankAcctId =?, CardNum =?, CardExpireDate=?, CardTransCode=?, ItemTypeInd=?, ProcessControl=?, RecordContent=?, PayAcct=?, PayeeName=?, Frequency=?, StartDate=?, EndDate=?, PmtsCount=?, DirtyFlag=?, OffsetAccountID=?, BankAcctType = ? WHERE RecRecordId = ? ";
  public static final String UPDATE_REC_ACH_RECORD_FOR_PAYEEINFO_CHANGE = "UPDATE ACH_RecRecord set RDFIACHId =?, BankAcctId =?, PayAcct=? WHERE RecRecordId = ? ";
  public static final String GET_ACH_REC_RECORD_BASIC_SQL = "SELECT RecRecordId,BatchId,PayeeId,RDFIACHId,AddendaCount,Amount,CheckDigit,CheckSerialNum,RecordDiscData,DocRefNum,ItemResearchNum,PmtType,RecordType,RecordCategory,PairedId,RecordContent,TransCode,RecvCompId,CardNum,CardExpireDate,CardTransCode,PayAcct,PayeeName,BankAcctId,BankAcctType,ItemTypeInd,ProcessControl,RecordSeqNum,TerminalCity,TerminalState,TraceNum,OrigTraceNum,TransDate,EffectiveDate,SettlementDate,SubmittedBy,SubmitDate,RecordStatus,SrvClassCode,Frequency,StartDate,EndDate,PmtsCount,LogId,LastModified,DirtyFlag,OffsetAccountID,TaxFormId,Memo  From ACH_RecRecord ";
  public static final String GET_ACH_RECRECORD_ALL_COLUMNS_BY_BATCH_ID = "SELECT RecRecordId,BatchId,PayeeId,RDFIACHId,AddendaCount,Amount,CheckDigit,CheckSerialNum,RecordDiscData,DocRefNum,ItemResearchNum,PmtType,RecordType,RecordCategory,PairedId,RecordContent,TransCode,RecvCompId,CardNum,CardExpireDate,CardTransCode,PayAcct,PayeeName,BankAcctId,BankAcctType,ItemTypeInd,ProcessControl,RecordSeqNum,TerminalCity,TerminalState,TraceNum,OrigTraceNum,TransDate,EffectiveDate,SettlementDate,SubmittedBy,SubmitDate,RecordStatus,SrvClassCode,Frequency,StartDate,EndDate,PmtsCount,LogId,LastModified,DirtyFlag,OffsetAccountID,TaxFormId,Memo  From ACH_RecRecord  Where BatchId = ?  And RecordStatus != 'CANCELEDON'  Order by RecRecordId ";
  public static final String ADD_REC_ACH_ADDENDA_INFO = "INSERT INTO ACH_RecAddenda (RecAddendaId, RecordId, AddendaSeqNum, AddendaType,RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum,NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId, CardAuthCode) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_REC_ACH_ADDENDA_INFO = "UPDATE ACH_RecAddenda set AddendaSeqNum=?, AddendaType = ?,RecordType =?, FrgnPmtAmt =?, FrgnRcvrAcctNum =?, FrgnRcvingDFIId =?, FrgnTraceNum =?,NetworkIdCode =?, PmtInfo =?, RefInfo_1 =?, RefInfo_2 =?, TerminalCity =?, TerminalIdCode =?, TerminalLoc =?, TerminalState =?, TraceNum =?, TransDate =?, TransDesc =?, TransSerialNum =?, TransCode =?, SubmittedBy =?, SubmitDate =?, AddendaContent=? WHERE RecAddendaId = ? ";
  public static final String GET_ACH_REC_RECORD_WITH_BATCHID_START = "SELECT RecRecordId, BatchId, RDFIACHId, AddendaCount,  Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum,  ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum,  TerminalCity, TerminalState, TraceNum, OrigTraceNum, TransDate,  SettlementDate, SubmittedBy, SubmitDate,  RecordStatus, SrvClassCode, RecvCompId, BankAcctId, CardNum,  CardExpireDate, CardTransCode, ItemTypeInd, ProcessControl,  RecordContent,LogId, BankAcctType, PayAcct, PayeeName, Frequency,  StartDate, EndDate, PmtsCount, PayeeId, RecordCategory, PairedId, DirtyFlag, OffsetAccountID,TaxFormId,Memo  FROM ACH_RecRecord  WHERE BatchId = ? AND  RecRecordId > ? AND RecordStatus != 'CANCELEDON'";
  public static final String CLAUSE_GET_ACH_REC_RECORD_BY_DIRTY_FLAG = " AND DirtyFlag = ?";
  public static final String CLAUSE_GET_ACH_REC_RECORD_ORDER_BY_RECRECORDID = " ORDER BY RecRecordId";
  public static final String GET_ACH_REC_RECORD_FOR_PAYEE = "SELECT a.RecRecordId, a.BatchId, a.RDFIACHId, a.AddendaCount,  a.Amount, a.CheckDigit, a.CheckSerialNum, a.RecordDiscData, a.DocRefNum,  a.ItemResearchNum, a.PmtType, a.RecordType, a.TransCode, a.RecordSeqNum,  a.TerminalCity, a.TerminalState, a.TraceNum, a.OrigTraceNum, a.TransDate,  a.SettlementDate, a.SubmittedBy, a.SubmitDate,  a.RecordStatus, a.SrvClassCode, a.RecvCompId, a.BankAcctId, a.CardNum,  a.CardExpireDate, a.CardTransCode, a.ItemTypeInd, a.ProcessControl,  a.RecordContent, a.LogId, a.BankAcctType, a.PayAcct, a.PayeeName, a.Frequency,  a.StartDate, a.EndDate, a.PmtsCount, a.PayeeId, a.RecordCategory, a.PairedId, a.OffsetAccountID,  a.TaxFormId, a.Memo  FROM ACH_RecRecord a, ACH_RecBatch b WHERE a.PayeeId = ? AND a.BatchId = b.RecBatchId AND b.BatchStatus = ? AND a.RecordStatus != 'CANCELEDON' ORDER BY a.BatchId, a.RecRecordId";
  public static final String GET_ACH_REC_ADDENDA_BY_REC_ID = "SELECT RecAddendaId, RecordId, AddendaSeqNum, AddendaType, RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum, NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId, CardAuthCode  FROM ACH_RecAddenda  WHERE RecordId = ? AND AddendaStatus != 'CANCELEDON' ORDER BY RecAddendaId";
  public static final String GET_ACH_REC_ADDENDA_BASIC_SQL = "SELECT RecAddendaId, RecordId, AddendaSeqNum, AddendaType, RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum, NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId, CardAuthCode  FROM ACH_RecAddenda ";
  public static final String GET_ACH_RECADDENDA_ALL_COLUMNS_BY_RECRECORD_ID = "SELECT RecAddendaId, RecordId, AddendaSeqNum, AddendaType, RecordType, FrgnPmtAmt, FrgnRcvrAcctNum, FrgnRcvingDFIId, FrgnTraceNum, NetworkIdCode, PmtInfo, RefInfo_1, RefInfo_2, TerminalCity, TerminalIdCode, TerminalLoc, TerminalState, TraceNum, TransDate, TransDesc, TransSerialNum, TransCode, SubmittedBy, SubmitDate, AddendaStatus, AddendaContent, LogId, CardAuthCode  FROM ACH_RecAddenda  WHERE RecordId = ?  AND AddendaStatus != 'CANCELEDON' Order by RecAddendaId ";
  public static final String DELETE_REC_ACH_RECORD_INFO_BY_BATCH_ID = "DELETE FROM ACH_RecRecord WHERE BatchId = ?";
  public static final String DELETE_REC_ACH_RECORD_INFO_BY_REC_ID = "DELETE FROM ACH_RecRecord WHERE RecRecordId = ?";
  public static final String ADD_ACH_FILE = "INSERT INTO ACH_File (FileId, CustomerId, RDFIACHId, ODFIACHId, ReferenceCODE, OrgCreateDate, BPWCreateDate, DueDate,SubmitDate, FileHeaderType, FileStatus, BatchCount,BlockCount,RecordCount, TotalDebit, TotalCredit, LogId, SubmittedBy, Memo,DtProcessed, UploadFileName ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_ACH_FLAT_FILE = "INSERT INTO ACH_FlatFile (FileId, ChunkId, CumChunkSize, FileContent, SubmitDate, FileStatus, FileSize, FileType, LogId) VALUES (?,?,?,?,?,?,?,?,?) ";
  public static final String UPDATE_ACH_FILE = "Update ACH_File set FileStatus = ?, BatchCount = ?, BlockCount = ?, RecordCount = ?, TotalDebit = ?,  TotalCredit = ?  WHERE FileId = ? ";
  public static final String UPDATE_FILE_STATUS_BY_ODFIACHID = "Update ACH_File set FileStatus = ?  WHERE ODFIACHId = ? ";
  public static final String DELETE_ACH_FILE = "Delete from ACH_File  WHERE FileId = ? ";
  public static final String DELETE_ACH_FLAT_FILE = "Delete from ACH_FlatFile  WHERE FileId = ?";
  public static final String GET_ACH_FILE_STATUS = "Select FileStatus from ACH_File  WHERE FileId = ? ";
  public static final String UPDATE_ACH_FILE_STATUS = "Update ACH_File set FileStatus = ?  WHERE FileId = ? ";
  public static final String UPDATE_ACH_FILE_STATUS_PROCESSID = "Update ACH_File set FileStatus = 'POSTEDON' , ProcessId = ? , ExportFileName = ?  WHERE FileId = ? ";
  public static final String GET_ACH_FLAT_FILE = "SELECT FileContent, SubmitDate, FileStatus, FileSize, FileType, ChunkId FROM ACH_FlatFile  WHERE FileId = ? ";
  public static final String GET_CHUNK_SIZE_BY_FILEID = "SELECT CumChunkSize  FROM ACH_FlatFile  WHERE FileId = ? ";
  public static final String GET_PREVIOUS_CHUNK_SIZE_BY_FILEID = "SELECT CumChunkSize  FROM ACH_FlatFile  WHERE FileId = ? AND CumChunkSize < ?  ORDER BY CumChunkSize DESC";
  public static final String GET_ACH_FLAT_FILE_BY_FILEID_CHUNKID = "SELECT FileContent, SubmitDate, FileStatus, FileSize, FileType, ChunkId FROM ACH_FlatFile  WHERE FileId = ? AND ChunkId = ?";
  public static final String GET_ACH_FILE_BY_HEADER = "SELECT FileId from ACH_File  WHERE BPWCreateDate = ? AND CustomerId = ? AND ODFIACHId = ? AND RDFIACHId = ?";
  public static final String GET_ACH_FILE_BY_FILEID = "SELECT FileId, CustomerId, ReferenceCODE, RDFIACHId, ODFIACHId,  OrgCreateDate,BPWCreateDate, DueDate, FileHeaderType,SubmitDate, FileStatus, BatchCount,BlockCount,RecordCount,TotalDebit, TotalCredit, LogId, SubmittedBy, Memo, DtProcessed, NumberOfCredits,  NumberOfDebits, ExportFileName, UploadFileName  FROM ACH_File  WHERE FileId = ? AND FileStatus != 'CANCELEDON'";
  public static final String GET_DANGLING_ACH_FILE_IDS = "SELECT FileId  FROM ACH_File  WHERE FileStatus = 'ACHTEMPORARY' AND SubmitDate < ?";
  public static final String GET_ACH_FILE_BY_ODFIACHID_DATE_TIME_MODIFIER = "SELECT count(FileId)  FROM ACH_File  WHERE ODFIACHId = ? AND OrgCreateDate = ? AND CustomerId = ?  AND FileStatus != 'CANCELEDON' AND FileStatus != 'ACHTEMPORARY'";
  public static final String SQL_GET_FILE_BY_ODFIACHID = " AND ODFIACHId = ? ";
  public static final String SQL_GET_FILE_BY_CUSTOMERID = " AND CustomerId = ? ";
  public static final String SQL_GET_FILE_BY_FILESTATUS = " AND FileStatus IN (";
  public static final String GET_ACH_FILE_HIST = "SELECT FileId, DueDate, DtProcessed, FileStatus  FROM ACH_File  WHERE FileStatus != 'CANCELEDON' AND FileStatus != 'ACHTEMPORARY' ";
  public static final String SQL_GET_FILE_BY_STARTDATE = " AND DtProcessed >= ?";
  public static final String SQL_GET_FILE_BY_ENDDATE = " AND DtProcessed <= ?";
  public static final String GET_REC_ACH_BATCH = "SELECT RecBatchId, FileId, CompId, CompData, ODFIACHId, EffectiveDate, SettlementDate, CompEntryDesc, DescpDate, StdClassCode, CountryCode, OriginCurrCode, DestCurrCode, TotalDebit, TotalCredit, MsgAuthCode, RecordCount, SubmitDate, BatchStatus, Frequency, StartDate, EndDate, PmtsCount, LogId, SubmittedBy, CompACHId, FrgnExInd, FrgnExRefInd, FrgnExRef,OrigStatusCode, SrvClassCode, BatchNum FROM ACH_RecBatch WHERE RecBatchId = ?";
  public static final String GET_ACH_COMP_NAME_BY_COMPID = "SELECT CompName FROM ACH_Company WHERE CompId = ?";
  public static final String GET_ODFI_RTN_NAME_BY_ID = "SELECT b.FIRTN, a.ODFIName FROM ACH_FIInfo a, BPW_FIInfo b WHERE a.FIId = b.FIId AND ODFIACHId = ?";
  public static final String GET_ACH_REC_RECORD_BY_BATCH = "SELECT RecRecordId, BatchId, PayeeId, RDFIACHId, AddendaCount, Amount, CheckDigit, CheckSerialNum, RecordDiscData, DocRefNum, ItemResearchNum, PmtType, RecordType, TransCode, RecordSeqNum, TerminalCity, TerminalState, TraceNum, OrigTraceNum, TransDate, EffectiveDate, SettlementDate, SubmitDate, RecordStatus, SrvClassCode, Frequency, StartDate, EndDate, PmtsCount, LogId, RecvCompId, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, PayAcct, PayeeName, ItemTypeInd, ProcessControl, RecordContent, OffsetAccountID FROM ACH_RecRecord WHERE BatchId = ? ORDER BY CAST(RecRecordId AS INTEGER) ASC";
  public static final String ADD_ACH_REC_BATCH_HEADER = "INSERT INTO ACH_RecBatch (RecBatchId, CompId, FileId, CompData, ODFIACHId, EffectiveDate, SettlementDate, CompEntryDesc, DescpDate, SrvClassCode, StdClassCode, CountryCode, OriginCurrCode, DestCurrCode, TotalDebit, TotalCredit, MsgAuthCode, RecordCount, SubmitDate, BatchStatus, FrgnExInd, FrgnExRefInd, FrgnExRef, OrigStatusCode, CompACHId, Frequency, StartDate, EndDate, PmtsCount, BatchNum, SubmittedBy) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_REC_BATCH_WITH_CONTROL = "UPDATE ACH_RecBatch SET SrvClassCode = ?, RecordCount = ?, EntryHash = ?, TotalDebit = ?, TotalCredit = ?, CompId = ?, MsgAuthCode = ?, ODFIACHId = ?, BatchNum = ? WHERE RecBatchId = ?";
  public static final String UPDATE_REC_ACH_ADDENDA_STATUS = "UPDATE ACH_RecAddenda set AddendaStatus = ?  WHERE RecAddendaId = ?";
  public static final String DELETE_REC_ACH_ADDENDA = "DELETE FROM ACH_RecAddenda  WHERE RecAddendaId = ?";
  public static final String UPDATE_REC_ACH_RECORD_STATUS = "UPDATE ACH_RecRecord set RecordStatus = ?  WHERE RecRecordId = ?";
  public static final String UPDATE_REC_ACH_RECORD_DIRTY_FLAG = "UPDATE ACH_RecRecord set DirtyFlag = ?  WHERE PayeeId = ? and BatchId in  ( SELECT RecBatchId from ACH_RecBatch WHERE BatchStatus = 'WILLPROCESSON')";
  public static final String ADD_ACHFI = "INSERT INTO ACH_FIInfo (ACHFIId, ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName, SubmitDate, ActivationDate, FIStatus, LogId, Memo, CashConDFI)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_ACHFI = "SELECT ACHFIId, ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName,  SubmitDate, ActivationDate, FIStatus, LogId, Memo, CashConDFI  FROM ACH_FIInfo WHERE ODFIACHId = ?";
  public static final String GET_ACHFI_BY_ACHFIID = "SELECT ACHFIId, ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName,  SubmitDate, ActivationDate, FIStatus, LogId, Memo, CashConDFI  FROM ACH_FIInfo WHERE ACHFIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_ACHFI_BY_ODFINAME_RTN_RDFINAME = "SELECT a.ODFIACHId, a.FIId, a.ODFIName, a.RDFIACHId, a.RDFIName,  a.SubmitDate, a.ActivationDate, a.FIStatus, a.LogId, a.CashConDFI  FROM ACH_FIInfo a, BPW_FIInfo b WHERE a.FIId = b.FIId AND  a.ODFIName = ? AND b.FIRTN = ? AND a.RDFIName = ? AND a.FIStatus != 'CLOSED'";
  public static final String GET_ACHFI_BY_RTN = "SELECT a.ACHFIId, a.ODFIACHId, a.FIId, a.ODFIName, a.RDFIACHId, a.RDFIName,  a.SubmitDate, a.ActivationDate, a.FIStatus, a.LogId, a.Memo, a.CashConDFI  FROM ACH_FIInfo a, BPW_FIInfo b WHERE  b.FIRTN = ? AND a.FIStatus != 'CLOSED' AND a.FIId = b.FIId";
  public static final String GET_ACHFI_BY_ODFIID = "SELECT ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName,  SubmitDate, ActivationDate, FIStatus, LogId, CashConDFI  FROM ACH_FIInfo WHERE FIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_ACHFI_BY_FIID = "SELECT ACHFIId, ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName,  SubmitDate, ActivationDate, FIStatus, LogId, Memo, CashConDFI  FROM ACH_FIInfo WHERE FIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_COMPID_BY_ODFIACHID = "SELECT CompId  FROM ACH_Company  WHERE ACHFIId =  (Select ACHFIId from ACH_FIInfo where ODFIACHId = ?  AND FIStatus != 'CLOSED')  AND CompStatus != 'CLOSED'";
  public static final String UPDATE_ACHFI = "UPDATE ACH_FIInfo SET ODFIACHId = ?, ODFIName = ?, RDFIACHId = ?, RDFIName = ?,  Memo = ?  WHERE ACHFIId = ? AND FIStatus != 'CLOSED' ";
  public static final String UPDATE_STATUS_ACH_FI = "UPDATE ACH_FIInfo SET FIStatus = ?  WHERE ODFIACHId = ? ";
  public static final String CLOSE_ACHFI = "UPDATE ACH_FIInfo SET FIStatus = 'CLOSED' WHERE ODFIACHId = ? AND FIStatus != 'CLOSED' ";
  public static final String GET_ACHFI_STATUS = "SELECT FIStatus FROM ACH_FIInfo WHERE ODFIACHId = ?";
  public static final String GET_ACH_FILE_CHUNK_BY_FILE_ID_AND_CHUNK_ID = "SELECT FileContent from ACH_FlatFile where FileId = ? and ChunkId = ?";
  public static final String GET_MIN_ACH_FILE_CHUNK_ID = "SELECT min( ChunkId ) from ACH_FlatFile where FileId = ?";
  public static final String GET_MAX_ACH_FILE_CHUNK_ID = "SELECT max( ChunkId ) from ACH_FlatFile where FileId = ?";
  public static final String GET_ACH_FILE_EXPORT_FILE_NAME = "SELECT ODFIACHId, OrgCreateDate from ACH_File where FileId = ?";
  public static final String UPDATE_ACH_FILE_CHUNK_STATUS = "UPDATE ACH_FlatFile set FileStatus = ? where FileId = ? and ChunkId = ?";
  public static final String ADD_TEMPHIST = "INSERT INTO BPW_TempHist (HistId, CursorId, RecordExtId, RecordType, DueDate, Amount, Submitdate) VALUES(?,?,?,?,?,?,?)";
  public static final String GET_TEMPHIST_ASC = "SELECT CursorId, RecordExtId, RecordType, DueDate, Amount from BPW_TempHist  WHERE HistId = ? and CursorId > ? ORDER BY CursorId ASC";
  public static final String GET_TEMPHIST_DESC = "SELECT CursorId, RecordExtId, RecordType, DueDate, Amount from BPW_TempHist  WHERE HistId = ? and CursorId < ? ORDER BY CursorId DESC";
  public static final String GET_TEMPHIST_COUNT = "SELECT Count(*) from BPW_TempHist WHERE HistId = ?";
  public static final String DELETE_TEMPHIST = "DELETE FROM BPW_TempHist WHERE HistId = ?";
  public static final String DELETE_OLD_TEMPHIST = "DELETE FROM BPW_TempHist WHERE Submitdate < ?";
  public static final String GET_HIST_IDS_FOR_DELETE = "SELECT HistId from BPW_TempHist WHERE Submitdate < ?";
  public static final String ADD_WIRETEMPHIST = "INSERT INTO BPW_WireTempHist (SessionId, CursorId, TransactionId, TransactionType, DateToPost, BeneficiaryName, AccountNum, Destination, Status, Amount, WireName, SubmitDate) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_TRANSFER_TEMPHIST = "INSERT INTO BPW_TransfrTmpHist (SessionId, CursorId, TransactionId, TransactionType, DateToPost, FromAcctId, ToAcctId, Destination, Frequency, Status, Amount,  TemplateName, SubmitDate, AmountCurrency, ToAmount, ToAmountCurrency, UserAssignedAmount, EstimatedAmount) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_TRANSFER_TEMPHIST_BATCH = "INSERT INTO BPW_TransfrTmpHist (SessionId, CursorId, TransactionId, TransactionType, DateToPost, Frequency, Status, Amount,  TemplateName, SubmitDate) VALUES(?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_OLD_WIRETEMPHIST = "DELETE FROM BPW_WireTempHist WHERE SubmitDate < ?";
  public static final String ADD_BILLPAYTMPHIST = "INSERT INTO BPW_BillPayTmpHist ( SessionId, CursorId, SubmitDate, TransactionId, TransactionType, DateToPost, PayeeName, AcctDebitID, Frequency, FreqIntVal, Status, Amount,TemplateName) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_BILLPAYTMPHIST_COUNT = "SELECT COUNT(*) FROM BPW_BillPayTmpHist WHERE SessionId = ?";
  public static final String GET_ACH_BATCH_HIST = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate,a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode,a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash,a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName,d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef,a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE a.BatchStatus != 'CANCELEDON' AND a.BatchStatus != 'ACHTEMPORARY' AND a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId  AND c.FIId = d.FIId ";
  public static final String SQL_GET_BATCH_BY_FIID = " AND c.FIId=? AND c.FIStatus != 'CLOSED'";
  public static final String SQL_GET_BATCH_BY_ODFIACHID = " AND c.ODFIACHId =? ";
  public static final String SQL_GET_BATCH_BY_CUSTOMERID = " AND b.CustomerId =? ";
  public static final String SQL_GET_BATCH_BY_COMPID = " AND a.CompId =?";
  public static final String SQL_GET_BATCH_BY_LOGID = " AND a.LogId =?";
  public static final String SQL_GET_BATCH_BY_SUBMITTERS = " AND a.SubmittedBy IN (";
  public static final String SQL_GET_BATCH_BY_IDS = " AND BatchId IN (";
  public static final String SQL_GET_BATCH_BY_PAYEEID = " AND BatchId in ( select BatchId from ACH_Record where PayeeId = ?  AND RecordStatus != 'CANCELEDON' )";
  public static final String SQL_GET_BATCH_BY_BATCHSTATUS = " AND BatchStatus IN (";
  public static final String SQL_GET_BATCH_BY_SECS = " AND StdClassCode IN (";
  public static final String SQL_GET_BATCH_BY_BATCHCATEGORY = " AND BatchCategory IN (";
  public static final String SQL_GET_BATCH_BY_START_EFFECTIVE_DT = " AND EffectiveDate >= ? ";
  public static final String SQL_GET_BATCH_BY_END_EFFECTIVE_DT = " AND EffectiveDate <= ? ";
  public static final String SQL_GET_RECBATCH_BY_IDS = " AND RecBatchId IN (";
  public static final String SQL_GET_BATACH_BY_COMPACHID = " a.CompACHId = ?";
  public static final String SQL_GET_RECBATCH_BY_PAYEEID = " AND RecBatchId in ( SELECT BatchId FROM ACH_RecRecord WHERE PayeeId = ?  AND RecordStatus != 'CANCELEDON' )";
  public static final String SQL_GET_RECBATCH_BY_STARTDATE = " AND StartDate >= ?";
  public static final String SQL_GET_RECBATCH_BY_END_OF_STARTDATE = " AND StartDate <= ?";
  public static final String SQL_GET_RECBATCH_BY_ENDDATE = " AND EndDate <= ?";
  public static final String SQL_GET_FUTURE_HISTORY_FOR_RECBATCH_BY_STARTDATE = " AND StartDate <= ?";
  public static final String SQL_GET_FUTURE_HISTORY_FOR_RECBATCH_BY_ENDDATE = " AND EndDate >= ?";
  public static final String GET_REC_ACH_BATCH_HIST = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit,  a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d  WHERE BatchStatus != 'CANCELEDON' AND BatchStatus != 'ACHTEMPORARY' AND a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId  AND c.FIId = d.FIId ";
  public static final String GET_WIRE_INFO_FOR_DUP_WIRES = "SELECT a.SrvrTID, a.BankFromID,a.BranchFromID,a.CustomerID,a.WirePayeeID,a.RecSrvrTID,a.FIID,a.Amount,a.AmtCurrency,a.DestCurrency,a.XferFee,a.AcctDebitID, a.AcctDebitType,a.AcctDebitKey,a.DateCreate,a.DateDue,a.DateToPost,a.DatePosted, a.WireType,a.WireCategory,a.WireGroup,a.WireDest, a.BatchId, a.ContractNumber, a.Status,a.LogID,a.ConfirmNum, a.ConfirmNum2, a.ConfirmMsg, a.PayInstruct, a.Memo,a.ExchangeRate,a.SubmittedBy,a.ExtId,a.WireSource,a.WireName,a.NickName, a.WireLimit, a.SettlementDate,a.WireScope,a.MathRule,a.OrigToBeneficiaryMemo, a.OrigToBeneficiaryInfo,a.BanktoBankInfo,a.ProcessedBy,a.TemplateId,a.AgentId, a.AgentName,a.Method,a.AmountType,a.CustomerRef,a.OriginatorCharges,a.ReceiverCharges, a.WireChargesDetails,a.OrgChargesAccountNum,a.BenefChargesAccountNum,a.HostId, a.UserId,a.AgentType,a.OrigAmount,a.OrigCurrency, a.WireCreditID, b.ByOrderOfName, b.ByOrderOfAddr1, b.ByOrderOfAddr2, b.ByOrderOfAddr3, b.ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b ";
  public static final String GET_WIRE_INFO = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate,SubmittedBy,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method,AmountType,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b  WHERE a.SrvrTID = b.SrvrTID AND a.SrvrTID = ?";
  public static final String GET_WIRE_INFO_BY_PAYEE = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate,SubmittedBy,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method,AmountType,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b  WHERE a.SrvrTID = b.SrvrTID AND WirePayeeID = ?";
  public static final String GET_WIRE_INFO_BY_BATCHID = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate,SubmittedBy,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method,AmountType,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b  WHERE a.SrvrTID = b.SrvrTID AND BatchId = ?";
  public static final String GET_WIRE_INFO_BY_EXTID = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate,SubmittedBy,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method,AmountType,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b  WHERE a.SrvrTID = b.SrvrTID AND ExtId = ?";
  public static final String GET_WIRETEMPLATE_BY_NAME_NICKNAME = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate,SubmittedBy,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method,AmountType,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b  WHERE a.SrvrTID = b.SrvrTID AND WireType = 'TEMPLATE'  AND WireName = ?  AND NickName = ?  AND CustomerID = ? ";
  public static final String GET_TEMPLATED_PAYEEID = "SELECT WirePayeeID  FROM BPW_WireInfo WHERE SrvrTID = ?  AND WirePayeeID = ? ";
  public static final String GET_WIRE_SRVRTID_BY_EXTID = "SELECT SrvrTID  FROM BPW_WireInfo WHERE ExtId = ?";
  public static final String GET_WIRE_SRVRTIDS_BY_PAYEE = "SELECT SrvrTID  FROM BPW_WireInfo WHERE WirePayeeID = ? AND Status IN ('WILLPROCESSON', 'CREATED', 'TEMPLATE', 'APPROVAL_PENDING', 'FUNDSAPPROVED', 'INFUNDSREVERT', 'INFUNDSAPPROVAL', 'NOFUNDS', 'BACKENDPENDING', 'RELEASEPENDING', 'FUNDSPENDING', 'INPROCESS', 'IMMED_INPROCESS') ";
  public static final String GET_WIRE_INFO_STATUS = "SELECT Status FROM BPW_WireInfo WHERE SrvrTID = ?";
  public static final String GET_RECWIRE_STATUS = "SELECT Status FROM BPW_RecWireInfo WHERE RecSrvrTID = ?";
  public static final String GET_SRVRTIDS_FOR_RECSRVRTID = "SELECT SrvrTID FROM BPW_WireInfo WHERE RecSrvrTID = ? AND Status IN ('CREATED','RELEASEPENDING','WILLPROCESSON','APPROVAL_REJECTED','APPROVAL_PENDING')";
  public static final String UPDATE_WIRE_INFO_STATUS = "UPDATE BPW_WireInfo SET Status=? WHERE SrvrTID=?";
  public static final String UPDATE_WIRE_INFO_STATUS_DTPOSTED = "UPDATE BPW_WireInfo SET Status = ?, DatePosted = ? WHERE SrvrTID=?";
  public static final String UPDATE_WIRE_INFO_STATUS_PROCESSEDBY = "UPDATE BPW_WireInfo SET Status = ?, ProcessedBy = ? WHERE SrvrTID=?";
  public static final String UPDATE_WIRE_INFO_STATUS_PROCESSEDBY_MEMO = "UPDATE BPW_WireInfo SET Status = ?, ProcessedBy = ?, Memo = ?  WHERE SrvrTID=?";
  public static final String ADD_WIRE_INFO = "INSERT INTO BPW_WireInfo ( SrvrTID,BatchId,ContractNumber,BankFromID, BranchFromID,CustomerID,WirePayeeID, RecSrvrTID,FIID,Amount,AcctDebitID,AcctDebitType,AcctDebitKey, DateCreate,DateDue,DateToPost,WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency, ExchangeRate, SubmittedBy, ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,ProcessedBy,TemplateId,AgentId, AgentName,Method, AmountType,CustomerRef,OriginatorCharges, ReceiverCharges,WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, HostId,UserId,AgentType, OrigAmount, OrigCurrency, WireCreditID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_WIRE_INFO2 = "INSERT INTO BPW_WireInfo2 ( SrvrTID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct) VALUES (?,?,?,?,?,?)";
  public static final String MOD_WIRE = "Update BPW_WireInfo Set Amount = ?,  AcctDebitID = ?, AcctDebitType = ?, AcctDebitKey = ?,  DateDue = ?, DateToPost = ?, PayInstruct = ?, Memo = ?,  LastModified = ?, WirePayeeID = ?, ExchangeRate = ?,  WireType = ?, WireCategory = ?,WireGroup = ?,WireDest = ?,  ContractNumber = ?,  WireSource = ?, WireName = ?, NickName = ?,WireLimit = ?,   SettlementDate = ?,WireScope = ?, MathRule = ?,OrigToBeneficiaryMemo = ?,   OrigToBeneficiaryInfo = ?, BanktoBankInfo = ?, ProcessedBy = ?,  AgentId = ?, AgentName = ?, Method = ?, AmountType=?, CustomerRef=?,  OriginatorCharges=?, ReceiverCharges=?, WireChargesDetails=?,  OrgChargesAccountNum=?, BenefChargesAccountNum=?, AgentType=?,  OrigAmount=?, OrigCurrency=?, WireCreditID=?, AmtCurrency=?, DestCurrency=?, BankFromID=?, BranchFromID=?, SubmittedBy = ? WHERE SrvrTID = ?";
  public static final String MOD_WIRE2 = "Update BPW_WireInfo2 Set ByOrderOfName=?,  ByOrderOfAddr1=?, ByOrderOfAddr2=?, ByOrderOfAddr3=?, ByOrderOfAcct=?, Version=Version+1  WHERE SrvrTID = ?";
  public static final String MOD_WIRE2_VERSION = "Update BPW_WireInfo2 Set Version=Version+1  WHERE SrvrTID = ?";
  public static final String UPDATE_WIRE_WITH_BATCH_VALUES = "Update BPW_WireInfo Set DateDue = ?, SettlementDate = ?,  AmtCurrency = ?,DestCurrency = ?, ExchangeRate = ?,  ContractNumber = ?, MathRule = ?, AgentId = ?, AgentName = ?,  AgentType=?, OrigCurrency=?  WHERE BatchId = ? AND Status = 'CREATED' ";
  public static final String MOD_WIRE_TEMPLATE = "Update BPW_WireInfo Set ContractNumber = ?,BankFromID = ?, BranchFromID = ?,CustomerID = ?,WirePayeeID = ?, FIID = ?,Amount = ?,AcctDebitID = ?,AcctDebitType = ?,AcctDebitKey = ?, DateDue = ?,DateToPost = ?,WireType = ?,WireCategory = ?,WireGroup = ?,WireDest = ?,LogID = ?,PayInstruct = ?,Memo = ?,AmtCurrency = ?,DestCurrency = ?,ExchangeRate = ?, WireSource = ?,WireName = ?,NickName = ?,WireLimit = ?, SettlementDate = ?,WireScope = ?,MathRule = ?,OrigToBeneficiaryMemo = ?, OrigToBeneficiaryInfo = ?,BanktoBankInfo = ?,ProcessedBy = ?,  AgentId = ?, AgentName = ?, Method = ?, AmountType=?, CustomerRef=?,  OriginatorCharges=?, ReceiverCharges=?, WireChargesDetails=?,  OrgChargesAccountNum=?, BenefChargesAccountNum=?, AgentType=?,  OrigAmount=?, OrigCurrency=?, WireCreditID=?, LastModified = ?, SubmittedBy = ? WHERE SrvrTID = ?";
  public static final String DELETE_WIRE_TEMPLATE = "Delete From BPW_WireInfo  WHERE SrvrTID = ? AND WireType = 'TEMPLATE'";
  public static final String DELETE_WIRE_TEMPLATE2 = "Delete From BPW_WireInfo2  WHERE SrvrTID = ?";
  public static final String DELETE_WIRE_RECTEMPLATE = "Delete From BPW_RecWireInfo  WHERE RecSrvrTID = ? AND WireType = 'RECTEMPLATE' ";
  public static final String DELETE_WIRE_RECTEMPLATE2 = "Delete From BPW_RecWireInfo2  WHERE RecSrvrTID = ?";
  public static final String GET_WIRE_COUNT_OF_BATCH = "SELECT Count(*)  FROM BPW_WireInfo WHERE BatchId = ?";
  public static final String UPDATE_WIRE_STATUS_BY_BATCHID = "UPDATE BPW_WireInfo SET Status=? WHERE BatchId = ?  AND Status IN ('CREATED', 'RELEASEPENDING', 'WILLPROCESSON') ";
  public static final String UPDATE_WIRE_PAYEE_ID = "UPDATE BPW_WireInfo SET WirePayeeID=? WHERE WirePayeeID = ? ";
  public static final String SELECT_WIREID_BY_BATCHID_AND_STATUS = "SELECT SrvrTID FROM BPW_WireInfo WHERE BatchId = ? AND Status NOT IN (?, ?, ?, ?, ?, ?, ?) ";
  public static final String SELECT_WIREID_BY_BATCHID_AND_STATUS_2 = "SELECT SrvrTID FROM BPW_WireInfo WHERE BatchId = ? AND Status IN (?, ?, ?, ?, ?, ?) ";
  public static final String SQL_PURGE_WIRES = "DELETE FROM BPW_WireInfo WHERE DateToPost <= ? AND CustomerID = ? ";
  public static final String SQL_PURGE_WIRES_ALLCUSTOMERS = "DELETE FROM BPW_WireInfo WHERE DateToPost <= ? ";
  public static final String SQL_PURGE_WIRE_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionID IN (SELECT SrvrTID FROM BPW_WireInfo     WHERE DateToPost <= ? AND CustomerID = ? ) ";
  public static final String SQL_PURGE_WIRE_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionID IN (SELECT SrvrTID FROM BPW_WireInfo     WHERE DateToPost <= ? ) ";
  public static final String ADD_RECWIRE = "INSERT INTO BPW_RecWireInfo ( RecSrvrTID,BatchId,ContractNumber,BankFromID,BranchFromID,CustomerID,WirePayeeID,FIID,Amount,AcctDebitID,AcctDebitType,AcctDebitKey,WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency, StartAmount, EndAmount,DateCreate, Frequency,StartDate,EndDate,InstanceCount,ExchangeRate,SubmittedBy, ExtId,WireSource,WireName,NickName,WireLimit,SettlementDate, WireScope,MathRule,OrigToBeneficiaryMemo,OrigToBeneficiaryInfo, BanktoBankInfo,ProcessedBy,AgentId,AgentName,Method,TemplateId, CustomerRef,OriginatorCharges,ReceiverCharges,WireChargesDetails, OrgChargesAccountNum,BenefChargesAccountNum,UserId,AgentType,OrigAmount, OrigCurrency,WireCreditID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_RECWIRE2 = "INSERT INTO BPW_RecWireInfo2 ( RecSrvrTID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct) VALUES (?,?,?,?,?,?)";
  public static final String GET_RECWIRE = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber, ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND a.RecSrvrTID = ?";
  public static final String GET_RECWIRE_BY_PAYEE = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber, ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND WirePayeeID = ?";
  public static final String GET_RECWIRE_BY_BATCHID = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND BatchId = ?";
  public static final String GET_RECWIRE_BY_EXTID = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND ExtId = ?";
  public static final String GET_RECWIRETEMPLATE_BY_NAME_NICKNAME = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber,ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID , ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND WireType = 'RECTEMPLATE'  AND WireName = ?  AND NickName = ?  AND CustomerID = ? ";
  public static final String GET_RECWIRE_SRVRTIDS_BY_PAYEE = "SELECT RecSrvrTID  FROM BPW_RecWireInfo WHERE WirePayeeID = ? AND Status IN ('WILLPROCESSON', 'RECTEMPLATE') ";
  public static final String MOD_RECWIRE = "Update BPW_RecWireInfo Set Amount = ?, AcctDebitID = ?,  AcctDebitType = ?, AcctDebitKey = ?, PayInstruct = ?, Memo = ?,  StartAmount = ?, EndAmount = ?,Frequency = ?, StartDate = ?,  EndDate = ?, InstanceCount = ?, LastModified = ?, WirePayeeID = ?,  ExchangeRate = ?, WireType = ?, WireCategory = ?,WireGroup = ?, WireDest = ?, ContractNumber = ?,  WireSource = ?, WireName = ?, NickName = ?,WireLimit = ?,  SettlementDate = ?,WireScope = ?, MathRule = ?, OrigToBeneficiaryMemo = ?,OrigToBeneficiaryInfo = ?,BanktoBankInfo = ?, AgentId = ?, AgentName = ?, Method = ?, ProcessedBy = ?, CustomerRef=?, OriginatorCharges=?, ReceiverCharges=?, WireChargesDetails=?,  OrgChargesAccountNum=?, BenefChargesAccountNum=?, AgentType=?,  OrigAmount=?, OrigCurrency=?, WireCreditID=?, AmtCurrency=?, DestCurrency=?, BankFromID=?, BranchFromID=?, SubmittedBy = ? WHERE RecSrvrTID = ?";
  public static final String MOD_RECWIRE2 = "Update BPW_RecWireInfo2 Set ByOrderOfName=?,  ByOrderOfAddr1=?, ByOrderOfAddr2=?, ByOrderOfAddr3=?, ByOrderOfAcct=?, Version=Version+1  WHERE RecSrvrTID = ?";
  public static final String MOD_RECWIRE2_VERSION = "Update BPW_RecWireInfo2 Set Version=Version+1  WHERE RecSrvrTID = ?";
  public static final String MOD_RECWIRE_TEMPLATE = "Update BPW_RecWireInfo Set ContractNumber=?,BankFromID=?, BranchFromID=?,CustomerID=?,WirePayeeID=?,FIID=?,Amount=?,AcctDebitID=?,AcctDebitType=?,AcctDebitKey=?,WireType=?,WireCategory=?,WireGroup=?, WireDest=?,LogID=?,PayInstruct=?,Memo=?,AmtCurrency=?,DestCurrency=?, StartAmount=?, EndAmount=?,Frequency=?,StartDate=?,EndDate=?, InstanceCount=?,ExchangeRate=?,WireSource=?,WireName=?, NickName=?,WireLimit=?,SettlementDate=?,WireScope=?,MathRule=?, OrigToBeneficiaryMemo=?,OrigToBeneficiaryInfo=?,BanktoBankInfo=?, AgentId=?,AgentName=?,Method=?, ProcessedBy=?, CustomerRef=?, OriginatorCharges=?, ReceiverCharges=?, WireChargesDetails=?, OrgChargesAccountNum=?, BenefChargesAccountNum=?, AgentType=?, OrigAmount=?, OrigCurrency=?, WireCreditID=?, LastModified = ?, SubmittedBy = ? WHERE RecSrvrTID = ?";
  public static final String UPDATE_RECWIRE_STATUS = "UPDATE BPW_RecWireInfo SET Status=? WHERE RecSrvrTID=?";
  public static final String GET_WIRE_AUDIT = "SELECT InstructionID,Content,LogType,LogDate,InstructionType, LogLevel, LogID  FROM BPW_InstructionActivityLog WHERE InstructionID = ?  ORDER BY LogDate ASC";
  public static final String GET_WIRE_AUDIT_HIST = "SELECT TRAN_ID,USER_ID,AGENT_ID,AGENT_TYPE,DESCRIPTION,LOG_DATE, TRAN_TYPE,BUSINESS_ID,AMOUNT,CURRENCY_CODE,SRVR_TID,STATE,TO_ACCT_ID, TO_ACCT_RTGNUM,FROM_ACCT_ID,FROM_ACCT_RTGNUM,MODULE  FROM AUDIT_LOG WHERE TRAN_ID = ?  ORDER BY LOG_DATE ASC";
  public static final String GET_WIRE_RELEASE_COUNT_FIX = "SELECT COUNT(*) from BPW_WireInfo  WHERE Status = 'CREATED'  AND CustomerID = ?  AND FIID = ?  AND DateToPost >= ?  AND DateToPost <= ? ";
  public static final String GET_WIRE_HIST_FIXED = "SELECT SrvrTID, DateToPost, RecSrvrTID FROM BPW_WireInfo a  WHERE DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_WIRE_TEMP_HIST_FIXED = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate, SubmittedBy, ExtId, WireSource, WireName, NickName, WireLimit, SettlementDate,WireScope, MathRule, OrigToBeneficiaryMemo, OrigToBeneficiaryInfo, BanktoBankInfo, ProcessedBy,TemplateId, AgentId, AgentName, Method, AmountType, CustomerRef, OriginatorCharges, ReceiverCharges, WireChargesDetails, OrgChargesAccountNum, BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID, b.Version  FROM BPW_WireInfo a, BPW_WireInfo2 b WHERE a.SrvrTID = b.SrvrTID AND DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_WIRE_FOR_BATCH_HIST_FIXED = "SELECT a.SrvrTID,BankFromID,BranchFromID,CustomerID,WirePayeeID,RecSrvrTID,FIID,Amount,AmtCurrency,DestCurrency,XferFee,AcctDebitID, AcctDebitType,AcctDebitKey,DateCreate,DateDue,DateToPost,DatePosted, WireType,WireCategory,WireGroup,WireDest, BatchId, ContractNumber, Status,LogID,ConfirmNum, ConfirmNum2, ConfirmMsg, PayInstruct, Memo,ExchangeRate, SubmittedBy, ExtId, WireSource, WireName, NickName, WireLimit, SettlementDate,WireScope, MathRule, OrigToBeneficiaryMemo, OrigToBeneficiaryInfo, BanktoBankInfo, ProcessedBy,TemplateId, AgentId, AgentName, Method, AmountType, CustomerRef, OriginatorCharges, ReceiverCharges, WireChargesDetails, OrgChargesAccountNum, BenefChargesAccountNum,HostId, UserId,AgentType,OrigAmount,OrigCurrency, WireCreditID, ByOrderOfName, ByOrderOfAddr1, ByOrderOfAddr2, ByOrderOfAddr3, ByOrderOfAcct, w.Version  FROM BPW_WireInfo a, BPW_WireInfo2 w WHERE a.SrvrTID = w.SrvrTID  AND DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_DISTINCT_BATCHID_FIXED = "SELECT DISTINCT BatchId  FROM BPW_WireInfo a  WHERE DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_DISTINCT_WIRE_STATUS_OF_BATCH = "SELECT DISTINCT PrcStatus  FROM BPW_WireInfo WHERE BatchId = ? ";
  public static final String GET_REC_WIRE_HIST_FIXED = "SELECT RecSrvrTID, StartDate FROM BPW_RecWireInfo a  WHERE StartDate >= ? AND StartDate <= ?";
  public static final String GET_REC_WIRE_TEMP_HIST_FIXED = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber, ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b  WHERE a.RecSrvrTID = b.RecSrvrTID AND StartDate >= ? AND StartDate <= ?";
  public static final String GET_REC_WIRE_FOR_WIRE = "SELECT a.RecSrvrTID, a.Frequency, a.StartDate, a.EndDate,  a.InstanceCount, a.FIID  FROM BPW_RecWireInfo a  WHERE a.StartDate <= ? AND a.EndDate >= ?";
  public static final String GET_REC_WIRE_TEMP_FOR_WIRE = "SELECT a.RecSrvrTID, BankFromID, BranchFromID, CustomerID,WirePayeeID, FIID, Amount, AcctDebitID,AcctDebitType,AcctDebitKey, WireType,WireCategory,WireGroup,WireDest,Status,LogID,PayInstruct,Memo,AmtCurrency,DestCurrency,XferFee, StartAmount,EndAmount,DateCreate,Frequency,StartDate,EndDate,InstanceCount,SubmittedBy, ExchangeRate, BatchId, ContractNumber, ExtId,WireSource,WireName,NickName,WireLimit, SettlementDate,WireScope,MathRule,OrigToBeneficiaryMemo, OrigToBeneficiaryInfo,BanktoBankInfo,AgentId,AgentName,Method, ProcessedBy, TemplateId,CustomerRef,OriginatorCharges,ReceiverCharges, WireChargesDetails,OrgChargesAccountNum,BenefChargesAccountNum, UserId,AgentType,OrigAmount,OrigCurrency,WireCreditID, b.Version  FROM BPW_RecWireInfo a, BPW_RecWireInfo2 b WHERE a.RecSrvrTID = b.RecSrvrTID AND a.EndDate > ? AND a.StartDate < ? ";
  public static final String SQL_PURGE_RECWIRES = "DELETE FROM BPW_RecWireInfo WHERE EndDate <= ? AND CustomerID = ? ";
  public static final String SQL_PURGE_RECWIRES_ALLCUSTOMERS = "DELETE FROM BPW_RecWireInfo WHERE EndDate <= ? ";
  public static final String SQL_PURGE_RECWIRE_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT RecSrvrTID FROM BPW_RecWireInfo     WHERE EndDate <= ? ) ";
  public static final String SQL_PURGE_RECWIRE_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT RecSrvrTID FROM BPW_RecWireInfo     WHERE EndDate <= ? AND CustomerID = ? ) ";
  public static final String ADD_WIRE_BATCH = "INSERT INTO BPW_WireBatch ( BatchId, FIId, CustomerId,  UserId, BatchName, BatchType, BatchCategory, TotalAmount, WireCount,  SubmittedBy, SubmitDate, BatchStatus, Memo, LogId, BatchDest,  ExtId,DateDue, DateToPost,PayInstruct,RecWireBatchId, MathRule,  ContractNumber, ExchangeRate, AmtCurrency, DestCurrency,  SettlementDate, TotalCreditAmount, TotalDebitAmount, AgentId,  AgentName, AgentType,OrigAmount,OrigCurrency) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String MOD_WIRE_BATCH = "UPDATE BPW_WireBatch set BatchName=?,  BatchType=?, BatchCategory=?, TotalAmount=?,  WireCount=?, Memo=?, LogId=?, BatchDest=?, ExtId=?,  DateDue=?, DateToPost=?,PayInstruct=?,RecWireBatchId=?, MathRule=?,  ContractNumber=?, ExchangeRate=?, AmtCurrency=?, DestCurrency=?,  SettlementDate=?, TotalCreditAmount=?, TotalDebitAmount=?, AgentId=?,  AgentName=?, AgentType=?,OrigAmount=?,OrigCurrency=?, SubmittedBy = ?, Version=Version+1  WHERE BatchId=?  AND FIId=?  AND CustomerId=? ";
  public static final String UPDATE_WIRE_BATCH_CTRL_AMTS = "UPDATE BPW_WireBatch set TotalAmount = ?,  TotalDebitAmount = ?, TotalCreditAmount = ?, WireCount = ?, Version=Version+1  WHERE BatchId = ? ";
  public static final String UPDATE_WIRE_BATCH_STATUS = "UPDATE BPW_WireBatch set BatchStatus = ?, Version=Version+1  WHERE BatchId = ? ";
  public static final String GET_WIRE_BATCH_STATUS = "SELECT BatchStatus  FROM BPW_WireBatch  WHERE BatchId = ? ";
  public static final String GET_WIRE_BATCH_FIX = "SELECT BatchId, FIId, CustomerId,  UserId, BatchName, BatchType, BatchCategory, TotalAmount, WireCount,  SubmittedBy, SubmitDate, BatchStatus, ExtInfo, Memo, LogId, BatchDest,  ExtId,DateDue, DateToPost,PayInstruct,RecWireBatchId,ConfirmNum,  ConfirmMsg,ConfirmNum2,DatePosted, MathRule,  ContractNumber, ExchangeRate, AmtCurrency, DestCurrency,  SettlementDate, TotalCreditAmount, TotalDebitAmount, AgentId,  AgentName, AgentType,OrigAmount,OrigCurrency, Version  FROM BPW_WireBatch ";
  public static final String GET_WIRE_BATCH_STATUS_WIRECOUNT = "SELECT BatchStatus, WireCount FROM BPW_WireBatch WHERE BatchId = ?";
  public static final String ADD_TRANSFER_BATCH = "INSERT INTO BPW_TransferBatch ( BatchID, FIID, CustomerID,  BatchName, BatchType, TotalAmount, AmountCurrency, TransferCount,  SubmittedBy, SubmitDate, BatchStatus, Memo, LogID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String MOD_TRANSFER_BATCH = "UPDATE BPW_TransferBatch set BatchName=?,  BatchType=?, TotalAmount=?,  TransferCount=?, Memo=?, AmountCurrency=?, BatchStatus = ?  WHERE BatchID=?  AND FIID=?  AND CustomerID=? ";
  public static final String GET_TRANSFER_BATCH_IDS_BY_CUSTOMERID_STATUS = "SELECT BatchID FROM BPW_TransferBatch WHERE CustomerID = ? AND BatchStatus = ?";
  public static final String GET_ALL_TRANSFER_BATCH_IDS_BY_STATUS = "SELECT BatchID FROM BPW_TransferBatch WHERE BatchStatus = ?";
  public static final String DELETE_TRANSFER_BATCH_BY_BATCHID = "DELETE * FROM BPW_TransferBatch WHERE BatchID = ? ";
  public static final String ADD_PAYMENT_BATCH = "INSERT INTO BPW_PaymentBatch ( BatchID, FIID, CustomerID,  BatchName, BatchType, TotalAmount, AmountCurrency, PaymentCount,  SubmittedBy, SubmitDate, BatchStatus, LogID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String MOD_PAYMENT_BATCH = "UPDATE BPW_PaymentBatch SET BatchName=?, TotalAmount=?, PaymentCount=?, LogID=?, AmountCurrency=?, SubmittedBy=? WHERE BatchID=? AND FIID=? AND CustomerID=?";
  public static final String GET_PAYMENT_BATCH = "SELECT FIID, CustomerID, BatchName, BatchType,  TotalAmount, AmountCurrency, PaymentCount,  SubmittedBy, SubmitDate, BatchStatus, LogID  FROM BPW_PaymentBatch WHERE BatchID = ? ";
  public static final String UPDATE_PAYMENT_BATCH_STATUS = "UPDATE BPW_PaymentBatch SET BatchStatus=? WHERE BatchID = ?";
  public static final String GET_ALL_BATCH_TEMPLATE = "SELECT BatchID FROM BPW_PaymentBatch where BatchName = ?  AND SubmittedBy = ? AND  BatchStatus != 'CANCELEDON'";
  public static final String GET_CANCELLED_PAYMENT_BATCH = "SELECT a.BatchID FROM BPW_PaymentBatch a WHERE a.BatchStatus IN (?) AND (SELECT COUNT(*) from BPW_PmtInstruction b WHERE b.PaymentType = ? AND b.BatchID = a.BatchID) = 0";
  public static final String GET_CANCELLED_PAYMENT_BATCH_BY_CUSTOMER = "SELECT a.BatchID FROM BPW_PaymentBatch a WHERE a.BatchStatus IN (?) AND a.CustomerID = ? AND (SELECT COUNT(*) from BPW_PmtInstruction b WHERE b.PaymentType = ? AND b.BatchID = a.BatchID) = 0";
  public static final String DELETE_PAYMENT_BATCH = "DELETE FROM BPW_PaymentBatch WHERE BatchID = ?";
  public static final String GET_TRANSFER_BATCH = "SELECT BatchID, FIID, CustomerID,  BatchName, BatchType, TotalAmount, AmountCurrency, TransferCount,  SubmittedBy, SubmitDate, BatchStatus, Memo, LogID  FROM BPW_TransferBatch ";
  public static final String GET_WIRE_PAYEE_BY_ID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE PayeeId = ? ";
  public static final String GET_WIRE_PAYEE_BY_PAYEEEXTID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE PayeeExtID = ? ";
  public static final String GET_WIRE_PAYEE_BY_EXTID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE ExtID = ? ";
  public static final String GET_WIRE_PAYEE_BY_BANKID_ACCTID_CUSTID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee  WHERE BeneficiaryBankId = ?  AND BankAcctId = ?  AND CustomerID = ? ";
  public static final String GET_WIRE_PAYEE_BY_BANK_ACCTID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee a,  BPW_WireBank b  WHERE a.BeneficiaryBankId = b.BankId  AND a.BankAcctId = ? ";
  public static final String GET_WIRE_PAYEE_BY_BANKID = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee  WHERE BeneficiaryBankId = ? ";
  public static final String GET_WIRE_PAYEE_BY_BANK_RTN = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee a,  BPW_WireBank b  WHERE a.BeneficiaryBankId = b.BankId ";
  public static final String GET_WIRE_PAYEE_BY_PAYACCT_AACTID_RTN = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE PayAcct = ? AND BankAcctId = ? AND BeneficiaryBankId = ? ";
  public static final String GET_WIRE_PAYEE_BY_NAME_AACTID_RTN_CUST = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE BeneficiaryName = ? AND BankAcctId = ? AND BeneficiaryBankId = ? AND CustomerID = ? ";
  public static final String ADD_WIRE_PAYEE = "INSERT INTO BPW_WirePayee  ( PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, PayeeExtID, ExtID, RouteID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, ActivationDate, LogId, SubmittedBy, PayeeDest ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";
  public static final String DELETE_WIRE_PAYEE = "Update BPW_WirePayee Set Status = ? WHERE PayeeId = ? ";
  public static final String UPDATE_WIREPAYEE_STATUS_ACTV_DATE = "Update BPW_WirePayee set Status = ?,  ActivationDate = ? Where PayeeId = ? ";
  public static final String UPDATE_WIRE_PAYEE = "UPDATE BPW_WirePayee set PayeeType = ?, PayeeGroup = ? , BeneficiaryName = ? , NickName = ? , ContactName = ?, CustomerID = ?, ExtID = ?, RouteID = ?, BeneficiaryBankId = ?, BankAcctId = ?, BankAcctType = ?, BranchId = ?, AcctKey = ?, PayeeAddr1 = ? , PayeeAddr2 = ? , PayeeAddr3 = ? , PayeeCity = ? , PayeeState = ? , PayeeZipcode = ? , PayeeCountry = ? , PayeePhone = ? , Memo = ? , LastModDate = ? ,LogId = ?, SubmittedBy = ?, PayeeDest = ? WHERE  PayeeId = ? ";
  public static final String GET_WIRE_PAYEE = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee ";
  public static final String GET_WIRE_PAYEE_BY_PAYEE_DEST = "SELECT  PayeeId, PayeeType, PayeeGroup, BeneficiaryName, NickName, ContactName, CustomerID, RouteID, PayeeExtID, ExtID, BeneficiaryBankId, BankAcctId, BankAcctType, BranchId, AcctKey, PayeeAddr1, PayeeAddr2, PayeeAddr3, PayeeCity, PayeeState, PayeeZipcode, PayeeCountry, PayeePhone, Status, Memo, SubmitDate, LastModDate, ActivationDate, LogId, SubmittedBy, PayeeDest  FROM BPW_WirePayee WHERE PayeeDest = ? ";
  public static final String ADD_WIRE_PAYEE_BANK_LINK = "INSERT INTO BPW_PayeeIntrmdBnks  ( LinkId, BankId, PayeeId,  Rank)  VALUES (?,?,?,?) ";
  public static final String DEL_INTERMDT_BANK_BY_PAYEE_BANK = "DELETE FROM BPW_PayeeIntrmdBnks WHERE BankId = ?  AND PayeeId = ?";
  public static final String DEL_INTERMDT_BANKS_BY_PAYEE = "DELETE FROM BPW_PayeeIntrmdBnks WHERE PayeeId = ? ";
  public static final String GET_WIRE_PAYEE_BANK_LINK = "SELECT LinkId, BankId, PayeeId FROM BPW_PayeeIntrmdBnks  WHERE PayeeId = ?  AND BankId = ? ";
  public static final String GET_PAYEEIDS_BY_BENFCRY_BANKID = "SELECT PayeeId From BPW_WirePayee WHERE BeneficiaryBankId = ?";
  public static final String GET_PAYEEIDS_BY_INTRMDT_BANKID = "SELECT a.PayeeId From BPW_PayeeIntrmdBnks a ";
  public static final String ADD_WIRE_BANK = "INSERT INTO BPW_WireBank  ( BankId, BankName,   AddressLine1, AddressLine2, AddressLine3, City, State, PostalCode,   Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN, OtherRTN, ExtBankId )  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";
  public static final String MOD_WIRE_BANK = "UPDATE BPW_WireBank  set BankName = ?, AddressLine1 = ?,  AddressLine2 = ?, AddressLine3 = ?, City = ?, State = ?, PostalCode = ?,  Country = ?, BankPhone = ?, FedRTN = ?, SwiftRTN = ?, ChipsRTN = ?,  OtherRTN = ?, ExtBankId = ?  WHERE BankId = ?";
  public static final String DEL_WIRE_BANK = "DELETE FROM BPW_WireBank WHERE BankId = ?";
  public static final String GET_WIRE_BANK_BY_RTNS = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE FedRTN = ?  AND SwiftRTN = ?  AND ChipsRTN = ?  AND OtherRTN = ? ";
  public static final String GET_WIRE_BANK_FIX = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank ";
  public static final String GET_WIRE_BANK_BY_RTN = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE FedRTN = ?  OR SwiftRTN = ?  OR ChipsRTN = ?  OR OtherRTN = ? ";
  public static final String GET_WIRE_BANK_BY_ID = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE BankId = ? ";
  public static final String GET_WIRE_BANK_BY_EXTBANKID = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE ExtBankId = ? ";
  public static final String GET_WIRE_BANK_BY_NAME_RTN = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE BankName = ?  AND FedRTN = ?  AND SwiftRTN = ?  AND ChipsRTN = ?  AND OtherRTN = ? ";
  public static final String GET_WIRE_BANK_BY_NAME_ADDRESS = "SELECT  BankId, BankName, AddressLine1, AddressLine2, AddressLine3, City,  State, PostalCode, Country, BankPhone, FedRTN, SwiftRTN, ChipsRTN,  OtherRTN, ExtBankId  FROM BPW_WireBank  WHERE BankName = ?  AND AddressLine1 = ?  AND City = ?  AND Country = ? ";
  public static final String GET_WIRE_BANK_BY_PAYEE = "SELECT  a.BankId, a.BankName, a.AddressLine1, a.AddressLine2, a.AddressLine3, a.City,  a.State, a.PostalCode, a.Country, a.BankPhone, a.FedRTN, a.SwiftRTN, a.ChipsRTN,   a.OtherRTN, a.ExtBankId  FROM BPW_WireBank a, BPW_PayeeIntrmdBnks b  WHERE a.BankId = b.BankId  AND b.PayeeId = ?  Order By b.Rank";
  public static final String ADD_TRANSFER = "INSERT INTO BPW_Transfer (SrvrTId, FIId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, ProcessDate, AccountFromId, OriginatingUserId, FundsProcessing, ProcessType, Action, FundsRetry, TypeDetail, BankFromRtnType, LastChangeDate, BatchId, ToAmount, ToAmountCurrency, UserAssignedAmount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_RECTRANSFER = "INSERT INTO BPW_RecTransfer (RecSrvrTId, FIId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, AccountFromId, OriginatingUserId, FundsProcessing, ProcessType, TypeDetail, BankFromRtnType, LastChangeDate, ToAmount, ToAmountCurrency, UserAssignedAmount)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String MOD_TRANSFER = "UPDATE BPW_Transfer set TransferDest = ?, TransferGroup = ?, TransferCategory = ?, BankFromRtn = ?, AccountFromNum = ?, AccountFromType = ?, ExternalAcctId = ?, Amount = ?, AmountCurrency = ?, OrigAmount = ?, OrigCurrency = ?, DateDue = ?, DateToPost = ?, DatePosted = ?, LastProcessId = ?, Memo = ?, TemplateScope = ?, TemplateNickName = ?, SourceTemplateId = ?, SubmittedBy = ?, ProcessLeadNumber = ?, ProcessDate = ? , AccountFromId = ?, FundsProcessing = ?, ProcessType = ?, Action = ?, FundsRetry = ?, ConfirmMsg = ?, ConfirmNum = ?, TypeDetail = ?, LastChangeDate = ?, BankFromRtnType = ?, ToAmount = ?, ToAmountCurrency = ?, UserAssignedAmount = ? WHERE SrvrTId = ? ";
  public static final String MOD_RECTRANSFER = "UPDATE BPW_RecTransfer set TransferDest = ?, TransferGroup = ?, TransferCategory = ?, BankFromRtn = ?, AccountFromNum = ?, AccountFromType = ?, ExternalAcctId = ?, Amount = ?, AmountCurrency = ?, OrigAmount = ?, OrigCurrency = ?, StartDate = ?, EndDate = ?, Frequency = ?, InstanceCount = ?, LastProcessId = ?, Memo = ?, TemplateScope = ?, TemplateNickName = ?, SourceTemplateId = ?, SubmittedBy = ?, ProcessLeadNumber = ?, AccountFromId = ?, FundsProcessing = ?, ProcessType = ?, ConfirmMsg = ?, ConfirmNum = ?, TypeDetail = ?, LastChangeDate = ?, BankFromRtnType = ?, ToAmount = ?, ToAmountCurrency = ?, UserAssignedAmount = ? WHERE RecSrvrTId = ? ";
  public static final String CAN_TRANSFER = "UPDATE BPW_Transfer SET Status=?, SubmittedBy = ?, LastChangeDate = ?, Action = ?, FundsRetry = ? WHERE SrvrTId=?";
  public static final String CAN_RECTRANSFER = "UPDATE BPW_RecTransfer SET Status=?, SubmittedBy = ?, LastChangeDate = ? WHERE RecSrvrTId=?";
  public static final String GET_TRANSFER_FIXED = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer ";
  public static final String GET_RECTRANSFER_FIXED = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer ";
  public static final String GET_TRANSFER_COUNT = "SELECT COUNT(*) AS TRANSFERCOUNT FROM BPW_Transfer ";
  public static final String GET_RECTRANSFER_COUNT = "SELECT COUNT(*) AS TRANSFERCOUNT FROM BPW_RecTransfer ";
  public static final String GET_TRANSFER = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE SrvrTId = ? ";
  public static final String GET_RECTRANSFER = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer  WHERE RecSrvrTId = ? ";
  public static final String GET_TRANSFER_BY_TRACKING_ID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE LogId = ? ";
  public static final String GET_TRANSFERS_BEFORE_DATE_BY_CUSTOMER = "SELECT SrvrTId, AccountFromId, ExternalAcctId FROM BPW_Transfer WHERE DateToPost <= ?  AND CustomerId = ? AND SourceRecSrvrTId is NULL AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_TRANSFERS_BEFORE_DATE = "SELECT SrvrTId, AccountFromId, ExternalAcctId FROM BPW_Transfer WHERE DateToPost <= ?  AND SourceRecSrvrTId is NULL and Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_RECTRANSFER_INSTANCES_BEFORE_DATE = "SELECT SrvrTId from BPW_Transfer WHERE DateToPost <= ? AND SourceRecSrvrTId is not NULL AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_RECTRANSFER_INSTANCES_BEFORE_DATE_BY_CUSTOMER = "SELECT SrvrTId from BPW_Transfer WHERE DateToPost <= ? AND CustomerId = ? AND SourceRecSrvrTId is not NULL AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_RECTRANSFERS_BEFORE_DATE_BY_CUSTOMER = "SELECT RecSrvrTId, AccountFromId, ExternalAcctId FROM BPW_RecTransfer WHERE StartDate <= ? AND CustomerId = ? AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND (SELECT DISTINCT SourceRecSrvrTId FROM BPW_Transfer WHERE SourceRecSrvrTId = BPW_RecTransfer.RecSrvrTId) IS NULL";
  public static final String GET_RECTRANSFERS_BEFORE_DATE = "SELECT RecSrvrTId, AccountFromId, ExternalAcctId FROM BPW_RecTransfer WHERE StartDate <= ? AND Status IN ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND (SELECT DISTINCT SourceRecSrvrTId FROM BPW_Transfer WHERE SourceRecSrvrTId = BPW_RecTransfer.RecSrvrTId) IS NULL";
  public static final String GET_RECTRANSFER_BY_TRACKING_ID = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer  WHERE LogId = ? ";
  public static final String GET_TRANSFER_SRVRTIDS_FOR_RECSRVRTID = "SELECT SrvrTId FROM BPW_Transfer WHERE SourceRecSrvrTId = ?";
  public static final String GET_TRANSFER_STATUS = "SELECT Status FROM BPW_Transfer WHERE SrvrTId = ?";
  public static final String GET_RECTRANSFER_STATUS = "SELECT Status FROM BPW_RecTransfer WHERE RecSrvrTId = ?";
  public static final String GET_TRANSFER_TRANSFERDEST = "SELECT TransferDest FROM BPW_Transfer WHERE SrvrTId = ?";
  public static final String GET_RECTRANSFER_TRANSFERDEST = "SELECT TransferDest FROM BPW_RecTransfer WHERE RecSrvrTId = ?";
  public static final String GET_TRANSFER_BY_CUSTID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE CustomerId = ?  AND Status NOT IN (?, ?) ";
  public static final String GET_RECTRANSFER_BY_CUSTID = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer  WHERE CustomerId = ?  AND Status NOT IN (?, ?) ";
  public static final String GET_TRANSFER_BY_EXTACCTID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE ExternalAcctId = ?  AND Status NOT IN (?, ?) ";
  public static final String GET_TRANSFER_BY_BATCHID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE BatchId = ? ";
  public static final String GET_RECTRANSFER_BY_EXTACCTID = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer  WHERE ExternalAcctId = ?  AND Status NOT IN (?, ?) ";
  public static final String GET_BPW_TRANSFER = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer ";
  public static final String GET_BPW_TRANSFERS_BY_SOURCERECSRVRTID = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.SourceRecSrvrTId = ?";
  public static final String GET_BPW_TRANSFERS_BY_SOURCERECSRVRTID_EXCLUDE_CANCELLED = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.SourceRecSrvrTId = ? and transfer.Status != 'CANCELEDON'";
  public static final String GET_TRANSFER_FOR_ETFFUNDTRN = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ? and transfer.FundsProcessing=" + String.valueOf(2) + " and transfer.Status='" + "WILLPROCESSON" + "' and transfer.ProcessDate = ?";
  public static final String GET_RESUBMIT_TRANSFER_FOR_NONFILEBASED_ETFFUNDTRN = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ? and transfer.FundsProcessing=" + String.valueOf(2) + " and transfer.Status='" + "WILLPROCESSON" + "' and transfer.LastProcessId = ?";
  public static final String GET_TRANSFER_FOR_FAILEDETFTRN = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ?  and ( (transfer.Status='FAILEDON') or  (transfer.Status='FUNDSREVERTFAILED') or  (transfer.Status='NOFUNDS') ) and transfer.Action='Failed'";
  public static final String GET_RESUBMIT_TRANSFER_FOR_NONFILEBASED_FAILEDETFTRN = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ?  and ( (transfer.Status='FAILEDON') or  (transfer.Status='FUNDSREVERTFAILED') or  (transfer.Status='NOFUNDS') ) and transfer.Action='Failed' and transfer.LastProcessId = ? ";
  public static final String GET_TRANSFER_FOR_REVERTETFFUNDTRN = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ? and transfer.FundsProcessing=" + String.valueOf(2) + " and ( (transfer.Status='" + "BACKENDFAILED" + "') or " + " (transfer.Status='" + "FAILEDON" + "') or " + " (transfer.Status='" + "FUNDSPROCESSED" + "' and (" + " (transfer.Action='" + "Modify" + "') or " + " (transfer.Action='" + "Cancel" + "') or " + " (transfer.Action='" + "Failed" + "') ) ) )";
  public static final String GET_RESUBMIT_TRANSFER_FOR_NONFILEBASED_REVERTETFFUNDTRN = GET_TRANSFER_FOR_REVERTETFFUNDTRN + " and transfer.LastProcessId = ? ";
  public static final String GET_RESUBMIT_TRANSFER_FOR_FILEBASED_SCHEDULE = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  where transfer.FIId = ? and transfer.FundsProcessing=" + String.valueOf(2) + " and transfer.LastProcessId = ? and transfer.ProcessNumber < ?";
  public static final String GET_UNPROCESSED_TRANSFER_BY_ACCOUNTID_DATE_TO_POST = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  WHERE  transfer.ExternalAcctId = ? AND transfer.Status = 'WILLPROCESSON' AND transfer.DateToPost <= ? ";
  public static final String GET_PROCESSED_TRANSFER_BY_ACCOUNTID_PROCESSID = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  WHERE transfer.Status = 'POSTEDON' AND transfer.ExternalAcctId = ? AND transfer.LastProcessId = ?";
  public static final String GET_PRENOTE_TRANSFER_BY_EXT_ACCT_ID_AND_LAST_PROCESSID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE ExternalAcctId = ? AND LastProcessId = ? AND TransferCategory = 'PRENOTE_ENTRY' AND Status = 'POSTEDON' ORDER BY DateCreate DESC";
  public static final String DELETE_TRANSFER_RECTEMPLATE = "Delete From BPW_RecTransfer  WHERE RecSrvrTId = ? AND TransferType = 'RECTEMPLATE' ";
  public static final String DELETE_RECTRANSFER = "Delete From BPW_RecTransfer WHERE RecSrvrTId = ?";
  public static final String UPDATE_RECTRANSFER_STATUS = "UPDATE BPW_RecTransfer SET Status=? WHERE RecSrvrTId=?";
  public static final String UPDATE_RECTRANSFER_STATUS_ACTION = "UPDATE BPW_RecTransfer SET Status=? , Action=? WHERE RecSrvrTId=?";
  public static final String DELETE_TRANSFER_TEMPLATE = "Delete From BPW_Transfer  WHERE SrvrTId = ? AND TransferType = 'TEMPLATE'";
  public static final String DELETE_TRANSFER = "Delete From BPW_Transfer WHERE SrvrTId = ?";
  public static final String UPDATE_TRANSFER_STATUS = "UPDATE BPW_Transfer SET Status=? WHERE SrvrTId=?";
  public static final String UPDATE_TRANSFER_PROCESSNUMBER_AND_PROCESSID = "UPDATE BPW_Transfer SET ProcessNumber = ?, LastProcessId = ? WHERE SrvrTId=?";
  public static final String UPDATE_TRANSFER_STATUS_ACTION = "UPDATE BPW_Transfer SET Status=? , Action=? WHERE SrvrTId=?";
  public static final String UPDATE_TRANSFER_STATUS_DATEPOSTED_CONFNUM_CONFMSG = "UPDATE BPW_Transfer SET Status=?, DatePosted=?, ConfirmNum = ?, ConfirmMsg = ?,  LastProcessId = ? WHERE SrvrTId=?";
  public static final String UPDATE_TRANSFER_STATUS_AMOUNT_AND_CONF = "UPDATE BPW_Transfer SET Status=?, DatePosted=?, ConfirmNum=?, ConfirmMsg=?, LastProcessId=?, Amount=?, ToAmount=? WHERE SrvrTId=?";
  public static final String DELETE_EXTERNAL_ACCOUNT = "DELETE FROM ETF_ExternalAcct WHERE AcctId=?";
  public static final String GET_TRANSFER_HIST_FIXED = "SELECT SrvrTId, DateToPost, SourceRecSrvrTId FROM BPW_Transfer a  WHERE DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_TRANSFER_TEMP_HIST_FIXED = "SELECT * FROM BPW_Transfer a  WHERE DateToPost >= ? AND DateToPost <= ?";
  public static final String GET_RECTRANSFER_FOR_TRANSFER = "SELECT a.RecSrvrTId, a.Frequency, a.StartDate, a.EndDate,  a.InstanceCount, a.CustomerId  FROM BPW_RecTransfer a  WHERE a.StartDate <= ? AND a.EndDate >= ?";
  public static final String GET_RECTRANSFER_TEMP_FOR_TRANSFER = "SELECT a.RecSrvrTId, a.CustomerId, a.TransferType, a.TransferDest, a.TransferGroup, a.TransferCategory, a.BankFromRtn, a.AccountFromNum, a.AccountFromType, a.ExternalAcctId, a.Amount, a.AmountCurrency, a.OrigAmount, a.OrigCurrency, a.DateCreate, a.StartDate, a.EndDate, a.Frequency, a.InstanceCount, a.LastProcessId, a.Memo, a.TemplateScope, a.TemplateNickName, a.SourceTemplateId, a.Status, a.SubmittedBy, a.LogId, a.ProcessLeadNumber, a.FIId, a.AccountFromId, a.OriginatingUserId, a.ConfirmMsg, a.ConfirmNum, a.FundsProcessing, a.ProcessType, a.TypeDetail, a.LastChangeDate, a.BankFromRtnType, a.ToAmount, a.ToAmountCurrency, a.UserAssignedAmount  FROM BPW_RecTransfer a  WHERE a.EndDate > ? AND a.StartDate < ? ";
  public static final String GET_RECTRANSFER_HIST_FIXED = "SELECT RecSrvrTId, StartDate FROM BPW_RecTransfer a  WHERE StartDate >= ? AND StartDate <= ?";
  public static final String GET_RECTRANSFERS_BY_FIID_AND_CUSTOMERID = "SELECT RecSrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, StartDate, EndDate, Frequency, InstanceCount, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, BankFromRtnType, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_RecTransfer  where FIId = ? and CustomerId = ?";
  public static final String GET_RECTRANSFER_TEMP_HIST_FIXED = "SELECT * FROM BPW_RecTransfer a  WHERE StartDate >= ? AND StartDate <= ?";
  public static final String SQL_PURGE_TRANSFERS = "DELETE FROM BPW_Transfer WHERE DateToPost <= ? AND CustomerId = ? ";
  public static final String SQL_PURGE_TRANSFERS_ALLCUSTOMERS = "DELETE FROM BPW_Transfer WHERE DateToPost <= ? ";
  public static final String SQL_PURGE_RECTRANSFERS = "DELETE FROM BPW_RecTransfer WHERE EndDate <= ? AND CustomerId = ? ";
  public static final String SQL_PURGE_RECTRANSFERS_ALLCUSTOMERS = "DELETE FROM BPW_RecTransfer WHERE EndDate <= ? ";
  public static final String SQL_PURGE_TRANSFER_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT SrvrTId FROM BPW_Transfer     WHERE DateToPost <= ?  AND CustomerId = ? ) ";
  public static final String SQL_PURGE_TRANSFER_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT SrvrTId FROM BPW_Transfer     WHERE DateToPost <= ? ) ";
  public static final String SQL_PURGE_RECTRANSFER_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT RecSrvrTId FROM BPW_RecTransfer     WHERE EndDate <= ? AND CustomerId = ? ) ";
  public static final String SQL_PURGE_RECTRANSFER_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog  WHERE LogDate <= ?  AND InstructionType = ?  AND InstructionID IN (SELECT RecSrvrTId FROM BPW_RecTransfer     WHERE EndDate <= ? ) ";
  public static final String ADD_TRANSFERTEMPHIST = "INSERT INTO BPW_TransfrTmpHist (SessionId, CursorId, TransactionId, TransactionType, DateToPost, FromAcctId, ToAcctId, Frequency, Status, Amount, SubmitDate  VALUES(?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_VERIFY_ACCOUNT_AMOUNTS = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE CustomerId = ? and ExternalAcctId = ? ORDER BY DateCreate DESC";
  public static final String ADD_ETF_EXTERNALACCT = "INSERT INTO ETF_ExternalAcct (AcctId, CustomerId, NickName, NickName_LWRCase, AcctNum, AcctType, AcctBankRtn, AcctScope,AcctDest, AcctCategory, BankRtnType, RecipientId, RecipientType, RecipientName, Prenote, PrenoteType, SubmittedBy, CreateDate, LogId, AgreedToTerms, VerifyStatus, VerifyFailedCount, PrimaryAcctHolder, SecondaryAcctHolder, CheckNum, Status) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_ETF_EXTERNALACCT_FIXED = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a ";
  public static final String GET_ETF_EXTERNALACCT_BY_ID = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a  WHERE a.AcctId = ? ";
  public static final String GET_ETF_EXTERNALACCT_BY_ACCT_NUM = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a  WHERE a.AcctNum = ? ";
  public static final String GET_ETF_EXTERNALACCT_BY_ACCTNUM_TYPE_RTN_CUST_STATUS = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a  WHERE a.AcctNum = ? AND a.AcctType = ? AND a.AcctBankRtn = ? AND a.CustomerId = ?";
  public static final String GET_ETF_EXTERNALACCT_WITH_UNPOSTED_PRENOTE_BY_CUSTOMERID = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a  WHERE a.CustomerId = ? AND a.Prenote = 'Y' AND ( a.PrenoteStatus is null OR   a.PrenoteStatus <> 'Success') AND a.Status <> 'CANCELEDON'";
  public static final String UPDATE_ETF_EXTERNALACCT_STATUS = "Update ETF_ExternalAcct set Status = ?  WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT = "Update ETF_ExternalAcct set AcctNum = ?, AcctType = ?, AcctBankRtn = ?, AcctScope = ?, AcctDest = ?, AcctCategory = ?, BankRtnType = ?, RecipientId = ?, RecipientType = ?, RecipientName = ?, Prenote = ?, PrenoteType = ?, NickName = ?, NickName_LWRCase = ?, PrimaryAcctHolder = ?, SecondaryAcctHolder = ?, CheckNum = ? WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT_DEPOSIT = "Update ETF_ExternalAcct set VerifyStatus = ?, VerifyFailedCount = ?, DepositDate = ? WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT_VERIFY = "Update ETF_ExternalAcct set VerifyFailedCount = ? WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT_VERIFY_SUCCESS = "Update ETF_ExternalAcct set VerifyStatus = ? WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT_PRENOTE_STATUS = "Update ETF_ExternalAcct set PrenoteStatus = ? WHERE AcctId = ? ";
  public static final String UPDATE_ETF_EXTERNALACCT_PRENOTE_INFO = "Update ETF_ExternalAcct set PrenoteStatus = ?, PrenoteSubDate = ? WHERE AcctId = ? ";
  public static final String ADD_ETF_EXTERNALCOMP = "INSERT INTO ETF_Company (CompId, FIId, CustomerId, CompName, CompACHId, CompDescription, SubmittedBy, CreateDate, LogId, Status) VALUES (?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_ETF_EXTERNALCOMP_FIXED = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a ";
  public static final String GET_ETF_EXTERNALCOMP_BY_ID = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a  WHERE a.CompId = ? ";
  public static final String GET_ETF_EXTERNALCOMP_BY_CUSTID = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a  WHERE a.CustomerId = ? ";
  public static final String GET_ETF_EXTERNALCOMP_BY_FIID = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a  WHERE a.FIId = ? ";
  public static final String GET_ETF_EXTERNALCOMP_BY_CUSTID_OR_FIID_AND_NULL_CUSTID = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a  WHERE a.CustomerId = ?  OR (a.FIId = ? AND a.CustomerId = '-1')";
  public static final String GET_ETF_EXTERNALCOMP_BY_COMPACHID_STATUS = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a  WHERE a.CompACHId = ?  AND a.Status = ? ";
  public static final String UPDATE_ETF_EXTERNALCOMP_STATUS = "Update ETF_Company set Status = ?  WHERE CompId = ? ";
  public static final String UPDATE_ETF_EXTERNALCOMP = "Update ETF_Company set CompName = ?, CompACHId = ?, CompDescription = ?  WHERE CompId = ? ";
  public static final String GET_CUSTOMER_IDS_FOR_ETF_COMPANY_BY_FIID = "SELECT Distinct comp.CustomerId from ETF_Company comp, BPW_Customer cust  WHERE comp.CustomerId = cust.CustomerID AND cust.FIID = ?  AND comp.Status != 'CANCELEDON'";
  public static final String ADD_ETFACHENTRY = "INSERT INTO ETF_ACHEntry (EntryId, BatchId, TransactionCode, RecvDFIIdentification, DFIAccountNumber, RcvCompIndvName, IdentificationNumber, Amount, TraceNumber, LogId) VALUES (?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_ETFACHBATCH = "INSERT INTO ETF_ACHBatch (BatchId, FileId, CompanyName, CompanyIdentification, StdEntryClassCode, EffectiveEntryDate, EntryAddendaCount, TotalDebits, NumberOfDebits, TotalCredits, NumberOfCredits, BatchNumber, CustomerId, CustomerIdInt) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_ETFACHFILE = "INSERT INTO ETF_ACHFile (FileId, CreateDate, FileStatus, BatchCount, TotalDebit, NumberOfDebits, TotalCredit, NumberOfCredits,  ProcessId, ExportFileName, RecordCount) VALUES (?,?,?,?,?,?,?,?,?,?,?)";
  public static final String MOD_ETFACHBATCH_WITH_CTRL = "UPDATE ETF_ACHBatch set EntryAddendaCount = ?, TotalDebits = ?, NumberOfDebits = ?, TotalCredits = ?, NumberOfCredits = ?, EffectiveEntryDate = ? WHERE BatchId = ?";
  public static final String MOD_ETFACHFILE_WITH_CTRL = "UPDATE ETF_ACHFile set FileStatus = ?, BatchCount = ?, RecordCount = ?, TotalDebit = ?, NumberOfDebits = ?, TotalCredit = ?, NumberOfCredits = ? WHERE FileId = ?";
  public static final String DEL_ETFACHFILE = "DELETE From ETF_ACHFile WHERE FileId = ?";
  public static final String DEL_ETFACHBATCH = "DELETE From ETF_ACHBatch WHERE BatchId = ?";
  public static final String DEL_ETFACHFILE_BY_PROCESS_ID = "DELETE From ETF_ACHFile WHERE ProcessId = ?";
  public static final String GET_RPPSFI_BY_FIRPPSID = "SELECT RPPSFIId, FIRPPSId, FIID, FIRPPSName, RPPSId, RPPSName, SubmitDate, ActivationDate, FIStatus, CreditCap, LogId, Memo FROM RPPS_FIInfo WHERE FIRPPSId = ?";
  public static final String GET_RPPSFI_BY_RPPSFIID = "SELECT RPPSFIId, FIRPPSId, FIID, FIRPPSName, RPPSId, RPPSName, SubmitDate, ActivationDate, FIStatus, CreditCap, LogId, Memo FROM RPPS_FIInfo WHERE RPPSFIId = ? AND FIStatus != 'CLOSED'";
  public static final String GET_RPPSFI_BY_FIID = "SELECT RPPSFIId, FIRPPSId, FIID, FIRPPSName, RPPSId, RPPSName, SubmitDate, ActivationDate, FIStatus, CreditCap, LogId, Memo FROM RPPS_FIInfo WHERE FIID = ?";
  public static final String ADD_RPPSFI = "INSERT INTO RPPS_FIInfo (RPPSFIId, FIRPPSId, FIID, FIRPPSName, RPPSId, RPPSName, SubmitDate, ActivationDate, FIStatus, LogId, Memo, CreditCap) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_RPPSFI = "UPDATE RPPS_FIInfo SET FIRPPSId = ?, FIRPPSName = ?, RPPSId = ?, RPPSName = ?, Memo = ?, FIStatus = ? WHERE RPPSFIId = ? AND FIStatus != 'CLOSED'";
  public static final String ACTIVATE_RPPSFI = "UPDATE RPPS_FIInfo SET FIStatus = 'ACTIVE', ActivationDate = ? WHERE RPPSFIId = ? AND FIStatus= 'CLOSED' ";
  public static final String CLOSE_RPPSFI = "UPDATE RPPS_FIInfo SET FIStatus = 'CLOSED' WHERE RPPSFIId = ? AND FIStatus != 'CLOSED' ";
  public static final String GET_RPPSPAYEEEXT_BY_FIRPPSID_BILLERRPPSID = "SELECT BillerRPPSId, BillerAliasId, RPPSFIId, BillerName, BillerClass, BillerType, TrnABA, Prenotes, GuarPayOnly, DmpPrenote, DmpPayOnly, OldName, PrivateFlag, BillerStatus, Memo, SubmitDate, LogId FROM RPPS_PayeeExt WHERE RPPSFIId=? and BillerRPPSId = ? ";
  public static final String GET_RPPSPAYEEEXT_BY_FIRPPSID_PAYEEID = "SELECT RPPS_PayeeExt.BillerRPPSId, RPPS_PayeeExt.BillerAliasId, RPPS_PayeeExt.RPPSFIId, RPPS_PayeeExt.BillerName, RPPS_PayeeExt.BillerClass, RPPS_PayeeExt.BillerType, RPPS_PayeeExt.TrnABA, RPPS_PayeeExt.Prenotes, RPPS_PayeeExt.GuarPayOnly, RPPS_PayeeExt.DmpPrenote, RPPS_PayeeExt.DmpPayOnly, RPPS_PayeeExt.OldName, RPPS_PayeeExt.PrivateFlag, RPPS_PayeeExt.BillerStatus, RPPS_PayeeExt.Memo, RPPS_PayeeExt.SubmitDate, RPPS_PayeeExt.LogId FROM RPPS_PayeeExt, BPW_Payee WHERE RPPS_PayeeExt.RPPSFIId=?  and BPW_Payee.PayeeID = ? and RPPS_PayeeExt.BillerRPPSId = BPW_Payee.ExtdPayeeID";
  public static final String GET_RPPSPAYEEEXT_BY_FIRPPSID = "SELECT BillerRPPSId, BillerAliasId, RPPSFIId, BillerName, BillerClass, BillerType, TrnABA, Prenotes, GuarPayOnly, DmpPrenote, DmpPayOnly, OldName, PrivateFlag, BillerStatus, Memo, SubmitDate, LogId FROM RPPS_PayeeExt WHERE RPPSFIId = ?";
  public static final String ADD_RPPSPAYEEEXT = "INSERT INTO RPPS_PayeeExt (BillerRPPSId, BillerAliasId, RPPSFIId, BillerName, BillerClass, BillerType, TrnABA, Prenotes, GuarPayOnly, DmpPrenote, DmpPayOnly, OldName, PrivateFlag, BillerStatus, LogId, Memo) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_RPPSPAYEEEXT_BY_FI_BillerRPPSID = "UPDATE RPPS_PayeeExt SET BillerAliasId = ?, BillerName = ?, BillerClass = ?, BillerType = ?, TrnABA = ?, Prenotes = ?, GuarPayOnly = ?, DmpPrenote = ?, DmpPayOnly = ?, OldName = ?, PrivateFlag = ?, BillerStatus = ?, memo = ? WHERE RPPSFIId=? and BillerRPPSId = ? ";
  public static final String DELETE_RPPSPAYEEEXT = "DELETE FROM RPPS_PayeeExt WHERE RPPSFIId=? and BillerRPPSId = ? ";
  public static final String ADD_RPPSENTRYTMP = "INSERT INTO RPPS_EntryTmp (EntryId, SrvrTID, FIID, PayeeID, TXCode) VALUES (?,?,?,?,?)";
  public static final String GET_RPPSENTRYTMP_BY_FIID = "SELECT EntryId, SrvrTID, FIID, PayeeID, TXCode FROM RPPS_EntryTmp WHERE FIID = ? ORDER BY FIID, PayeeId, TXCode, EntryId";
  public static final String GET_RPPSENTRYTMP_BY_FIID_PAYEEID_TXCODE_ENTRYID = "SELECT EntryId, SrvrTID, FIID, PayeeID, TXCode FROM RPPS_EntryTmp WHERE FIID = ? and PayeeId = ? and TXCode = ? and EntryId >= ? ORDER BY EntryId";
  public static final String DELETE_RPPSENTRYTMP_BY_FIID = "DELETE FROM RPPS_EntryTmp WHERE FIID = ? AND EntryId <= ?";
  public static final String GET_MAXMINRPPSTRACENUM_BY_FIID = "SELECT MAX(EntryId) AS RPPSEntryTmpMaxEntryId, MIN(EntryId) AS RPPSEntryTmpMinEntryId FROM RPPS_EntryTmp WHERE FIID = ?";
  public static final String ADD_RPPSPMTENTRYMAP = "INSERT INTO RPPS_PmtEntryMap (SrvrTID, SubmitDate, BatchNum, TraceNum, PayAccount, FileId, ConsumerName) VALUES (?,?,?,?,?,?,?)";
  public static final String GET_RPPSPMTENTRYMAP_BY_SRVRTID = "SELECT SrvrTID, SubmitDate, BatchNum, TraceNum, PayAccount, FileId, ConsumerName FROM RPPS_PmtEntryMap WHERE SrvrTID = ?";
  public static final String GET_RPPSPMTENTRYMAP_SRVRTID = "SELECT SrvrTID FROM RPPS_PmtEntryMap WHERE BatchNum = ? AND TraceNum = ? AND PayAccount = ? AND ConsumerName = ? ORDER BY SubmitDate DESC";
  public static final String GET_RPPSPMTENTRYMAP_SRVRTID_BY_TRACENUM = "SELECT SrvrTID FROM RPPS_PmtEntryMap WHERE TraceNum = ? ORDER BY SubmitDate DESC";
  public static final String GET_RPPSPMTENTRYMAP_BY_FILEID_TRACENUM = "SELECT SrvrTID, SubmitDate, BatchNum, TraceNum, PayAccount, FileId, ConsumerName FROM RPPS_PmtEntryMap WHERE FileId = ? and TraceNum >= ?";
  public static final String UPDATE_RPPSPMTENTRYMAP = "UPDATE RPPS_PmtEntryMap SET SubmitDate = ?,  BatchNum = ? , TraceNum = ? , PayAccount = ? ,  FileId = ?,  ConsumerName = ? WHERE SrvrTID = ?";
  public static final String UPDATE_RPPSPMTFILEMAP_BY_FILEID = "UPDATE RPPS_PmtFileMap SET TransDate = ?, TransTime = ?, FileIdModifier = ?, TotalEntryCount = ?, TotalDebit = ?, TotalCredit = ?, FileName = ?, Confirmed = ?, Completed = ?, FIID = ? WHERE FileId = ?";
  public static final String GET_RPPSPMTFILEMAP_BY_FILEID = "SELECT FileId, TransDate, TransTime, FileIdModifier, TotalEntryCount, TotalDebit, TotalCredit, FileName, Confirmed, Completed, FIID FROM RPPS_PmtFileMap WHERE FileId = ? ORDER BY FileId";
  public static final String GET_RPPSPMTFILEMAP_BY_SRVRTID = "SELECT FileId, TransDate, TransTime, FileIdModifier, TotalEntryCount, TotalDebit, TotalCredit, FileName, Confirmed, Completed, FIID FROM RPPS_PmtFileMap WHERE FileId = ? ORDER BY FileId";
  public static final String GET_RPPSPMTFILEMAP = "SELECT FileId, TransDate, TransTime, FileIdModifier, TotalEntryCount, TotalDebit, TotalCredit, FileName, Confirmed, Completed, FIID FROM RPPS_PmtFileMap WHERE FIId =? AND TransDate = ? AND TotalEntryCount = ? AND TotalDebit = ? AND TotalCredit = ? ORDER BY FileId DESC";
  public static final String ADD_RPPSPMTFILEMAP = "INSERT INTO RPPS_PmtFileMap (FileId, TransDate, TransTime, FileIdModifier, TotalEntryCount, TotalDebit, TotalCredit, FileName, Confirmed, Completed, FIID) VALUES (?,?,?,?,?,?,?,?,?,?,?)";
  public static final String ADD_XTRAINFO = "INSERT INTO BPW_ExtraInfo (FIId,RecordId,RecordType,Name,Value) VALUES (?,?,?,?,?)";
  public static final String MOD_XTRAINFO = "UPDATE BPW_ExtraInfo set Value = ?  WHERE FIId = ? AND RecordId = ? AND RecordType = ? AND Name = ?";
  public static final String DEL_XTRAINFO = "DELETE FROM BPW_ExtraInfo  WHERE FIId = ? AND RecordId = ? AND RecordType = ? AND Name = ?";
  public static final String GET_XTRAINFO_VAL = "SELECT Name, Value FROM BPW_ExtraInfo WHERE FIId = ? AND RecordId = ? AND RecordType = ? AND Name = ? ";
  public static final String GET_XTRAINFO = "SELECT Name, Value FROM BPW_ExtraInfo WHERE FIId = ? AND RecordId = ? ";
  public static final String DEL_XTRAINFO_BY_RECORDID_TYPE = "DELETE FROM BPW_ExtraInfo  WHERE RecordId = ? And RecordType = ?";
  public static final String DEL_XTRAINFO_BY_RECORDID = "DELETE FROM BPW_ExtraInfo WHERE RecordId = ?";
  public static final String ADD_BPW_BANK_ACCT = "INSERT INTO BPW_BankAcct (AcctId, AcctNumber, FIId, BankRTN, AcctType, NameOnAcct, AcctStatus, AcctNickName, AcctDesc, BankName, BranchName, AcctGroup, AcctRank, Currency, AddrLine1, AddrLine2, City, State, ZipCode, Country, DayPhone, SubmitDate, LastChangeDate, ActivationDate, AmtLimit) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_BPW_BANK_ACCT_BY_ACCTID = "SELECT * FROM BPW_BankAcct WHERE AcctId = ? AND AcctStatus != 'CLOSED' ";
  public static final String GET_BPW_BANK_ACCT_BY_ACCTNUMBER_BANKRTN = "SELECT * FROM BPW_BankAcct WHERE AcctNumber = ? AND BankRTN = ? AND AcctStatus != 'CLOSED' ";
  public static final String DELETE_BPW_BANK_ACCT_BY_ACCTID = "DELETE FROM BPW_BankAcct WHERE AcctId = ?";
  public static final String UPDATE_BPW_BANK_ACCT_BY_ACCTID = "UPDATE BPW_BankAcct set AcctNumber = ?, BankRTN = ?, AcctType = ?, NameOnAcct = ?, AcctNickName = ?, AcctStatus = ?, AcctDesc = ?, BankName = ?, BranchName = ?, AcctGroup = ?, AcctRank = ?, Currency = ?, AddrLine1 = ?, AddrLine2 = ?, City = ?, State = ?, ZipCode = ?, Country = ?, DayPhone = ?, LastChangeDate = ?, AmtLimit = ? WHERE AcctId = ?";
  public static final String ADD_ACH_COMP_OFFSET_ACCT = "INSERT INTO ACH_CompOffsetAcct (AcctId, CompId) VALUES (?, ?)";
  public static final String GET_ACH_COMP_OFFSET_ACCT_BY_ACCTID = "SELECT * from ACH_CompOffsetAcct WHERE AcctId = ?";
  public static final String GET_ACH_COMP_OFFSET_ACCT_BY_COMPID = "SELECT * from ACH_CompOffsetAcct WHERE CompId = ?";
  public static final String DELETE_ACH_COMP_OFFSET_ACCT_BY_ACCTID = "DELETE FROM ACH_CompOffsetAcct WHERE AcctId = ?";
  public static final String GET_COMBINE_ACH_COMP_OFFSET_ACCT_BY_ACCTID = "SELECT a.AcctId, a.AcctNumber, a.FIId, a.BankRTN, a.AcctType, a.NameOnAcct, a.AcctStatus, a.AcctNickName, a.AcctDesc, a.BankName, a.BranchName, a.AcctGroup, a.AcctRank, a.Currency, a.AddrLine1, a.AddrLine2, a.City, a.State, a.ZipCode, a.Country, a.DayPhone, a.SubmitDate, a.LastChangeDate, a.ActivationDate, a.AmtLimit, b.CompId FROM BPW_BankAcct a, ACH_CompOffsetAcct b WHERE a.AcctId = ? AND a.AcctId = b.AcctId AND a.AcctStatus != 'CLOSED' ";
  public static final String GET_COMBINE_ACH_COMP_OFFSET_ACCT_BY_COMPID_BANKRTN_ACCTNUM = "SELECT a.AcctId, a.AcctNumber, a.FIId, a.BankRTN, a.AcctType, a.NameOnAcct, a.AcctStatus, a.AcctNickName, a.AcctDesc, a.BankName, a.BranchName, a.AcctGroup, a.AcctRank, a.Currency, a.AddrLine1, a.AddrLine2, a.City, a.State, a.ZipCode, a.Country, a.DayPhone, a.SubmitDate, a.LastChangeDate, a.ActivationDate, a.AmtLimit, b.CompId FROM BPW_BankAcct a, ACH_CompOffsetAcct b WHERE b.CompId = ? AND a.BankRTN = ? AND a.AcctNumber = ? AND a.AcctId = b.AcctId AND a.AcctStatus != 'CLOSED' ";
  public static final String GET_COMBINE_ACH_COMP_OFFSET_ACCT_BY_COMPID_BANKRTN_ACCTNUM_NOT_ACCTID = "SELECT a.AcctId, a.AcctNumber, a.FIId, a.BankRTN, a.AcctType, a.NameOnAcct, a.AcctStatus, a.AcctNickName, a.AcctDesc, a.BankName, a.BranchName, a.AcctGroup, a.AcctRank, a.Currency, a.AddrLine1, a.AddrLine2, a.City, a.State, a.ZipCode, a.Country, a.DayPhone, a.SubmitDate, a.LastChangeDate, a.ActivationDate, a.AmtLimit, b.CompId FROM BPW_BankAcct a, ACH_CompOffsetAcct b WHERE b.CompId = ? AND a.BankRTN = ? AND a.AcctNumber = ? AND b.AcctId != ? AND  a.AcctId = b.AcctId AND a.AcctStatus != 'CLOSED' ";
  public static final String GET_COMBINE_ACH_COMP_OFFSET_ACCT_BY_COMPID = "SELECT a.AcctId, a.AcctNumber, a.FIId, a.BankRTN, a.AcctType, a.NameOnAcct, a.AcctStatus, a.AcctNickName, a.AcctDesc, a.BankName, a.BranchName, a.AcctGroup, a.AcctRank, a.Currency, a.AddrLine1, a.AddrLine2, a.City, a.State, a.ZipCode, a.Country, a.DayPhone, a.SubmitDate, a.LastChangeDate, a.ActivationDate, a.AmtLimit, b.CompId FROM BPW_BankAcct a, ACH_CompOffsetAcct b WHERE b.CompId = ? AND a.AcctId = b.AcctId AND a.AcctStatus != 'CLOSED' ";
  public static final String GET_ACCTIDS_BY_COMPID = " SELECT AcctId FROM ACH_CompOffsetAcct WHERE CompId = ?";
  public static final String GET_NUMBER_DISTINCT_PAIRID_IN_BATCH = "SELECT COUNT(DISTINCT PairedId) FROM ACH_Record WHERE BatchId = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_DISTINCT_PAIRID_IN_RECBATCH = "SELECT COUNT(DISTINCT PairedId) FROM ACH_RecRecord WHERE BatchId = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_RECORDS_IN_BATCH_BY_RECORD_CATEGORY = "SELECT COUNT(RecordId) FROM ACH_Record WHERE BatchId = ? AND RecordCategory = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_RECORDS_IN_RECBATCH_BY_RECORD_CATEGORY = "SELECT COUNT(RecRecordId) FROM ACH_RecRecord WHERE BatchId = ? AND RecordCategory = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_RECORDS_IN_BATCH = "SELECT COUNT(RecordId) FROM ACH_Record WHERE BatchId = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_RECORDS_IN_RECBATCH = "SELECT COUNT(RecRecordId) FROM ACH_RecRecord WHERE BatchId = ? AND RecordStatus != 'CANCELEDON'";
  public static final String GET_NUMBER_RECORDS_IN_BATCH_WITH_LATER_PRENOTE_PAYEE_SUBMITTED_DATE = "SELECT COUNT(RecordId) FROM ACH_Record a, ACH_Payee c WHERE a.BatchId = ? AND a.PayeeId = c.PayeeId AND a.RecordStatus != 'CANCELEDON' AND ( c.PrenoteCredStatus = 'Pending' OR   c.PrenoteDebStatus = 'Pending' ) AND c.Status != 'CLOSED' AND  ( ( (c.PrenoteSubmitDate IS NOT NULL) AND (c.PrenoteSubmitDate > ?) ) OR  ( (c.PrenoteSubmitDate IS NULL) AND ";
  public static final String GET_NUMBER_RECORDS_IN_RECBATCH_WITH_LATER_PRENOTE_PAYEE_SUBMITTED_DATE = "SELECT COUNT(RecRecordId) FROM ACH_RecRecord a, ACH_RecBatch b, ACH_Payee c WHERE a.BatchId = ? AND a.BatchId = b.RecBatchId AND a.PayeeId = c.PayeeId AND a.RecordStatus != 'CANCELEDON' AND ( c.PrenoteCredStatus = 'Pending' OR   c.PrenoteDebStatus = 'Pending' ) AND c.Status != 'CLOSED' AND  ( ( (c.PrenoteSubmitDate IS NOT NULL) AND (c.PrenoteSubmitDate > ?) ) OR  ( (c.PrenoteSubmitDate IS NULL) AND ";
  public static final String GET_ACH_BATCH_INFO = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId ";
  public static final String GET_INCOMPLETE_ACH_BATCH_INFO = "SELECT a.BatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.ExportFileName,  a.DueDate, a.DtProcessed, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier , a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_Batch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId  AND a.BatchStatus = 'ACHTEMPORARY' AND a.SubmitDate < ?";
  public static final String GET_REC_ACH_BATCH_INFO = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId ";
  public static final String GET_INCOMPLETE_REC_ACH_BATCH_INFO = "SELECT a.RecBatchId, a.CompId, a.CompData, c.ODFIACHId, a.BatchType, a.BatchCategory, a.BatchBalanceType, a.EffectiveDate, a.SettlementDate, a.CompEntryDesc, a.DescpDate, a.BatchNum, a.StdClassCode, a.CountryCode, a.OriginCurrCode, a.DestCurrCode, a.TotalDebit, a.TotalCredit, a.MsgAuthCode, a.RecordCount, a.EntryHash, a.SubmitDate, a.SubmittedBy, a.BatchStatus, a.LogId, a.CompACHId, b.CompName, d.FIRTN,  c.ODFIName, a.FrgnExInd, a.FrgnExRefInd, a.FrgnExRef, a.OrigStatusCode,  a.SrvClassCode, a.Frequency, a.StartDate, a.EndDate, a.PmtsCount, a.Memo, c.FIId, b.CustomerId,  a.OffsetAccountID, a.HeaderCompName, a.LastModifier, a.NonOffTotalCredit, a.NonOffTotalDebit, a.NonOffRecordCount  FROM ACH_RecBatch a, ACH_Company b, ACH_FIInfo c, BPW_FIInfo d WHERE a.CompId = b.CompId AND b.ACHFIId = c.ACHFIId AND c.FIId = d.FIId  AND a.BatchStatus = 'ACHTEMPORARY' AND a.SubmitDate < ?";
  public static final String GET_ACH_FILE = "SELECT FileId, CustomerId, ReferenceCODE, RDFIACHId, ODFIACHId,  OrgCreateDate,BPWCreateDate, DueDate, FileHeaderType,SubmitDate, FileStatus, BatchCount,BlockCount,RecordCount,TotalDebit, TotalCredit, LogId, SubmittedBy, Memo, DtProcessed, NumberOfCredits, NumberOfDebits, ExportFileName, UploadFileName  FROM ACH_File ";
  public static final String GET_DANGLING_ACH_FILES = "SELECT FileId, CustomerId, ReferenceCODE, RDFIACHId, ODFIACHId,  OrgCreateDate,BPWCreateDate, DueDate, FileHeaderType,SubmitDate, FileStatus, BatchCount,BlockCount,RecordCount,TotalDebit, TotalCredit, LogId, SubmittedBy, Memo, DtProcessed, NumberOfCredits, NumberOfDebits, ExportFileName, UploadFileName  FROM ACH_File  WHERE FileStatus = 'ACHTEMPORARY' AND SubmitDate < ?";
  public static final String CANCEL_DANGLING_ACH_FILES = "UPDATE ACH_File SET FileStatus = 'CANCELEDON' WHERE FileStatus = 'ACHTEMPORARY' AND SubmitDate < ?";
  public static final String GET_ACH_PAYEE_INFO = "SELECT  PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate,  PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee  FROM ACH_Payee ";
  public static final String GET_MATURED_ACH_PAYEE_INFO = "SELECT  PayeeId, CompId, PayAcct, PayeeType, PayeeGroup, PayeeName, NickName, BankRTN, BankAcctId, BankAcctType, CardNum, CardExpireDate, CardTransCode, CardAuthCode, Addr1, Addr2, Addr3, City, State, Zipcode, Country, Phone, Extension, Status, ContactName, SubmitDate, ActivationDate, LogId, Memo, PrenoteCredStatus, PrenoteDebStatus, PrenoteSubmitDate,  PrenoteSecCode, PrenoteDemand, ManagedPayee, SubmittedBy, SecurePayee  FROM ACH_Payee  WHERE (PrenoteCredStatus = 'Pending' OR PrenoteDebStatus = 'Pending') AND PrenoteSubmitDate IS NOT NULL  AND PrenoteSubmitDate < ?";
  public static final String GET_ACH_BATCH_BY_OFFSETACCTID = "SELECT BatchId from ACH_Batch where OffsetAccountID = ?  and BatchStatus = 'WILLPROCESSON'";
  public static final String GET_ACH_RECBATCH_BY_OFFSETACCTID = "SELECT RecBatchId from ACH_RecBatch where OffsetAccountID = ?  and BatchStatus = 'WILLPROCESSON'";
  public static final String GET_ACH_RECORD_BY_OFFSETACCTID = "SELECT RecordId from ACH_Record a, ACH_Batch b  Where a.BatchId=b.BatchId And a.OffsetAccountID = ?  And b.BatchStatus ='WILLPROCESSON' And a.RecordStatus = 'WILLPROCESSON'";
  public static final String GET_ACH_RECRECORD_BY_OFFSETACCTID = "SELECT a.RecRecordId from ACH_RecRecord a, ACH_RecBatch b  Where a.BatchId=b.RecBatchId And a.OffsetAccountID = ?  And b.BatchStatus ='WILLPROCESSON' And a.RecordStatus = 'WILLPROCESSON'";
  public static final String GET_XFERXTRAINFO_VAL = "SELECT Value FROM BPW_XferExtraInfo WHERE SrvrTID = ? AND Name = ? ";
  public static final String GET_ALLXFERXTRAINFO_SRVRTID = "SELECT Name,Value FROM BPW_XferExtraInfo WHERE SrvrTID = ?";
  public static final String ADD_XFERXTRAINFO = "INSERT INTO  BPW_XferExtraInfo (SrvrTID,Name,Value) VALUES (?,?,?)";
  public static final String MOD_XFERXTRAINFO = "UPDATE BPW_XferExtraInfo set Value = ? WHERE SrvrTID = ? AND Name = ? ";
  public static final String DEL_XFERXTRAINFO_BY_SRVRTID = "DELETE FROM BPW_XferExtraInfo WHERE SrvrTID = ? And Name = ?";
  public static final String DEL_ALLXFERXTRAINFO_BY_SRVRTID = "DELETE FROM BPW_XferExtraInfo WHERE SrvrTID = ?";
  public static final String SQL_GET_ACH_PAYEE = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap ";
  public static final String GET_SAME_BUSINESS_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKNAME = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap , ACH_Company ac, BPW_Customer bc WHERE ((ap.PayAcct = ? AND ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.PayeeGroup = 'Business' AND ac.CompId = ap.CompId AND bc.CustomerID = ac.CustomerId AND bc.CustomerID = ?";
  public static final String GET_SAME_COMPANY_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKNAME = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap , ACH_Company ac WHERE ac.CompId = ? AND ap.CompId = ac.CompId AND (( ap.PayAcct = ? AND ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.PayeeGroup = 'Company'";
  public static final String GET_SAME_USER_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKCNAME = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap  WHERE (ap.PayAcct = ? AND (ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.SubmittedBy = ? AND  ap.PayeeGroup ='User'";
  public static final String GET_SAME_BUSINESS_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKNAME_AND_PAYEEID = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap , ACH_Company ac, BPW_Customer bc WHERE ap.PayeeId != ? AND ((ap.PayAcct = ? AND ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.PayeeGroup = 'Business' AND ac.CompId = ap.CompId AND bc.CustomerID = ac.CustomerId AND bc.CustomerID = ?";
  public static final String GET_SAME_COMPANY_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKNAME_AND_PAYEEID = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap , ACH_Company ac WHERE ap.PayeeId != ? AND ac.CompId = ? AND ap.CompId = ac.CompId AND ((ap.PayAcct = ? AND ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.PayeeGroup = 'Company'";
  public static final String GET_SAME_USER_GROUP_PAYEE_BY_ACCT_INFO_OR_NICKCNAME_AND_PAYEEID = "SELECT  ap.PayeeId, ap.CompId, ap.PayAcct, ap.PayeeType, ap.PayeeGroup, ap.PayeeName, ap.NickName, ap.BankRTN, ap.BankAcctId, ap.BankAcctType, ap.CardNum, ap.CardExpireDate, ap.CardTransCode, ap.CardAuthCode, ap.Addr1, ap.Addr2, ap.Addr3, ap.City, ap.State, ap.Zipcode, ap.Country, ap.Phone, ap.Extension, ap.Status, ap.ContactName, ap.SubmitDate, ap.ActivationDate, ap.LogId, ap.Memo, ap.PrenoteCredStatus, ap.PrenoteDebStatus, ap.PrenoteSubmitDate,  ap.PrenoteSecCode, ap.PrenoteDemand, ap.ManagedPayee, ap.SubmittedBy, ap.SecurePayee  FROM ACH_Payee ap  WHERE ap.PayeeId != ? AND ap.PayAcct = ? AND ((ap.BankAcctId = ? AND ap.BankRTN = ?) OR ap.NickName = ?) AND ap.Status != 'CLOSED' AND ap.ManagedPayee = 'Y' AND ap.SubmittedBy = ? AND ap.PayeeGroup ='User'";
  public static final String SQL_GET_CC_COMPANY = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc ";
  public static final String GET_CC_COMPANY_BY_CCCOMPID = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc  WHERE cc.CCCompId = ?";
  public static final String GET_CC_COMPANY_BY_COMPID = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc  WHERE cc.CompId = ? And cc.Status != 'CANCELEDON'";
  public static final String ADD_CC_COMPANY = "INSERT INTO CC_Company (CompId, CustomerId, CCCompId, CompName, ConcentrateAcctId, DisburseAcctId, BatchType, Status, SubmittedBy, LogId) VALUES (?,?,?,?,?,?,?,?,?,?)";
  public static final String SQL_GET_CC_LOCATION = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc ";
  public static final String GET_ACTIVE_CC_LOCATION_BY_COMPID = "SELECT count(LocationId) FROM CC_Location WHERE CompId = ?  AND Status !='CANCELEDON'";
  public static final String DELETE_CC_COMPANY_ACCT_BY_COMPID = "Delete from CC_CompanyAcct WHERE CompId = ? ";
  public static final String UPDATE_CC_COMPANY_STATUS = "Update CC_Company set Status = ? where CompId = ?  AND Status != 'CANCELEDON'";
  public static final String UPDATE_CC_COMPANY = "Update CC_Company set CustomerId = ?, CCCompId = ?, CompName = ?, ConcentrateAcctId = ?, DisburseAcctId = ?, BatchType = ?, Status = ?  Where CompId = ?";
  public static final String GET_ACTIVE_TRANSACTION_FOR_COMPANY = "SELECT count(loc.LocationId) FROM CC_Entry entry, CC_Location loc  WHERE entry.LocationId = loc.LocationId AND loc.CompId = ?  AND entry.Status = 'WILLPROCESSON' AND loc.Status != 'CANCELEDON'";
  public static final String DELETE_COMPANY_CUTOFF_BY_COMPID = "Delete from CC_CompanyCutOff  Where CompId = ?";
  public static final String DELETE_COMPANY_CUTOFF_BY_CUTOFFID = "Delete from CC_CompanyCutOff  Where CutOffId = ?";
  public static final String GET_CC_COMPANY_LIST = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc  Where cc.Status != 'CANCELEDON'";
  public static final String GET_CC_COMPANY_LIST_WITH_FIID = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc , BPW_Customer cust  Where cc.Status != 'CANCELEDON' AND cust.CustomerID = cc.CustomerId ";
  public static final String GET_ALL_CC_COMPANY_LIST_WITH_FIID = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc , BPW_Customer cust  Where cust.CustomerID = cc.CustomerId ";
  public static final String GET_ALL_CC_COMPANIES = "SELECT cc.CompId, cc.CustomerId, cc.CCCompId, cc.CompName, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BatchType, cc.Status, cc.SubmittedBy, cc.LogId  FROM CC_Company cc  Where 1=1";
  public static final String SQL_GET_CC_COMPANY_BY_FIID = " AND cust.FIID = ? ";
  public static final String SQL_GET_CC_COMPANY_BY_CUSTOMERID = " AND cc.CustomerId = ? ";
  public static final String SQL_GET_CC_COMPANY_COMPIDS = " AND cc.CompId IN (";
  public static final String SQL_GET_CC_COMPANY_WITH_START_COMPANY_ID = " AND cc.CompId > ?";
  public static final String SQL_GET_CC_COMPANY_ORDER_BY_COMPANY_ID = " ORDER BY cc.CompId ASC";
  public static final String GET_ACHFI_BY_CC_COMPID = "SELECT a.ODFIACHId From ACH_FIInfo a, BPW_Customer b, CC_Company c  Where c.CompId = ? AND c.CustomerId = b.CustomerID  AND b.FIID = a.FIId AND (a.CashConDFI is null OR a.CashConDFI != 'N') AND a.FIStatus != 'CLOSED' Order by a.CashConDFI";
  public static final String GET_SCH_CUTOFF_INFO = "SELECT a.CutOffId, a.FIID, a.InstructionType, a.Frequency, a.Day, a.ProcessTime, a.Extension, a.NextProcessTime, a.LastProcessTime, a.Status, a.SubmittedBy, a.LogId, a.Memo  From SCH_CutOffs a";
  public static final String GET_NEXT_CUTOFF_BY_COMPID_TRANSACTIONTYPE = "SELECT a.CutOffId, a.FIID, a.InstructionType, a.Frequency, a.Day, a.ProcessTime, a.Extension, a.NextProcessTime, a.LastProcessTime, a.Status, a.SubmittedBy, a.LogId, a.Memo  From SCH_CutOffs a, CC_CompanyCutOff b  Where b.CompId = ? AND b.TransactionType = ?  AND a.CutOffId = b.CutOffId AND a.NextProcessTime is not null  Order By a.NextProcessTime ASC";
  public static final String SQL_CC_COMPANY_ACCT = "SELECT a.AcctId, a.CompId, a.TransactionType From CC_CompanyAcct a ";
  public static final String GET_CC_COMPANY_ACCT_BY_ACCTID = "SELECT a.AcctId, a.CompId, a.TransactionType From CC_CompanyAcct a  Where a.AcctId = ?";
  public static final String GET_CC_LOCATION_BY_ID_BANKRTN_ACCT_NUM = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc  Where cc.CCLocationId = ? AND cc.BankRtn = ? AND cc.AccountNum = ? AND cc.Status !='CANCELEDON'";
  public static final String ADD_CC_LOCATION = "INSERT into CC_Location (LocationId, LocationName, CCLocationId, CompId, ConcentrateAcctId, DisburseAcctId, BankRtn, BankName, AccountNum, AccountType, DepositMin, DepositMax, AnticipatoryDepos, ThresholdDeposAmt, ConsolidateDepos, DepositPrenote,  DisbursePrenote, Memo, Status, LogId, LastRequestTime, SubmittedBy, AgentId, AgentType )  Values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String GET_ACTIVE_TRANSACTION_FOR_LOCATION = "SELECT count(loc.LocationId) FROM CC_Entry entry, CC_Location loc  WHERE entry.LocationId = loc.LocationId AND loc.LocationId = ?  AND entry.Status = 'WILLPROCESSON' AND loc.Status != 'CANCELEDON'";
  public static final String UPDATE_CC_LOCATION_STATUS = "Update CC_Location set Status = ? Where LocationId = ?  AND Status != 'CANCELEDON'";
  public static final String UPDATE_CC_LOCATION = "Update CC_Location set LocationName = ? , CCLocationId = ?, CompId = ?, ConcentrateAcctId = ?, DisburseAcctId = ?, BankRtn = ?, BankName = ?, AccountNum = ?, AccountType = ?, DepositMin = ?, DepositMax = ?, AnticipatoryDepos = ?, ThresholdDeposAmt = ?, ConsolidateDepos = ?, DepositPrenote = ?, DepPrenoteStatus = ?, DisbursePrenote = ?, DisPrenoteStatus = ?, Memo = ?, Status = ?, AgentId = ?, AgentType = ?  Where LocationId = ?  AND Status != 'CANCELEDON'";
  public static final String GET_CC_LOCATION_BY_LOCATION_ID = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc  Where cc.LocationId = ?  AND cc.Status !='CANCELEDON'";
  public static final String GET_CC_LOCATION_LIST = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc  Where cc.Status != 'CANCELEDON'";
  public static final String GET_CC_LOCATION_LIST_WITH_FIID = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc , CC_Company comp, BPW_Customer cust  Where cc.Status != 'CANCELEDON' AND cc.CompId = comp.CompId  AND cust.CustomerID = comp.CustomerId ";
  public static final String GET_CC_LOCATION_LIST_WITH_CUST_ID = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc , CC_Company comp  Where cc.Status != 'CANCELEDON' AND comp.CompId = cc.CompId ";
  public static final String SQL_GET_CC_LOCATION_BY_FIID = " AND cust.FIID = ? ";
  public static final String SQL_GET_CC_LOCATION_BY_CUSTOMERID = " AND comp.CustomerId = ? ";
  public static final String SQL_GET_CC_LOCATION_BY_COMPID = " AND cc.CompId = ? ";
  public static final String SQL_GET_CC_LOCATION_BY_CONC_ACCT_ID = " AND cc.ConcentrateAcctId = ? ";
  public static final String SQL_GET_CC_LOCATION_BY_DISB_ACCT_ID = " AND cc.DisburseAcctId = ? ";
  public static final String SQL_GET_CC_LOCATION_BY_LOCATIONIDS = " AND cc.LocationId in (";
  public static final String SQL_GET_CC_LOCATION_WITH_START_LOCATION_ID = " AND cc.LocationId > ?";
  public static final String SQL_GET_CC_LOCATION_ORDER_BY_LOCATION_ID = " ORDER BY cc.LocationId ASC";
  public static final String SQL_GET_CC_COMPANY_ACCT_BY_COMPID = " AND a.CompId = ?";
  public static final String SQL_GET_CC_COMPANY_ACCT_BY_TRAN_TYPE = " AND a.TransactionType = ?";
  public static final String GET_CUTOFF_ACHFI = "SELECT ACHFIId, ODFIACHId, FIId, ODFIName, RDFIACHId, RDFIName,  SubmitDate, ActivationDate, FIStatus, LogId, Memo, CashConDFI  FROM ACH_FIInfo WHERE FIId = ? AND (CashConDFI is null OR CashConDFI != 'N') Order By CashConDFI";
  public static final String SQL_CC_ENTRY = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b WHERE a.LocationId = b.LocationId ";
  public static final String GET_UNPROCESSED_ENTRIES = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier  From CC_Entry a WHERE a.LocationId = ? AND a.Status ='WILLPROCESSON' AND a.LastProcessId is null AND a.TransactionType = ? AND  a.DueDate <= ? ";
  public static final String GET_PROCESSED_ENTRIES = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier  From CC_Entry a WHERE  a.Status ='POSTEDON' AND a.LocationId = ? AND a.DueDate <= ? AND a.LastProcessId = ? AND a.TransactionType = ? ";
  public static final String ADD_CC_COMPANY_ACCT = "INSERT into CC_CompanyAcct (AcctId, CompId, TransactionType)  Values (?, ?, ?)";
  public static final String GET_ACTIVE_LOCATION_FOR_COMPANY_ACCT = "SELECT count(a.LocationId) From CC_Location a, CC_CompanyAcct b  Where b.CompId = a.CompId AND b.AcctId = ?  AND (b.AcctId = a.ConcentrateAcctId OR b.AcctId = a.DisburseAcctId )  AND a.Status != 'CANCELEDON'";
  public static final String DELETE_CC_COMPANY_ACCT_BY_ACCTID = "Delete from CC_CompanyAcct WHERE AcctId = ? ";
  public static final String UPDATE_CC_COMPANY_ACCT = "UPDATE CC_CompanyAcct set CompId = ?, TransactionType = ? Where AcctId = ?";
  public static final String ADD_CC_COMPANY_CUTOFF = "INSERT into CC_CompanyCutOff (CompCutOffId, CutOffId, CompId, TransactionType) Values (?, ?, ?, ?)";
  public static final String SQL_CC_COMPANY_CUTOFF = "SELECT a.CompCutOffId, a.CutOffId, a.CompId, a.TransactionType  From CC_CompanyCutOff a ";
  public static final String GET_CC_COMPANY_CUTOFF_BY_CUTOFF_ID = "SELECT a.CompCutOffId, a.CutOffId, a.CompId, a.TransactionType  From CC_CompanyCutOff a  Where a.CompCutOffId = ?";
  public static final String GET_LAST_CUTOFF_FOR_COMPID = "SELECT count(sch.CutOffId) FROM SCH_CutOffs sch, CC_CompanyCutOff cCutOff, CC_Entry entry, CC_Location loc  WHERE sch.Status='ACTIVE'  AND cCutOff.CutOffId = sch.CutOffId AND cCutOff.CompCutOffId = ?  AND cCutOff.CompId = loc.CompId AND entry.LocationId = loc.LocationId  AND entry.Status = 'WILLPROCESSON'";
  public static final String DELETE_COMPANY_CUTOFF_BY_COMPCUTOFFID = "Delete from CC_CompanyCutOff Where CompCutOffId = ?";
  public static final String GET_COMPANYCUTOFF_BY_COMPID_CUTOFFID_TRANTYPE = "SELECT a.CompCutOffId, a.CutOffId, a.CompId, a.TransactionType  From CC_CompanyCutOff a  Where a.CompId = ? AND a.CutOffId = ?  AND a.TransactionType = ?";
  public static final String GET_CC_COMPANY_CUTOFF_LIST = "SELECT a.CompCutOffId, a.CutOffId, a.CompId, a.TransactionType  From CC_CompanyCutOff a , CC_Company b  Where b.Status != 'CANCELEDON' AND a.CompId = b.CompId ";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_BY_COMPCUTOFFID = " AND a.CompCutOffId = ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_BY_COMPID = " AND a.CompId = ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_BY_CUTOFFID = " AND a.CutOffId = ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_BY_CUSTID = " AND b.CustomerId = ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_BY_TRANTYPE = " AND a.TransactionType = ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_WITH_START_COMPID = " AND a.CompId > ?";
  public static final String SQL_GET_CC_COMPANY_CUTOFF_ORDER_BY_COMPID = " ORDER BY a.CompId ASC";
  public static final String GET_CC_COMPANY_ACCT_LIST = "SELECT a.AcctId, a.CompId, a.TransactionType From CC_CompanyAcct a , CC_Company b  Where a.CompId = b.CompId AND b.Status != 'CANCELEDON'";
  public static final String SQL_GET_CC_COMPANY_ACCT_BY_CUSTID = " AND b.CustomerId = ?";
  public static final String SQL_GET_CC_COMPANY_ACCT_BY_TRANTYPE = " AND a.TransactionType = ?";
  public static final String GET_CUTOFF_COUNT_FOR_COMPANY = "SELECT count(CompId) from CC_CompanyCutOff Where CompId = ?";
  public static final String GET_CC_COMPANY_ACCT_BY_COMPID = "SELECT a.AcctId, a.CompId, a.TransactionType From CC_CompanyAcct a  Where a.CompId = ?";
  public static final String ADD_CC_ENTRY = "INSERT into CC_Entry (EntryId, LocationId, Amount, DueDate, WillProcessTime, ProcessedTime, TransactionType, Memo, CreatedDate, EntryCategory, Status, SubmittedBy, LastProcessId, LogId, LastModifier ) Values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String UPDATE_CC_ENTRY_STATUS = "UPDATE CC_Entry set Status = ? Where EntryId = ?  AND Status != 'CANCELEDON'";
  public static final String UPDATE_CC_ENTRY = "UPDATE CC_Entry set LocationId = ?, Amount = ?, DueDate =?, WillProcessTime = ?, ProcessedTime = ?, TransactionType = ?, Memo =?, EntryCategory =?,  Status = ?, LastModifier = ?  Where EntryId = ?";
  public static final String GET_CC_ENTRY_BY_ENTRYID = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b WHERE a.LocationId = b.LocationId  AND a.EntryId = ? AND a.Status !='CANCELEDON'";
  public static final String GET_ANY_CC_ENTRY_BY_ENTRYID = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b WHERE a.LocationId = b.LocationId  AND a.EntryId = ? ";
  public static final String GET_CC_ENTRIES_BY_LOCATION_CATEGORY_STATUS_AND_TRANS_TYPE = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b WHERE a.LocationId = b.LocationId  AND a.LocationId = ? AND a.EntryCategory = ? AND a.Status = ?  AND a.TransactionType = ? ORDER BY a.CreatedDate";
  public static final String SQL_CC_ENTRY_HIST = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b ";
  public static final String GET_CC_ENTRY_HIST_WITH_FIID = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b , CC_Company c, BPW_Customer d  Where a.LocationId = b.LocationId AND b.CompId = c.CompId  AND c.CustomerId = d.CustomerID ";
  public static final String GET_CC_ENTRY_HIST_WITH_CUSTID_OR_COMPID = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b , CC_Company c  Where a.LocationId = b.LocationId AND b.CompId = c.CompId ";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_FIID = " AND d.FIID = ?";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_CUSTID = " AND c.CustomerId = ?";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_COMPID = " AND c.CompId = ?";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_STARTDATE = " AND a.DueDate >= ?";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_ENDDATE = " AND a.DueDate <= ?";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_LOCATIONID_LIST = " AND a.LocationId IN (";
  public static final String GET_CC_ENTRY_HIST = "SELECT a.EntryId, a.LocationId, a.Amount, a.DueDate, a.WillProcessTime,a.ProcessedTime, a.TransactionType, a.Memo, a.CreatedDate, a.EntryCategory,a.Status, a.SubmittedBy, a.LastProcessId, a.LogId, a.LastModifier, b.CompId  From CC_Entry a, CC_Location b WHERE a.LocationId = b.LocationId  AND a.Status is not null ";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_TRANTYPES = " AND a.TransactionType IN (";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_CATEGORY_LIST = " AND a.EntryCategory IN (";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_STATUS_LIST = " AND a.Status IN (";
  public static final String SQL_GET_CC_ENTRY_HIST_WITH_SUBMITTED_BY = " AND a.SubmittedBy = ? ";
  public static final String ADD_CC_BATCH_HIST = "INSERT INTO CC_BatchHist (BatchHistId, CompId, ProcessId, EffectEntryDate,BatchNumber, NumOfDeposit, NumOfDisburse, TotalCreditAmt, TotalDebitAmt, TransactionType) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
  public static final String GET_CC_ENTRY_SUMMARY = "SELECT a.Amount Amount, a.TransactionType,  c.CompId, b.LocationId, d.CustomerID  FROM CC_Entry a, CC_Location b, CC_Company c, BPW_Customer d  Where a.LocationId = b.LocationId AND b.CompId = c.CompId  AND c.CustomerId = d.CustomerID  AND a.Status != 'CANCELEDON'";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_FIID = " AND d.FIID = ?";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_CUSTID = " AND c.CustomerId = ?";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_COMPID = " AND c.CompId = ?";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_LOCATIONID_LIST = " AND a.LocationId IN (";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_TRANTYPES = " AND a.TransactionType IN (";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_CATEGORY_LIST = " AND a.EntryCategory IN (";
  public static final String CLAUSE_GET_CC_ENTRY_SUMMARY_WITH_STATUS_LIST = " AND a.Status IN (";
  public static final String CLAUSE_ENTRY_SUMMARY_GROUP_BY_TRAN_TYPE = " Group By d.CustomerId, c.CompId, b.LocationId, a.TransactionType ";
  public static final String CLAUSE_ENTRY_SUMMARY_ORDER_BY_TRAN_TYPE = " Order By d.CustomerId, c.CompId, b.LocationId, a.TransactionType ";
  public static final String UPDATE_CC_ENTRY_LASTPROCESSID_PROCESSTIME_STATUS = "UPDATE CC_Entry set LastProcessId = ?, ProcessedTime = ?, Status = ?  Where EntryId = ? AND Status != 'CANCELEDON'";
  public static final String UPDATE_CC_LOCATION_DEPOSIT_PRENOTE_PART = "UPDATE CC_Location set DepPrenoteStatus = ? ";
  public static final String CLAUSE_UPDATE_DEPOSIT_PRENOTE_DATE = ", DepPrenSubDate = ? ";
  public static final String CLAUSE_UPDATE_BY_LOCATION_ID = " Where LocationId = ?";
  public static final String UPDATE_CC_LOCATION_DISBURSE_PRENOTE_PART = "UPDATE CC_Location set DisPrenoteStatus = ? ";
  public static final String CLAUSE_UPDATE_DISBURSE_PRENOTE_DATE = ", DisPrenSubDate = ? ";
  public static final String UPDATE_CC_LOCATION_LAST_REQUEST_TIME = "UPDATE CC_Location set LastRequestTime = ? Where LocationId =? ";
  public static final String GET_RECXFERXTRAINFO_VALUE = "SELECT Value FROM BPW_RecXferExtraInfo WHERE RecSrvrTID = ? AND Name = ? ";
  public static final String GET_ALLRECXFERXTRAINFO_RECSRVRTID = "SELECT Name,Value FROM BPW_RecXferExtraInfo WHERE RecSrvrTID = ?";
  public static final String ADD_RECXFERXTRAINFO = "INSERT INTO  BPW_RecXferExtraInfo (RecSrvrTID,Name,Value) VALUES (?,?,?)";
  public static final String MOD_RECXFERXTRAINFO = "UPDATE BPW_RecXferExtraInfo set Value = ? WHERE RecSrvrTID = ? AND Name = ? ";
  public static final String DEL_RECXFERXTRAINFO_BY_RECSRVRTID = "DELETE FROM BPW_RecXferExtraInfo WHERE RecSrvrTID = ? And Name = ?";
  public static final String DEL_ALLRECXFERXTRAINFO_BY_RECSRVRTID = "DELETE FROM BPW_RecXferExtraInfo WHERE RecSrvrTID = ?";
  public static final String GET_COMBINE_CC_COMP_ACCT_BY_COMPID_BANKRTN_ACCTNUM_TRANSTYPE = "SELECT a.AcctId FROM BPW_BankAcct a, CC_CompanyAcct b  WHERE b.CompId = ? AND a.BankRTN = ? AND a.AcctNumber = ? AND b.TransactionType = ? AND a.AcctId = b.AcctId  AND a.AcctStatus != 'CLOSED' ";
  public static final String SQL_PURGE_ACH_BATCH = "DELETE FROM ACH_Batch WHERE (BatchStatus = 'POSTEDON' AND DueDate <= ? AND BatchCategory = ? AND CompId IN (SELECT B.CompId FROM ACH_Company B WHERE B.CustomerId = ?))";
  public static final String SQL_PURGE_ACH_BATCH_ALLCUSTOMERS = "DELETE FROM ACH_Batch WHERE (BatchStatus = 'POSTEDON' AND DueDate <= ? AND BatchCategory = ? AND CompId IN (SELECT B.CompId FROM ACH_Company B ))";
  public static final String SQL_PURGE_ACH_RECBATCH = "DELETE FROM ACH_RecBatch WHERE (BatchStatus = 'POSTEDON' AND StartDate <= ? AND BatchCategory = ? AND CompId IN (SELECT B.CompId FROM ACH_Company B WHERE B.CustomerId = ?))";
  public static final String SQL_PURGE_ACH_RECBATCH_ALLCUSTOMERS = "DELETE FROM ACH_RecBatch WHERE (BatchStatus = 'POSTEDON' AND StartDate <= ? AND BatchCategory = ? AND CompId IN (SELECT B.CompId FROM ACH_Company B ))";
  public static final String SQL_PURGE_ACH_RECORDS = "DELETE FROM ACH_Record WHERE (BatchId IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C WHERE C.CustomerId = ?)))";
  public static final String SQL_PURGE_ACH_RECORDS_ALLCUSTOMERS = "DELETE FROM ACH_Record WHERE (BatchId IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C )))";
  public static final String SQL_PURGE_ACH_RECRECORDS = "DELETE FROM ACH_RecRecord WHERE (BatchId IN (SELECT B.RecBatchId FROM ACH_RecBatch B WHERE B.BatchStatus = 'POSTEDON' AND B.StartDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C WHERE C.CustomerId = ?)))";
  public static final String SQL_PURGE_ACH_RECRECORDS_ALLCUSTOMERS = "DELETE FROM ACH_RecRecord WHERE (BatchId IN (SELECT B.RecBatchId FROM ACH_RecBatch B WHERE B.BatchStatus = 'POSTEDON' AND B.StartDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C )))";
  public static final String SQL_PURGE_ACH_ADDENDAS = "DELETE FROM ACH_Addenda WHERE RecordId IN (SELECT B.RecordId FROM ACH_Record B WHERE (B.BatchId IN (SELECT C.BatchId FROM ACH_Batch C WHERE C.BatchStatus = 'POSTEDON' AND C.DueDate <= ? AND C.BatchCategory = ? AND C.CompId IN (SELECT D.CompId FROM ACH_Company D WHERE D.CustomerId = ?))))";
  public static final String SQL_PURGE_ACH_ADDENDAS_ALLCUSTOMERS = "DELETE FROM ACH_Addenda WHERE RecordId IN (SELECT B.RecordId FROM ACH_Record B WHERE (B.BatchId IN (SELECT C.BatchId FROM ACH_Batch C WHERE C.BatchStatus = 'POSTEDON' AND C.DueDate <= ? AND C.BatchCategory = ? AND C.CompId IN (SELECT D.CompId FROM ACH_Company D ))))";
  public static final String SQL_PURGE_ACH_RECADDENDAS = "DELETE FROM ACH_RecAddenda WHERE RecordId IN (SELECT B.RecRecordId FROM ACH_RecRecord B WHERE (B.BatchId IN (SELECT C.RecBatchId FROM ACH_RecBatch C WHERE C.BatchStatus = 'POSTEDON' AND C.StartDate <= ? AND C.BatchCategory = ? AND C.CompId IN (SELECT D.CompId FROM ACH_Company D WHERE D.CustomerId = ?))))";
  public static final String SQL_PURGE_ACH_RECADDENDAS_ALLCUSTOMERS = "DELETE FROM ACH_RecAddenda WHERE RecordId IN (SELECT B.RecRecordId FROM ACH_RecRecord B WHERE (B.BatchId IN (SELECT C.RecBatchId FROM ACH_RecBatch C WHERE C.BatchStatus = 'POSTEDON' AND C.StartDate <= ? AND C.BatchCategory = ? AND C.CompId IN (SELECT D.CompId FROM ACH_Company D ))))";
  public static final String SQL_ADD_CLEANUPREQUEST_BPW_CLEANUPREQ = "INSERT INTO BPW_CleanupReq (CustomerId,PaymentTypeList,AgeInDaysList,Memo) VALUES (?,?,?,?)";
  public static final String SQL_DELETE_CLEANUPREQUEST_BPW_CLEANUPREQ = "DELETE FROM BPW_CleanupReq WHERE CustomerId=?";
  public static final String SQL_GET_CLEANUPREQUEST_BY_ID_BPW_CLEANUPREQ = "SELECT CustomerId,PaymentTypeList,AgeInDaysList,Memo FROM BPW_CleanupReq WHERE CustomerId=?";
  public static final String SQL_GET_ALL_CLEANUPREQUESTS_BPW_CLEANUPREQ = "SELECT CustomerId, PaymentTypeList,AgeInDaysList,Memo FROM BPW_CleanupReq";
  public static final String SQL_GETCOUNT_CLEANUPREQUEST_BPW_CLEANUPREQ = "COUNT(CustomerId) FROM BPW_CleanupReq";
  public static final String SQL_DELETEALL_CLEANUPREQUEST_BPW_CLEANUPREQ = "DELETE FROM BPW_CleanupReq";
  public static final String SQL_DELETEONE_CLEANUPREQUEST_BPW_CLEANUPREQ = "DELETE FROM BPW_CleanupReq WHERE CustomerId=? AND PaymentTypeList=? AND AgeInDaysList=?";
  public static final String SQL_DELETEONE_NULLCUST_CLEANUPREQUEST_BPW_CLEANUPREQ = "DELETE FROM BPW_CleanupReq WHERE CustomerId is null AND PaymentTypeList=? AND AgeInDaysList=?";
  public static final String SQL_PURGE_CC_ENTRY = "DELETE FROM CC_Entry WHERE (Status = 'POSTEDON' AND ProcessedTime <= ? AND LocationId IN (SELECT D.LocationId FROM BPW_Customer B, CC_Company C, CC_Location D WHERE B.CustomerID = C.CustomerId AND C.CompId = D.CompId AND B.CustomerID = ?))";
  public static final String SQL_PURGE_CC_ENTRY_ALLCUSTOMERS = "DELETE FROM CC_Entry WHERE (Status = 'POSTEDON' AND ProcessedTime <= ? AND LocationId IN (SELECT D.LocationId FROM BPW_Customer B, CC_Company C, CC_Location D WHERE B.CustomerID = C.CustomerId AND C.CompId = D.CompId))";
  public static final String SQL_PURGE_CC_BATCHHIST = "DELETE FROM CC_BatchHist WHERE (EffectEntryDate <= ? AND CompId IN (SELECT C.CompId FROM BPW_Customer B, CC_Company C WHERE B.CustomerID = C.CustomerId AND B.CustomerID = ?))";
  public static final String SQL_PURGE_CC_BATCHHIST_ALLCUSTOMERS = "DELETE FROM CC_BatchHist WHERE (EffectEntryDate <= ? AND CompId IN (SELECT C.CompId FROM BPW_Customer B, CC_Company C WHERE B.CustomerID = C.CustomerId))";
  public static final String SQL_PURGE_ACH_BATCH_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog WHERE InstructionType = 'ACHBATCHTRN' AND (InstructionID IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C WHERE C.CustomerId = ?)))";
  public static final String SQL_PURGE_ACH_BATCH_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog WHERE InstructionType = 'ACHBATCHTRN' AND (InstructionID IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C )))";
  public static final String SQL_PURGE_ACH_RECBATCH_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog WHERE InstructionType = 'RECACHBATCHTRN' AND (InstructionID IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C WHERE C.CustomerId = ?)))";
  public static final String SQL_PURGE_ACH_RECBATCH_SCH_EVENTINFOLOG_ALLCUSTOMERS = "DELETE FROM SCH_EventInfoLog WHERE InstructionType = 'RECACHBATCHTRN' AND (InstructionID IN (SELECT B.BatchId FROM ACH_Batch B WHERE B.BatchStatus = 'POSTEDON' AND B.DueDate <= ? AND B.BatchCategory = ? AND B.CompId IN (SELECT C.CompId FROM ACH_Company C )))";
  public static final String SQL_PURGE_ACH_FILE = "DELETE FROM ACH_File WHERE (FileStatus = 'POSTEDON' AND DueDate <= ? AND CustomerId = ?)";
  public static final String SQL_PURGE_ACH_FLATFILE = "DELETE FROM ACH_FlatFile WHERE (FileId IN (SELECT B.FileId FROM ACH_File B WHERE B.FileStatus = 'POSTEDON' AND B.DueDate <= ? AND B.CustomerId = ?))";
  public static final String SQL_PURGE_ACH_FILEBATCH = "DELETE FROM ACH_FileBatch WHERE (FileId IN (SELECT B.FileId FROM ACH_File B WHERE B.FileStatus = 'POSTEDON' AND B.DueDate <= ? AND B.CustomerId = ?))";
  public static final String SQL_PURGE_ACH_FILEENTRY = "DELETE FROM ACH_FileEntry WHERE (BatchId IN (SELECT B.BatchId FROM ACH_FileBatch B WHERE (B.FileId IN (SELECT C.FileId FROM ACH_File C WHERE C.FileStatus = 'POSTEDON' AND C.DueDate <= ? AND C.CustomerId = ?))))";
  public static final String SQL_PURGE_ACH_FILE_SCH_EVENTINFOLOG = "DELETE FROM SCH_EventInfoLog WHERE (InstructionID IN (SELECT B.FileId FROM ACH_File B WHERE B.FileStatus = 'POSTEDON' AND B.DueDate <= ? AND B.CustomerId = ?))";
  public static final String SQL_GET_BATCHID_ACH_RECBATCH = "SELECT A.RecBatchId FROM ACH_RecBatch A WHERE (A.BatchStatus = 'POSTEDON' AND A.StartDate <= ? AND A.CompId IN (SELECT B.CompId FROM ACH_Company B WHERE B.CustomerId = ?))";
  public static final String SQL_GET_BATCHID_ACH_RECBATCH_ALLCUSTOMERS = "SELECT A.RecBatchId FROM ACH_RecBatch A WHERE (A.BatchStatus = 'POSTEDON' AND A.StartDate <= ? AND A.CompId IN (SELECT B.CompId FROM ACH_Company B ))";
  public static final String ADD_ACH_FILEBATCH = "INSERT into ACH_FileBatch (BatchId, FileId, CompanyName, CompanyIdentification,StdEntryClassCode, EffectiveEntryDate, EntryAddendaCount, TotalDebits,NumberOfDebits, TotalCredits, NumberOfCredits, BatchNumber )  Values (?,?,?,?,?,?,?,?,?,?,?,?) ";
  public static final String ADD_ACH_FILEENTRY = "INSERT into ACH_FileEntry (EntryId, BatchId, TransactionCode, RecvDFIIdentification,DFIAccountNumber, RcvCompIndvName, IdentificationNumber, Amount,TraceNumber)  Values (?,?,?,?,?,?,?,?,?) ";
  public static final String UPDATE_FILE_BATCH_NUMBER_OF_CREDIT_DEBIT = "UPDATE ACH_FileBatch set NumberOfCredits = ?, NumberOfDebits = ? Where BatchId = ?";
  public static final String UPDATE_ACH_FILE_NUMBER_OF_CREDIT_DEBIT = "UPDATE ACH_File set NumberOfCredits = ?, NumberOfDebits = ? Where FileId = ?";
  public static final String GET_FIIID_FOR_THIS_ENTRY = "SELECT cust.FIID from BPW_Customer cust, CC_Company comp, CC_Location loc  Where loc.CompId = comp.CompId  AND comp.CustomerId = cust.CustomerID  AND loc.LocationId = ? AND loc.Status != 'CANCELEDON'";
  public static final String GET_MATURED_DEPOSIT_CC_LOCATION_INFO = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc  WHERE DepPrenoteStatus = 'Pending' AND DepPrenSubDate IS NOT NULL  AND DepPrenSubDate < ?";
  public static final String UPDATE_MATURED_DEPOSIT_PRENOTE_LOCATION = "UPDATE CC_Location SET DepPrenoteStatus = 'Success' WHERE DepPrenoteStatus = 'Pending' AND DepPrenSubDate IS NOT NULL  AND DepPrenSubDate < ?";
  public static final String GET_MATURED_DISBURSEMENT_CC_LOCATION_INFO = "SELECT cc.LocationId, cc.LocationName, cc.CCLocationId, cc.CompId, cc.ConcentrateAcctId, cc.DisburseAcctId, cc.BankRtn, cc.BankName, cc.AccountNum, cc.AccountType, cc.DepositMin, cc.DepositMax, cc.AnticipatoryDepos, cc.ThresholdDeposAmt, cc.ConsolidateDepos, cc.DepositPrenote, cc.DepPrenSubDate, cc.DepPrenoteStatus, cc.DisbursePrenote, cc.DisPrenSubDate, cc.DisPrenoteStatus, cc.Memo, cc.Status, cc.LogId, cc.LastRequestTime, cc.SubmittedBy, cc.AgentId, cc.AgentType  FROM CC_Location cc  WHERE DisPrenoteStatus = 'Pending' AND DisPrenSubDate IS NOT NULL  AND DisPrenSubDate < ?";
  public static final String UPDATE_MATURED_DISBURSEMENT_PRENOTE_LOCATION = "UPDATE CC_Location SET DisPrenoteStatus = 'Success' WHERE DisPrenoteStatus = 'Pending' AND DisPrenSubDate IS NOT NULL  AND DisPrenSubDate < ?";
  public static final String UPDATE_MATURED_EXT_ACCOUNT_PRENOTE_STATUS = "UPDATE ETF_ExternalAcct  SET PrenoteStatus = 'Success' WHERE ( (CustomerId IN (SELECT CustomerID FROM BPW_Customer b WHERE b.FIID = ?)) OR (AcctId IN (SELECT AccountFromId FROM BPW_Transfer c  WHERE c.FIId = ?)) OR (AcctId IN (SELECT ExternalAcctId FROM BPW_Transfer d WHERE  d.FIId = ?)) ) AND PrenoteStatus = 'Pending' AND PrenoteSubDate IS NOT NULL  AND PrenoteSubDate < ?";
  public static final String GET_MATURED_EXT_TRANSFER_ACCT_INFO = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a , BPW_Customer b, BPW_Transfer c WHERE ( (a.CustomerId = b.CustomerID AND b.FIID = ?) OR   ( (a.AcctId = c.ExternalAcctId OR a.AcctId = c.AccountFromId) AND c.FIId = ? ) )   AND a.PrenoteStatus = 'Pending' AND a.PrenoteSubDate IS NOT NULL AND PrenoteSubDate < ?";
  public static final String GET_UNMATURED_EXT_TRANSFER_ACCT_INFO = "SELECT a.AcctId, a.CustomerId, a.NickName, a.AcctNum, a.AcctType, a.AcctBankRtn, a.AcctScope, a.AcctDest, a.AcctCategory, a.BankRtnType, a.RecipientId, a.RecipientType, a.RecipientName, a.Prenote, a.PrenoteStatus, a.PrenoteSubDate, a.PrenoteType, a.SubmittedBy, a.CreateDate, a.LogId, a.Status, a.VerifyStatus, a.VerifyFailedCount, a.AgreedToTerms, a.DepositDate, a.PrimaryAcctHolder, a.SecondaryAcctHolder, a.CheckNum FROM ETF_ExternalAcct a , BPW_Customer b, BPW_Transfer c  WHERE  ( (a.CustomerId = b.CustomerID AND b.FIID = ?) OR    ( (a.AcctId = c.ExternalAcctId OR a.AcctId = c.AccountFromId) AND c.FIId = ? ) )   AND a.Prenote = 'Y' AND a.PrenoteStatus is null ";
  public static final String GET_ETF_COMPANY_LIST_BY_FIID_FIXED = "SELECT a.CompId, a.FIId, a.CustomerId, a.CompName, a.CompACHId, a.CompDescription, a.SubmittedBy, a.CreateDate, a.LogId, a.Status FROM ETF_Company a , BPW_Customer cust  Where a.Status != 'CANCELEDON' AND a.CustomerId = cust.CustomerID ";
  public static final String SQL_GET_ETF_COMPANY_BY_FIID = " AND cust.FIID = ?";
  public static final String SQL_GET_ETF_COMPANY_WITH_START_COMPID = " AND a.CompId > ?";
  public static final String SQL_GET_ETF_COMPANY_ORDER_BY_COMPID = " ORDER BY a.CompId ASC";
  public static final String GET_ACTIVE_ACH_BATCH_TRANSACTION_FOR_THIS_COMPANY = "SELECT BatchId from ACH_Batch  WHERE CompId = ? AND BatchStatus IN (?, ?) ";
  public static final String GET_ACTIVE_ACH_RECBATCH_TRANSACTION_FOR_THIS_COMPANY = "SELECT RecBatchId from ACH_RecBatch  WHERE CompId = ? AND BatchStatus IN (?, ?) ";
  public static final String GET_SAMEDAYEFFDATE_BY_OBJID_AND_OBJTYPE = "SELECT SECs from ACH_SameDayEffDate  WHERE ObjectId = ? AND ObjectType = ? ";
  public static final String DELETE_SAMEDAYEFFDATE_BY_OBJID_AND_OBJTYPE = "DELETE from ACH_SameDayEffDate  WHERE ObjectId = ? AND ObjectType = ? ";
  public static final String UPDATE_SAMEDAYEFFDATE_BY_OBJID_AND_OBJTYPE = "UPDATE ACH_SameDayEffDate Set SECs = ?  WHERE ObjectId = ? AND ObjectType = ? ";
  public static final String ADD_SAMEDAYEFFDATE = "INSERT into ACH_SameDayEffDate (ObjectId, ObjectType, SECs) values (?, ?, ? )";
  public static final String ADD_ACHTEMPHIST = "INSERT INTO BPW_ACHTempHist (SessionId, CursorId, TransactionId, TransactionType,DueDate, BatchName, CompACHId, NumberOfEntries, Frequency, Status, TotalCredit,TotalDebit, SubmitDate) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_OLD_ACHTEMPHIST = "DELETE FROM BPW_ACHTempHist WHERE SubmitDate < ?";
  public static final String ADD_CASHCONTEMPHIST = "INSERT INTO BPW_CashConTempHist (SessionId, CursorId, TransactionId, TransactionType,DueDate, Division, Location, Type, Status, Amount, SubmitDate) VALUES(?,?,?,?,?,?,?,?,?,?,?)";
  public static final String DELETE_OLD_CASHCONTEMPHIST = "DELETE FROM BPW_CashConTempHist WHERE SubmitDate < ?";
  public static final String CONDITION_PROCESSED_TRANSFER = " (LastProcessId = ? AND Status = 'POSTEDON' AND ProcessNumber < ?) ";
  public static final String CONDITION_PROCESSED_AND_INPROCESS_TRANSFER = " (LastProcessId = ? AND (Status = 'POSTEDON' OR Status = 'INPROCESS') AND ProcessNumber < ?) ";
  public static final String CONDITION_UNPROCESSED_TRANSFER = " ( ((DateToPost >= ? AND ProcessDate <= ?) OR DateToPost < ?) AND ((Status = 'WILLPROCESSON' AND LastProcessId is null AND FundsProcessing = 1) OR Status = 'FUNDSPROCESSED') AND (ProcessNumber = 0) ) ";
  public static final String GET_PROCESSED_TRANSFER_BY_FIID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE FIId = ? AND  (LastProcessId = ? AND Status = 'POSTEDON' AND ProcessNumber < ?)  ORDER BY TransferDest";
  public static final String GET_UNPROCESSED_TRANSFER_BY_FIID_DATETOPOST_PROCESSDATE = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE FIId = ? AND  ( ((DateToPost >= ? AND ProcessDate <= ?) OR DateToPost < ?) AND ((Status = 'WILLPROCESSON' AND LastProcessId is null AND FundsProcessing = 1) OR Status = 'FUNDSPROCESSED') AND (ProcessNumber = 0) )  ORDER BY TransferDest";
  public static final String GET_ALL_TRANSFERS_FOR_BACKEND_BY_FIID = "SELECT SrvrTId, CustomerId, TransferType, TransferDest, TransferGroup, TransferCategory, BankFromRtn, AccountFromNum, AccountFromType, ExternalAcctId, Amount, AmountCurrency, OrigAmount, OrigCurrency, DateCreate, DateDue, DateToPost, DatePosted, LastProcessId, Memo, TemplateScope, TemplateNickName, SourceTemplateId, SourceRecSrvrTId, Status, SubmittedBy, LogId, ProcessLeadNumber, FIId, AccountFromId, ProcessDate, OriginatingUserId, ConfirmMsg, ConfirmNum, FundsProcessing, ProcessType, TypeDetail, LastChangeDate, Action, FundsRetry, BankFromRtnType, ProcessNumber, ToAmount, ToAmountCurrency, UserAssignedAmount  FROM BPW_Transfer  WHERE FIId = ? AND ( (LastProcessId = ? AND (Status = 'POSTEDON' OR Status = 'INPROCESS') AND ProcessNumber < ?)  OR  ( ((DateToPost >= ? AND ProcessDate <= ?) OR DateToPost < ?) AND ((Status = 'WILLPROCESSON' AND LastProcessId is null AND FundsProcessing = 1) OR Status = 'FUNDSPROCESSED') AND (ProcessNumber = 0) ) ) ORDER BY TransferDest";
  public static final String GET_ROUTING_NUMS_FROM_ETF_ROUTE = "SELECT RoutingNumber from ETF_ROUTE";
  public static final String GET_ROUTING_NUMS_FROM_BPW_FIINFO = "SELECT FIRTN FROM BPW_FIInfo";
  public static final String UPDATE_TRANSFER_PROCESSINFO = "UPDATE BPW_Transfer SET LastProcessId = ?, ProcessNumber = ? WHERE SrvrTId = ?";
  public static final String GET_PRENOTE_TRANSFER_BY_PROCESSID = "SELECT transfer.SrvrTId, transfer.CustomerId, transfer.TransferType, transfer.TransferDest, transfer.TransferGroup, transfer.TransferCategory, transfer.BankFromRtn, transfer.AccountFromNum, transfer.AccountFromType, transfer.ExternalAcctId, transfer.Amount, transfer.AmountCurrency, transfer.OrigAmount, transfer.OrigCurrency, transfer.DateCreate, transfer.DateDue, transfer.DateToPost, transfer.DatePosted, transfer.LastProcessId, transfer.Memo, transfer.TemplateScope, transfer.TemplateNickName, transfer.SourceTemplateId, transfer.SourceRecSrvrTId, transfer.Status, transfer.SubmittedBy, transfer.LogId , transfer.ProcessLeadNumber, transfer.FIId, transfer.AccountFromId, transfer.ProcessDate, transfer.OriginatingUserId, transfer.ConfirmMsg, transfer.ConfirmNum, transfer.FundsProcessing, transfer.ProcessType, transfer.TypeDetail, transfer.LastChangeDate, transfer.Action, transfer.FundsRetry, transfer.BankFromRtnType, transfer.ProcessNumber, transfer.ToAmount, transfer.ToAmountCurrency, transfer.UserAssignedAmount FROM BPW_Transfer transfer  Where transfer.LastProcessId = ? AND transfer.TransferCategory = 'PRENOTE_ENTRY' AND ProcessNumber < ? AND Status != 'CANCELEDON'";
  public static final String GET_MAX_PROCESS_NUMBER_BY_PROCESSID = "SELECT MAX(ProcessNumber) FROM BPW_Transfer WHERE LastProcessId = ?";
  public static final String GET_ACH_PASSTHRU_FILE_TOTAL = "select CustomerId, FileStatus, count(*) from ACH_File";
  public static final String GET_ACH_PASSTHRU_BATCH_TOTAL = "select CustomerId, FileStatus, count(*) from ACH_File f, ACH_FileBatch fb where f.FileId = fb.FileId";
  public static final String GET_ACH_BPWGEN_FILE_TOTAL = "select CustomerId, BatchStatus, count(*) from ACH_Company c, ACH_Batch b where c.CompId = b.CompId and ExportFileName is not null and BatchCategory not in ('ACH_BATCH_TAX','ACH_BATCH_CHILD_SUPPORT')";
  public static final String GET_ACH_BPWGEN_BATCH_TOTAL = "select CustomerId, BatchStatus, count(*) from ACH_Company c, ACH_Batch b where c.CompId = b.CompId and BatchCategory not in ('ACH_BATCH_TAX','ACH_BATCH_CHILD_SUPPORT')";
  public static final String GET_ACH_PASSTHRU_PARTICIPANT_TOTAL = "select CustomerId, FileStatus, count(*) from ACH_File f, ACH_FileBatch fb, ACH_FileEntry fe where f.FileId = fb.FileId and fb.BatchId = fe.BatchId";
  public static final String GET_ACH_BPWGEN_PARTICIPANT_TOTAL = "select CustomerId, BatchStatus, count(*) from ACH_Company c, ACH_Batch b, ACH_Record r, ACH_Payee p where c.CompId = b.CompId and b.BatchId = r.BatchId and r.PayeeId = p.PayeeId and BatchCategory not in ('ACH_BATCH_TAX','ACH_BATCH_CHILD_SUPPORT')";
  public static final String GET_EXT_TRANSFERS_TOTAL = "select CustomerId, Status, count(*) from BPW_Transfer";
  public static final String GET_TAX_PAYMENT_TOTAL = "select CustomerId, BatchStatus, count(*) from ACH_Company c, ACH_Batch b where c.CompId = b.CompId and BatchCategory in ('ACH_BATCH_TAX')";
  public static final String GET_CHILD_SUPPORT_PAYMENT_TOTAL = "select CustomerId, BatchStatus, count(*) from ACH_Company c, ACH_Batch b where c.CompId = b.CompId and BatchCategory in ('ACH_BATCH_CHILD_SUPPORT')";
  public static final String GET_CASH_CON_TOTAL = "select CustomerId, e.Status, count(*) from CC_Company c, CC_Location l, CC_Entry e where c.CompId=l.CompId and l.LocationId=e.LocationId";
  public static final String WHERE_ON_AFTER_DTPROCESSED = " where DtProcessed >= ?";
  public static final String WHERE_ON_AFTER_DATEPOSTED = " where DatePosted >= ?";
  public static final String AND_ON_AFTER_DTPROCESSED = " and DtProcessed >= ?";
  public static final String AND_ON_AFTER_PROCESSEDTIME = " and ProcessedTime >= ?";
  public static final String AND_ON_BEFORE_DTPROCESSED = " and DtProcessed <= ?";
  public static final String AND_ON_BEFORE_DATEPOSTED = " and DatePosted <= ?";
  public static final String AND_ON_BEFORE_PROCESSEDTIME = " and ProcessedTime <= ?";
  public static final String AND_EQUALS_CUSTOMERID = " and CustomerId = ?";
  public static final String AND_FILESTATUS_IN = " and FileStatus in (";
  public static final String AND_BATCHSTATUS_IN = " and BatchStatus in (";
  public static final String AND_STATUS_IN = " and Status in (";
  public static final String AND_E_STATUS_IN = " and e.Status in (";
  public static final String AND_CUSTOMERID_IN_FIID_LIST = " and CustomerId in (select CustomerId from BPW_Customer where FIID = ?)";
  public static final String GROUP_BY_CUSTOMERID_FILESTATUS = " group by CustomerId,FileStatus";
  public static final String GROUP_BY_CUSTOMERID_BATCHSTATUS = " group by CustomerId,BatchStatus";
  public static final String GROUP_BY_CUSTOMERID_BATCHSTATUS_EXPORTFILENAME = " group by CustomerId,BatchStatus,ExportFileName";
  public static final String GROUP_BY_CUSTOMERID_STATUS = " group by CustomerId,Status";
  public static final String GROUP_BY_CUSTOMERID_E_STATUS = " group by CustomerId,e.Status";
  public static final String ORDER_BY_CUSTOMERID_FILESTATUS = " order by CustomerId,FileStatus";
  public static final String ORDER_BY_CUSTOMERID_BATCHSTATUS = " order by CustomerId,BatchStatus";
  public static final String ORDER_BY_CUSTOMERID_BATCHSTATUS_EXPORTFILENAME = " order by CustomerId,BatchStatus,ExportFileName";
  public static final String ORDER_BY_CUSTOMERID_STATUS = " order by CustomerId,Status";
  public static final String ORDER_BY_CUSTOMERID_E_STATUS = " order by CustomerId,e.Status";
}


/* Location:           D:\drops\jd\jars\bpwcore.jar
 * Qualified Name:     com.ffusion.ffs.bpw.db.SQLConsts
 * JD-Core Version:    0.7.0.1
 */